<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[webpy]]></title>
    <url>%2F2018%2F06%2F28%2Fwebpy%2F</url>
    <content type="text"><![CDATA[webpy gzip http://yanghao.org/blog/archives/171]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[demo2]]></title>
    <url>%2F2018%2F04%2F18%2Fdemo2%2F</url>
    <content type="text"><![CDATA[aaa bbbwq5 dsfdsf sss]]></content>
      <categories>
        <category>demo</category>
      </categories>
      <tags>
        <tag>demo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[keycode]]></title>
    <url>%2F2018%2F03%2F07%2Fkeycode%2F</url>
    <content type="text"><![CDATA[字母和数字键的键码值(keyCode) 按键 键码 按键 键码 按键 键码 按键 键码 A 65 J 74 S 83 1 49 B 66 K 75 T 84 2 50 C 67 L 76 U 85 3 51 D 68 M 77 V 86 4 52 E 69 N 78 W 87 5 53 F 70 O 79 X 88 6 54 G 71 P 80 Y 89 7 55 H 72 Q 81 Z 90 8 56 I 73 R 82 0 48 9 57 &nbsp; 数字键盘上的键的键码值(keyCode) 功能键键码值(keyCode) 按键 键码 按键 键码 按键 键码 按键 键码 0 96 8 104 F1 112 F7 118 1 97 9 105 F2 113 F8 119 2 98 * 106 F3 114 F9 120 3 99 + 107 F4 115 F10 121 4 100 Enter 108 F5 116 F11 122 5 101 - 109 F6 117 F12 123 6 102 . 110 &nbsp; &nbsp; &nbsp; &nbsp; 7 103 / 111 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 控制键键码值(keyCode) 按键 键码 按键 键码 按键 键码 按键 键码 BackSpace 8 Esc 27 Right Arrow 39 -_ 189 Tab 9 Spacebar 32 Dw Arrow 40 .&gt; 190 Clear 12 Page Up 33 Insert 45 /? 191 Enter 13 Page Down 34 Delete 46 `~ 192 Shift 16 End 35 Num Lock 144 [{ 219 Control 17 Home 36 ;: 186 | 220 Alt 18 Left Arrow 37 =+ 187 ]} 221 Cape Lock 20 Up Arrow 38 ,&lt; 188 '" 222 多媒体键码值(keyCode) 按键 键码 按键 键码 按键 键码 按键 键码 音量加 175 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 音量减 174 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 停止 179 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 静音 173 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 浏览器 172 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 邮件 180 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 搜索 170 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 收藏 171 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>keycode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[五笔]]></title>
    <url>%2F2018%2F03%2F05%2Fwubi%2F</url>
    <content type="text"><![CDATA[五笔字根表_2560x1600]]></content>
      <categories>
        <category>五笔</category>
      </categories>
      <tags>
        <tag>五笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[注册码]]></title>
    <url>%2F2017%2F12%2F18%2Ftools-reg%2F</url>
    <content type="text"><![CDATA[sublime text 3 (2017年12月18日亲测) —– BEGIN LICENSE —– TwitterInc 200 User License EA7E-890007 1D77F72E 390CDD93 4DCBA022 FAF60790 61AA12C0 A37081C5 D0316412 4584D136 94D7F7D4 95BC8C1C 527DA828 560BB037 D1EDDD8C AE7B379F 50C9D69D B35179EF 2FE898C4 8E4277A8 555CE714 E1FB0E43 D5D52613 C3D12E98 BC49967F 7652EED2 9D2D2E61 67610860 6D338B72 5CF95C69 E36B85CC 84991F19 7575D828 470A92AB —— END LICENSE —— mac adobe cc 2015 Adobe CC 2015 亲测可用 链接:https://pan.baidu.com/s/1eUhIbmE 密码:8ik7 ZOC MAC ZOC/PRO 6.59序列号 Part A：26250/01105/21689 Part B：04807 zoc7 51698/01027/34713 00937]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>注册码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IDEA live templates]]></title>
    <url>%2F2017%2F12%2F14%2FIDEA-live-templates%2F</url>
    <content type="text"><![CDATA[xdef 模板内容 @XStreamAlias("$xfield$")private String $field$;$END$ 变量 xfield : 表达式 clipboard() field : 表达式 camelCase(clipboard()) xdef test 模板内容 @Testpublic void test$methodName$()&#123; new Expectations()&#123; &#123; $END$ &#125; &#125;;&#125; 变量 methodName: 表达式 capitalize(clipboard())]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr-ik分词器配置]]></title>
    <url>%2F2017%2F12%2F12%2Fsolr-ik%2F</url>
    <content type="text"><![CDATA[准备 下载solr-4.10.4.zip 下载ik源代码 ik增加solr适配器 导入ik源代码到idea(或eclipse等IDE); 添加lucene依赖jar包(lucene-analyzers-common-4.10.4.jar,lucene-core-4.10.4.jar,lucene-queryparser-4.10.4.jar)，在solr-4.10.4.zip的dist目录下有个solr-4.10.4.war包，这几个jar包可在solr-4.10.4.war的WEB-INF/lib/目录下可以找到; 新建类org.wltea.analyzer.solr.IKTokenizerFactory，代码如下： package org.wltea.analyzer.solr;import java.io.Reader;import java.util.Map;import org.apache.lucene.analysis.Tokenizer;import org.apache.lucene.analysis.util.TokenizerFactory;import org.apache.lucene.util.AttributeFactory;import org.wltea.analyzer.lucene.IKTokenizer;public class IKTokenizerFactory extends TokenizerFactory &#123; private boolean useSmart; public IKTokenizerFactory(Map&lt;String, String&gt; args) &#123; super(args); this.setUseSmart("true".equals(args.get("useSmart"))); &#125; @Override public Tokenizer create(AttributeFactory factory, Reader input) &#123; return new IKTokenizer(input, this.useSmart); &#125; public boolean useSmart() &#123; return useSmart; &#125; public void setUseSmart(boolean useSmart) &#123; this.useSmart = useSmart; &#125;&#125; 重新打包ik分词器为IK-Analyzer-2012FF.jar; solr添加ik分词器配置 将IK-Analyzer-2012FF.jar添加到solr的lib文件夹solr-4.10.4/example/solr-webapp/webapp/WEB-INF/lib; 修改solr自带示例collection1的schema.xml配置文件（位置:solr-4.10.4/example/solr/collection1/schema.xml），增加字段类型如下： &lt;fieldType name="text_ik" class="solr.TextField"&gt; &lt;analyzer type="index"&gt; &lt;tokenizer class="org.wltea.analyzer.solr.IKTokenizerFactory" useSmart="false"/&gt; &lt;filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/&gt; &lt;filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/&gt; &lt;filter class="solr.LowerCaseFilterFactory"/&gt; &lt;/analyzer&gt; &lt;analyzer type="query"&gt; &lt;tokenizer class="org.wltea.analyzer.solr.IKTokenizerFactory" useSmart="true"/&gt; &lt;filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/&gt; &lt;filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/&gt; &lt;filter class="solr.LowerCaseFilterFactory"/&gt; &lt;/analyzer&gt;&lt;/fieldType&gt; 进入目录/Users/bianle/app/solr-4.10.4/bin执行./solr start启动solr 访问控制台http://localhost:8983/solr查看分词效果： ik索引分词效果 ik查询分词效果]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sb3]]></title>
    <url>%2F2017%2F12%2F05%2Fsb3%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[tintin++]]></title>
    <url>%2F2017%2F12%2F04%2Fmud-tintin%2F</url>
    <content type="text"><![CDATA[安装PCRE(Perl Compatible Regular Expressions) http://mac-dev-env.patrickbougie.com/pcre/ cd /usr/local/src (cd ~/app)curl --remote-name ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.41.tar.gztar -xzvf pcre-8.41.tar.gzcd pcre-8.41./configure --prefix=/usr/local/mac-dev-env/pcre-8.41makemake install (sudo make install )sudo ln -s mac-dev-env/pcre-8.41 /usr/local/pcre (sudo ln -s /usr/local/mac-dev-env/pcre-8.41 /usr/local/pcre)echo 'export PATH=/usr/local/pcre/bin:$PATH' &gt;&gt; ~/.bash_profilesource ~/.bash_profilepcre-config --version 拷贝pcre.h到/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include xkx #action &#123;http://pkuxkx.net/antirobot/robot.php%1&#125; &#123;#system open http://pkuxkx.com/antirobot/robot.php%1&#125;]]></content>
      <categories>
        <category>mud</category>
      </categories>
      <tags>
        <tag>mud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mybatis]]></title>
    <url>%2F2017%2F11%2F23%2Fmybatis%2F</url>
    <content type="text"><![CDATA[SpringMVC3.2+Mybatis3.2集成报错 Exception in thread “main” java.lang.AbstractMethodError: org.mybatis.spring.transaction.SpringManagedTransactionFactory.newTransaction(Ljava/sql/Connection;)Lorg/apache/ibatis/transaction/Transaction; at org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSessionFromConnection(DefaultSqlSessionFactory.java:98) at org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSession(DefaultSqlSessionFactory.java:71) at org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:135) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:345) at com.sun.proxy.$Proxy1.selectOne(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:155) at im.le.hello.dao.TestDao.select(TestDao.java:13) at im.le.hello.dao.TestDao.main(TestDao.java:19) 降低mybatis-springmvc插件版本1.0.2-》1.1.1 &lt;dependency&gt;&lt;groupId&gt;org.mybatis&lt;/groupId&gt;&lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;&lt;version&gt;1.1.1&lt;/version&gt;&lt;/dependency&gt;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[html]]></title>
    <url>%2F2017%2F11%2F23%2Fhtml%2F</url>
    <content type="text"><![CDATA[from表达回车键自动提交 form内有且仅有一个非隐藏input输入框焦点在输入框内回车自动提交 &lt;form action="test.html"&gt; &lt;input type="text" /&gt;&lt;/form&gt; 或 &lt;form action="test.html"&gt; &lt;input type="text" /&gt; &lt;input type="hidden" /&gt;&lt;/form&gt; form内有不止一个输入框，回车不自动提交 &lt;form action="test.html"&gt; &lt;input type="text" /&gt; &lt;input type="text" /&gt;&lt;/form&gt; form标签添加onsubmit='return false;'可以阻止自动提交 &lt;form name="fm" action="test.html" onsubmit="return false"&gt; &lt;input type="text" /&gt; &lt;input type="submit" onclick="fm.submit()"/&gt;&lt;/form&gt;]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[fiddler]]></title>
    <url>%2F2017%2F11%2F22%2Ffiddler%2F</url>
    <content type="text"><![CDATA[fiddler无法抓取chrome解决方法 由于我的chrome安装了代理管理的插件SwitchySharp，无论选择直接连接还是选择使用代理连接，插件都会屏蔽fiddler的设置。 http://blog.csdn.net/spring21st/article/details/7662327]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>fiddler</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[逻辑训练]]></title>
    <url>%2F2017%2F11%2F09%2Flogic-train%2F</url>
    <content type="text"><![CDATA[第1题 题目 假设有一个池塘，里面有无穷多的水。现有2个空水壶，容积分别为5升和6升。问题是如何只用这2个水壶从池塘里取得3升的水。 答案 1、先把5升的灌满，倒在6升里，这时6升的壶里有5升水 2.再把5升的灌满，用5升的壶把6升的灌满，这时5升的壶里剩4升水 3.把6升的水倒掉，再把5升壶里剩余的水倒入6升的壶里，这时6升的壶里有4升水 4.把5升壶灌满，倒入6升的壶，5-2=3 第2题 题目 周雯的妈妈是豫林水泥厂的化验员。 一天，周雯来到化验室做作业。做完后想出去玩。 &quot;等等，妈妈还要考你一个题目，“她接着说，“你看这6只做化验用的玻璃杯，前面3只盛满了水，后面3只是空的。你 能只移动1只玻璃杯，就便盛满水的杯子和空杯子间隔起来 吗?” 爱动脑筋的周雯，是学校里有名的&quot;小机灵”，她只想了一会儿就做到了。 请你想想看，&quot;小机灵&quot;是怎样做的? 答案 把第二个满着的杯子里的水倒到第五个空着的杯子里 第3题 题目 三个小伙子同时爱上了一 个姑娘，为了决定他们谁能娶这个姑娘，他们决定用手枪进行一次决斗。小李的命中率是30％，小黄比他好些，命中率是50％，最出色的枪手是小林，他从不失 误，命中率是100％。由于这个显而易见的事实，为公平起见，他们决定按这样的顺序：小李先开枪，小黄第二，小林最后。然后这样循环，直到他们只剩下一个人。那么这三个人中谁活下来的机会最大呢？他们都应该采取什么样的策略？ 答案 小黄。因为小李是第一个出手的，他要解决的第一个人就会是 小林，这样就会保证自己的安全，因为如果小黄被解决，自己理所当然地会成为小林的目标，他也必定会被打死。而小黄如果第一枪不打小林而去打小李，自己肯定会死（他命中较高，会成为接下来的神枪手小林的目标）。他必定去尝试先打死小林。那么30% 50%的几率是80%（第一回合小林的死亡率，但会有一点点偏差，毕竟相加了）。那么第一回合小黄的死亡率是20%多一点点（小林的命中减去自己的死亡率）。假设小林第一回合死了，就轮到小李打小黄了，那么小李的命中就变成了50%多一点点(自己的命中加上小黄的死亡率）。这样就变成了小李小黄对决， 第二回合的小李的第一枪命中是50%，小黄也是。可是如果拖下去的话占上风的自然就是小黄了，可能赢得也自然是小黄了。至于策略我看大家都领悟了吧。 第4题 题目 一间囚房里关押着两个犯人。每天监狱都会为这间囚房提供一罐汤，让这两个犯人自己来分。起初，这两个人经常会发生争执，因为他们总是有人认为对方的汤比自己的多。后来他们找到了一个两全其美的办法：一个人分汤，让另一个人先选。于是争端就这么解决了。可 是，现在这间囚房里又加进来一个新犯人，现在是三个人来分汤。必须寻找一个新的方法来维持他们之间的和平。该怎么办呢 按：心理问题，不是逻辑问题 答案 甲分三碗汤，乙选认为最多和最少的倒回灌里再平分到剩余的两个碗里，让丁先选，其次是甲，最后是乙 第5题 题目 在一张长方形的桌面上放了n个一样大小的圆形硬币。这些硬币中可能有一些不完全在桌面内，也可能有一些彼此重叠；当再多放一个硬币而它的圆心在桌面内时，新放的硬币便必定与原先某些硬币重叠。请证明整个桌面可以用4n个硬币完全覆盖 答案 假如先前N个中没有重叠且边上的都超出桌子的边上且全都是紧靠着的.那么根据题意就可以有: 空隙个数Y=3N/2 3(自己推算) 每一个空都要一个圆来盖 桌面就一共有圆的数为: Y N=3N/2 3 =5N/2 3 &lt;=4N(除N=1外) 所以可以用4N个硬币完全覆盖. 第6题 题目 一个球、一把长度大约是球的直径2/3长度的直尺.你怎样测出球的半径？方法很多看看谁的比较巧妙 答案 用绳子围球一周后测绳长来计算半径（用纸筒套住球来测更准） 借助排水法测体积后计算半径 第7题 题目 五个大小相同的一元人民币硬币。要求两两相接触，应该怎么摆？ 答案 要两人才能做到， 先在平面上摆放一枚，再在这枚硬币的正面立着放两枚（这两枚是侧面接触的），这样，这三枚硬币之间形成一个三角形空隙。剩下的两枚在空隙处交叉就行了，注意这两枚同样是平躺着，但可能需要翘起一定的角度。 第8题 题目 猜牌问题 S先生、P先生、Q先生他们知道桌子的抽屉里有16张扑克牌：红桃A、Q、4 黑桃J、8、4、2、7、3 草花K、Q、5、4、6 方块A、5。约翰教授从这16张牌中挑出一张牌来，并把这张牌的点数告诉 P先生，把这张牌的花色告诉Q先生。这时，约翰教授问P先生和Q 先生：你们能从已知的点数或花色中推知这张牌是什么牌吗？ 于是，S先生听到如下的对话：P先生：我不知道这张牌。 Q先生：我知道你不知道这张牌。 P先生：现在我知道这张牌了。 Q先生：我也知道了。 听罢以上的对话，S先生想了一想之后，就正确地推出这张牌是什么牌。 请问：这张牌是什么牌？ 答案 方块5 第9题 题目 一个教授逻辑学的教授，有三个学生，而且三个学生均非常聪明！ 一天教授给他们出了一个题，教授在每个人脑门上贴了一张纸条并告诉他们，每个人的纸条上都写了一个正整数，且某两个数的和等于第三个！（每个人可以看见另两个数，但看不见自己的） 教授问第一个学生：你能猜出自己的数吗？回答：不能，问第二个，不能，第三个，不能，再问第一个，不能，第二个，不能，第三个：我猜出来了，是144！教授很满意的笑了。请问您能猜出另外两个人的数吗？ 答案 经过第一轮，说明任何两个数都是不同的。第二轮，前两个人没有猜出，说明任何一个数都不是其它数的两倍。现在有了以下几个条件：1.每个数大于02.两两不等3.任意一个数不是其他数的两倍。每个数字可能是另两个之和或之差，第三个人能猜出144，必然根据前面三个条件排除了其中的一种可能。假设：是两个数之差，即x－y＝144。这时1（x，y&gt;0）和2（x！＝y）都满足，所以要否定x＋y必然要使3不满足，即x＋y＝2y，解得x＝y，不成立（不然第一轮就可猜出），所以不是两数之差。因此是两数之和，即x＋y＝144。同理，这时1，2都满足，必然要使3不满足，即x－y＝2y，两方程联立，可得x＝108，y＝36。 这两轮猜的顺序其实分别为这样：第一轮（一号，二号），第二轮（三号，一号，二号）。这样分大家在每轮结束时获得的信息是相同的（即前面的三个条件）。 那么就假设我们是C，来看看C是怎么做出来的：C看到的是A的36和B的108，因为条件，两个数的和是第三个，那么自己要么是72要么是144（猜到这个是因为72的话，108就是36和72的和，144的话就是108和36的和。这样子这句话看不懂的举手）: 假设自己（C）是72的话，那么B在第二回合的时候就可以看出来，下面是如果C是72，B的思路：这种情况下，B看到的就是A的36和C的72，那么他就可以猜自己，是36或者是108（猜到这个是因为36的话，36加36等于72，108的话就是36和108的和）： 如果假设自己（B）头上是36，那么，C在第一回合的时候就可以看出来，下面是如果B是36，C的思路：这种情况下，C看到的就是A的36和B的36，那么他就可以猜自己，是72或者是0（这个不再解释了）： 如果假设自己（C）头上是0，那么，A在第一回合的时候就可以看出来，下面是如果C是0，A的思路：这种情况下，A看到的就是B的36和C的0，那么他就可以猜自己，是36或者是36（这个不再解释了），那他可以一口报出自己头上的36。（然后是逆推逆推逆推），现在A在第一回合没报出自己的36，C（在B的想象中）就可以知道自己头上不是0，如果其他和B的想法一样（指B头上是36），那么C在第一回合就可以报出自己的72。现在C在第一回合没报出自己的36，B（在C的想象中）就可以知道自己头上不是36，如果其他和C的想法一样（指C头上是72），那么B在第二回合就可以报出自己的108。现在B在第二回合没报出自己的108，C就可以知道自己头上不是72，那么C头上的唯一可能就是144了。 第10题 题目 某城市发生了一起汽车撞人逃跑事件 该城市只有两种颜色的车,蓝色15% 绿色85% 事发时有一个人在现场看见了 他指证是蓝车 但是根据专家在现场分析,当时那种条件能看正确的可能性是80% 那么,肇事的车是蓝车的概率到底是多少? 答案 15%*80%/(85％×20％＋15%*80%) 第11题 题目 有一人有240公斤 水，他想运往干旱地区赚钱。他每次最多携带60公斤，并且每前进一公里须耗水1公斤（均匀耗水）。假设水的价格在出发地为0，以后，与运输路程成正比， （即在10公里处为10元/公斤，在20公里处为20元/公斤…），又假设他必须安全返回，请问，他最多可赚多少钱？ 答案 f(x)=(60-2x)*x,当x=15时，有最大值450。 1820元设是X公里处赚最多钱。问题就成是求一个一元二次方程的最大值，求得是在15公里处赚钱最多，450元。一共240公斤…… 第12题 题目 现在共有100匹马跟100块石头，马分3种，大型马；中型马跟小型马。其中一匹大马一次可以驮3块石头，中型马可以驮2块，而小型马2头可以驮一块石头。问需要多少匹大马，中型马跟小型马？（问题的关键是刚好必须是用完100匹马） 答案 6种结果 大、中、小：(2\30\68)(5\25\70)(8\20\72)(11\15\74)(14\10\76)(17\5\78) 第13题 题目 1=5 2=15 3=2154=2145 那么5=? 答案 因为1=5，所以5=1 第14题 题目 有2n个人排队进电影院，票价是50美分。在这2n个人当中，其中n个人只有50美分，另外n个人有1美元（纸票子）。愚蠢的电影院开始卖票时1分钱也没有。 问： 有多少种排队方法 使得 每当一个拥有1美元买票时，电影院都有50美分找钱 注： 1美元=100美分 拥有1美元的人，拥有的是纸币，没法破成2个50美分 答案 本题可用递归算法，但时间复杂度为2的n次方，也可以用动态规划法，时间复杂度为n的平方，实现起来相对要简单得多，但最方便的就是直接运用公式：排队的种数=(2n)!/[n!(n 1)!]。 如果不考虑电影院能否找钱，那么一共有(2n)!/[n!n!]种排队方法（即从2n个人中取出n个人的组合数），对于每一种排队方法，如果他会导致电影院无法找钱，则称为不合格的，这种的排队方法有(2n)!/[(n-1)!(n 1)!]（从2n个人中取出n-1个人的组合数）种，所以合格的排队种数就是(2n)!/[n!n!]- (2n)!/[(n-1)!(n 1)!] =(2n)!/[n!(n 1)!]。至于为什么不合格数是(2n)!/[(n-1)!(n1)!]，说起来太复杂，这里就不讲了。 第15题 题目 一个人花8块钱买了一只鸡，9块钱卖掉了，然后他觉得不划算，花10块钱又买回来了，11块卖给另外一个人。问他赚了多少? 答案 2元 第16题 题目 有一种体育竞赛共含M个项目，有运动员A，B，C参加，在每一项目中，第一,第二,第三名分别的X，Y，Z分，其中X,Y,Z为正整数且X&gt;Y&gt;Z。最后A得22分，B与C均得9分，B在百米赛中取得第一。求M的值，并问在跳高中谁得第二名。 答案 M=5 C得第二名 因为ABC三人得分共40分,三名得分都为正整数且不等,所以前三名得分最少为6分,40=58=410=220=120,不难得出项目数只能是5.即M=5. A得分为22分,共5项,所以每项第一名得分只能是5,故A应得4个第一名一个第二名.22=5*4 2,第二名得2分,又B百米得第一,9=5 1 1 1 1 所以跳高中只有C得第二名 B的5项共9分,其中百米第一5分,其它4项全是1分,9=5 1=1 1 1.即B除百米第一外全是第三,跳高第二必定是C所得 第17题 题目 晚上，有四个人过河，分别需要1、2、5、10分钟。只有一把手电筒，过河的必要条件是有手电筒。最多可以两个人同时过河，但必须以两人中较慢的那个人的速度过去。问：所有人都过河，至少需几分钟。 答案 17分钟]]></content>
      <categories>
        <category>逻辑</category>
      </categories>
      <tags>
        <tag>逻辑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macos brew]]></title>
    <url>%2F2017%2F08%2F23%2Fmacos-brew%2F</url>
    <content type="text"><![CDATA[brew 安装 ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" brew 缓存位置 /Users/${UserName}/Library/Caches/Homebrew brew 安装目录 /usr/local/Cellar/ 使用 搜索可用安装包 brew search tomcat brew安装jdk brew cask install java brew安装pip brew install pip 安装redis brew install redisredis-server /usr/local/etc/redis.conf 安装nginx brew install nginx 配置文件位置/usr/local/etc/nginx/ Error: Unknown command: versions brew tap homebrew/boneyard brew 国内源 https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git 替换brew.git: cd &quot;$(brew --repo)&quot; git remote set-url origin https://mirrors.ustc.edu.cn/brew.git 替换homebrew-core.git: cd &quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&quot; git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git brew安装jenv brew install jenvecho 'export PATH="$HOME/.jenv/bin:$PATH"' &gt;&gt; ~/.bash_profileecho 'eval "$(jenv init -)"' &gt;&gt; ~/.bash_profile 查看java版本 jenv versions * system (set by /Users/kmyhy/.jenv/version) http://www.importnew.com/14866.html]]></content>
      <categories>
        <category>macos</category>
      </categories>
      <tags>
        <tag>macos,brew</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[iterm2 ssh 自动登录]]></title>
    <url>%2F2017%2F08%2F23%2Fmacos-iterm2-ssh-autologin%2F</url>
    <content type="text"><![CDATA[在$PATH目录(如:/usr/local/bin)新建expect脚本(如:iterm2ssh.sh) 内容如下： #!/usr/bin/expect set timeout 30 spawn ssh [lindex $argv 0]@[lindex $argv 1] expect &#123; "(yes/no)?" &#123;send "yes\n";exp_continue&#125; "password:" &#123;send "[lindex $argv 2]\n"&#125; &#125; interact 并设置可执行 chmod +x iterm2ssh.sh iterm2添加profile Command⌘+o打开profiles列表窗口，点击`edit profiles`按钮打开profiles编辑窗口，点击左侧`+`按钮新增profile，设置名称，`send text at start` 设置为iterm2ssh.ssh &lt;用户名&gt; &lt;服务器地址&gt; &lt;密码&gt; 右键 new tab 选择刚才新增的profile即可 iterm2 ssh]]></content>
      <categories>
        <category>macos</category>
      </categories>
      <tags>
        <tag>macos</tag>
        <tag>iterm2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式]]></title>
    <url>%2F2017%2F08%2F09%2Fregular-expression%2F</url>
    <content type="text"><![CDATA[用过的正则表达式，随手一记 字符串去掉左边的0 var str = "000000100";str = str.replace(/\b(0+)/gi,"");console.log(str);]]></content>
      <categories>
        <category>regex</category>
      </categories>
      <tags>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-pandas]]></title>
    <url>%2F2017%2F07%2F27%2Fpython-pandas%2F</url>
    <content type="text"><![CDATA[python-pandas python-pandas]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr学习笔记（三）查询参数]]></title>
    <url>%2F2017%2F07%2F24%2Fsolr-study3%2F</url>
    <content type="text"><![CDATA[solr基本查询参数 从控制台查询 访问solr控制台http://localhost:8080/solr 选择core 点击查询 输入查询参数点击Execute Query按钮执行查询 查询参数 q(query) q为搜索词 这几种查询有什么区别？ q=keyword:iphone 4s q=keyword:iphone\ 4s q=keyword:&quot;iphone 4s&quot; q=keyword:(iphone 4s) 第一个q=keyword:iphone 4s在没有设置df:keyword的情况下会报错： no field name specified in query and no default specified via ‘df’ param 必备词 海尔 +空调海尔 AND 空调海尔 &amp;&amp; 空调+海尔 +空调海尔空调 （默认运算符是AND时） 可选词 海尔 OR 空调海尔 || 空调海尔空调 （默认运算符是OR时） 词项临近度 “海尔空调”~3 solr-q 字符临近度 海尔 solr-q 排除词项 keyword:(海尔 -兄弟)keyword:(海尔 NOT 兄弟) 区间搜索 age:[0 TO 100] 闭区间如果字段类型为整数表示1到99age:&#123;0 TO 100&#125; 开区间如果字段类型为整数表示0到100 通配符搜索 * 1个或多个? 1个 权重表达式 海尔空调^10 特殊字符转义 +-&amp;&amp;||!()&#123;&#125;[]^"~*?:/我&amp;&amp;你我\&amp;\&amp;你 fq(filter query) fq为过滤词，非必选，可有多个值 关闭缓存 fq=&#123;!cache false&#125;id:111 过滤顺序 添加执行成本，执行成本越低越先执行,成本大于等于100的过滤器被solr视为后置过滤器 fq=&#123;!cost=1&#125;category:电器fq=&#123;!cost=2&#125;onsale:1fq=&#123;!cost=100&#125;star:[5 TO 9] q和fq的区别 应用场景 q一般是用户输入的关键字如keyword:海尔空调 fq一般是其他过滤条件如category:电器 onsale:1 参数个数 q参数必选有且只有1个 fq参数可选且可以有多个如： fq=category:电器&amp;fq=onsale:1 结果等价于 fq=category:电器 AND onsale:1 但是缓存不同上边的写法solr会分别缓存category:电器和onsale:1的结果 对得分的影响 q影响搜索结果评分 fq不会影响搜索结果的评分 solr-q影响得分 solr-fq不影响得分 sort 排序字段 &lt;field|func&gt; (DESC|ASC) id ASC, cmmdtyName DESC start,rows 分页开始索引，每页条数 fl(field list) 字段列表 wt(writer type) 响应格式 wt=json debugQuery 调试模式 debugQuery=true dismax 析取最大化查询解析器 edismax 扩展析取最大化查询解析器 mm 取值 示例 说明 正整数 2 两个子句匹配,少于2个则全匹配 负整数 -3 除了3个不匹配其他全匹配 正百分比 75% 75%的子句（舍入到最近整数）匹配 负百分比 -30% 最多30%的子句（舍入到最近整数）不匹配 条件百分比 3&lt;80% 如果小于等于3个子句，全匹配，如果大于3个子句则80%匹配 多条件百分比 3&lt;-1 5&lt;4 7&lt;-30% 小于等于3个子句全匹配，4或者5个子句最多1个不匹配，6或7个子句4个子句必须匹配，大于7个子句最多30%的子句（舍入到最近整数）不匹配 其他参数 参数 值 说明 q.alt 当q为空时缺省查询表达式 qf 查询字段，多个字段空格分开可加权重 mm 最小匹配 pf 短语字段 pf2、pf3 ps 短语间隔 ps2、ps3 tie 决胜局 bq 提升查询，不影响匹配到的文档数，只影响排序 bq=onsale:1 bf 提升函数,通过函数查询提升主查询相关度bf=product(rord(starLevel),rord(saleNum),rord(onsaleTime)) uf 用户可访问字段 默认uf=* boost 提升函数 hl(highlight) 高亮 参数 值 说明 hl.fl 字符串 一个或多个高亮字段以逗号分隔 hl.simple.pre 字符串 高亮词项前缀 hl.simple.post 字符串 高亮词项后缀 hl.requireFieldMatch true ¦ false 高亮字段必须匹配 hl.usePhraseHighlighter true ¦ false 短语完全匹配 hl.highlightMultiTerm true ¦ false 启用区间/通配符/模糊/前缀查询高亮 facet 分面查询 参数 值 说明 facet.query 字符串 查询分面表达式 facet.field 字符串 分面依据字段 facet.prefix 字符串 分面前缀 spatial（坑，待填） 空间查询 spellcheck 拼写检查 参数 值 说明 spellcheck.q true ¦ false 为查询指定拼写检查不指定则对q参数进行检查 spellcheck.dictionary 字符串 字典名称 spellcheck.count 整数 拼写建议最大数 spellcheck.onlyMorePopular true ¦ false 建议查询比原始查询多 spellcheck.extendedResults true ¦ false 获取建议词项的其他信息 spellcheck.collate true ¦ false 是否校准查询 spellcheck.maxCollations 整数 最大校准查询数 spellcheck.maxCollationTries 整数 校准尝试最大数 group 参数 值 说明 group 是否启用分组 group.field 分组字段 group.limit 每组返回文档数限制 group.offset 每组返回文档开始索引 如 group.offset=1 则从第二个文档开始返回 group.sort 组内排序 group.facet 分组后分面]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr学习笔记（二）schema配置文件]]></title>
    <url>%2F2017%2F07%2F24%2Fsolr-study2%2F</url>
    <content type="text"><![CDATA[schema主要作用是定义文档结构，如果把solr比作数据库，schema类似于数据库的表结构 概览 solr schema.xml 配置文件主要结构 schema配置文件主要由三部分构成 &lt;fields&gt;元素为字段配置，包含&lt;field&gt;和&lt;dynamicField&gt;元素 其他元素 &lt;uniqueKey&gt; &lt;copyField&gt;等 &lt;types&gt;元素为字段类型配置，定义solr能够处理的日期、数字、和文本字段 &lt;schema&gt;属性解释 name:仅用于显示 version:版本号仅用于solr内部启用具体功能 &lt;fields&gt;元素 fields元素 fields定义文档字段，包含普通字段 (field) 和 动态字段 (dynamicField) 节点 属性解释 name:字段名，大小写敏感 type:字段类型 indexed:(true|false)是否索引 stored:(true|false)是否存储 multiValued:(true|false)是否多值字段 其他特殊字段 _version_字段 用于避免并发冲突 &lt;field name="_version_" type="long" indexed="true" stored="true"/&gt; 唯一键字段 唯一键字段在定义完字段后由&lt;uniqueKey&gt;指定 &lt;uniqueKey&gt;id&lt;/uniqueKey&gt; 复制字段 复制字段在定义完字段后由copyField指定 &lt;copyField source="cmmdtyName" dest="searchVal"/&gt;&lt;copyField source="categoryName" dest="searchVal"/&gt;&lt;copyField source="parentCategoryName" dest="searchVal"/&gt;&lt;copyField source="brandName" dest="searchVal"/&gt; &lt;types&gt;元素 types元素 types元素定义了字段类型 solr内置了常用的字段类型包括：字符串字段(string)、数值字段(int,float,long,double,tint,tfloat,tlong,tdouble)、日期字段(date,tdate)等，也可以自定义高级字段类型 日期字段 日期格式默认采用ISO-8601日期/时间格式(YYYY-MM-DDTHH:MM:SSZ) 如：2017-01-01T23:59:59Z 属性解释 name:字段名 class:对应的类名,solr对内置字段类型的类名采用缩写形式 sortMissingFirst:该字段没值的排到有值的前面 sortMissingLast:该字段没值的排到有值的后面 precisionStep:精度步长。基于trie的字段上执行快速区间查询，步长越小索引项越多，区间查询效率越高 positionIncrementGap:多值字段增加词距。防止短语查询在多值字段中匹配到一个值的结尾和另一个值的开头 如 desc是一个多值字段，desc:科学研究 desc:生命科学 ,默认短语搜索desc:&quot;研究生&quot;可以匹配 高级字段类型 以下是官方示例schema中高级字段配置： &lt;fieldType name="text_general" class="solr.TextField" positionIncrementGap="100"&gt; &lt;!--索引分析器--&gt; &lt;analyzer type="index"&gt; &lt;tokenizer class="solr.StandardTokenizerFactory"/&gt; &lt;!--停止词要保持与查询分析器一致--&gt; &lt;filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/&gt; &lt;!-- 同义词会增加索引体积所以一般在查询分析器里添加--&gt; &lt;!-- &lt;filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/&gt; --&gt; &lt;!--大小写转换要保持与查询分析器一致--&gt; &lt;filter class="solr.LowerCaseFilterFactory"/&gt; &lt;/analyzer&gt; &lt;!--查询分析器 --&gt; &lt;analyzer type="query"&gt; &lt;!--solr 标准分词器 以空格和标点分词--&gt; &lt;tokenizer class="solr.StandardTokenizerFactory"/&gt; &lt;!--停止词分词过滤器 词元移除--&gt; &lt;filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/&gt; &lt;!--同义词分词过滤器 词元注入--&gt; &lt;filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/&gt; &lt;!--大小写转换 词元转换--&gt; &lt;filter class="solr.LowerCaseFilterFactory"/&gt; &lt;/analyzer&gt;&lt;/fieldType&gt; 高级字段配置通常包含： 索引分析器 查询分析器 每个分析器又包含： 分词器 停止词分词过滤器 同义词分词过滤器,由于同义词会增加索引体积所以一般只在查询分析器里添加 词元转换过滤器,大小写转换，索引分析器和查询分析器的词元过滤器必须保持一致 其他配置项 其他配置项如: uniqueKey,copyField(这俩是特殊的字段，需要先定义其他字段，所以放在了fields外) solrQueryParser配置搜索默认操作连接符 &lt;solrQueryParser defaultOperator="AND"/&gt;]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr学习笔记（一）solr安装]]></title>
    <url>%2F2017%2F07%2F19%2Fsolr-study%2F</url>
    <content type="text"><![CDATA[solr4.10.4 安装 环境要求 java1.6+ 二进制分发包 到国内apache镜像网站 http://mirrors.hust.edu.cn/apache/lucene/solr 下载指定版本二进制分发包，历史版本在这下载http://archive.apache.org/dist/lucene/solr/ （国外服务器略慢）或者我下载了4.10.4版本的放在百度网盘了链接: https://pan.baidu.com/s/1nvn1EHz 密码: bian wget -c http://archive.apache.org/dist/lucene/solr/4.10.4/solr-4.10.4.tgz ##下载二进制分发包 解压压缩包 tar zxf solr-4.10.4.tgz ##解压压缩包 启动 cd solr-4.10.4/examplejava -jar start.jar solr6之后版本启动方式有区别: cd solr-&lt;版本号&gt;/bin./solr start -e techproducts 集成到maven 下载solr源码包，以solr-4.10.4-src.tgz为例 wget http://archive.apache.org/dist/lucene/solr/4.10.4/solr-4.10.4-src.tgz 新建maven web工程并添加solr依赖。添加solr依赖后的pom.xml示例: &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;lu.panpan&lt;/groupId&gt; &lt;artifactId&gt;solr&lt;/artifactId&gt; &lt;packaging&gt;war&lt;/packaging&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;name&gt;solr Maven Webapp&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;properties&gt; &lt;solr.version&gt;4.10.4&lt;/solr.version&gt; &lt;org.slf4j-version&gt;1.7.13&lt;/org.slf4j-version&gt; &lt;/properties&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-solrj&lt;/artifactId&gt; &lt;version&gt;$&#123;solr.version&#125;&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-test-framework&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-kuromoji&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-smartcn&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;exclusion&gt; &lt;artifactId&gt;jdk.tools&lt;/artifactId&gt; &lt;groupId&gt;jdk.tools&lt;/groupId&gt; &lt;/exclusion&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;com.google.guava&lt;/groupId&gt; &lt;artifactId&gt;guava&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-dataimporthandler&lt;/artifactId&gt; &lt;version&gt;$&#123;solr.version&#125;&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-test-framework&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-kuromoji&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-smartcn&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;exclusion&gt; &lt;artifactId&gt;jdk.tools&lt;/artifactId&gt; &lt;groupId&gt;jdk.tools&lt;/groupId&gt; &lt;/exclusion&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;com.google.guava&lt;/groupId&gt; &lt;artifactId&gt;guava&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-dataimporthandler-extras&lt;/artifactId&gt; &lt;version&gt;$&#123;solr.version&#125;&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-test-framework&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-kuromoji&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-smartcn&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;exclusion&gt; &lt;artifactId&gt;jdk.tools&lt;/artifactId&gt; &lt;groupId&gt;jdk.tools&lt;/groupId&gt; &lt;/exclusion&gt; &lt;!-- &lt;exclusion&gt; &lt;groupId&gt;com.google.guava&lt;/groupId&gt; &lt;artifactId&gt;guava&lt;/artifactId&gt; &lt;/exclusion&gt; --&gt; &lt;exclusion&gt; &lt;groupId&gt;com.ibm.icu&lt;/groupId&gt; &lt;artifactId&gt;icu4j&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.apache.poi&lt;/groupId&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;!-- log --&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-api&lt;/artifactId&gt; &lt;version&gt;$&#123;org.slf4j-version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;jcl-over-slf4j&lt;/artifactId&gt; &lt;version&gt;$&#123;org.slf4j-version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;log4j-over-slf4j&lt;/artifactId&gt; &lt;version&gt;$&#123;org.slf4j-version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;jul-to-slf4j&lt;/artifactId&gt; &lt;version&gt;$&#123;org.slf4j-version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt; &lt;version&gt;$&#123;org.slf4j-version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.jboss.logging&lt;/groupId&gt; &lt;artifactId&gt;jboss-logging&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-core&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt; &lt;artifactId&gt;logback-classic&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;artifactId&gt;commons-logging&lt;/artifactId&gt; &lt;groupId&gt;commons-logging&lt;/groupId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;servlet-api&lt;/artifactId&gt; &lt;scope&gt;compile&lt;/scope&gt; &lt;/dependency&gt; &lt;!-- test --&gt; &lt;dependency&gt; &lt;groupId&gt;org.jmockit&lt;/groupId&gt; &lt;artifactId&gt;jmockit&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.testng&lt;/groupId&gt; &lt;artifactId&gt;testng&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;finalName&gt;$&#123;project.artifactId&#125;&lt;/finalName&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.6.0&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;1.7&lt;/source&gt; &lt;target&gt;1.7&lt;/target&gt; &lt;encoding&gt;UTF-8&lt;/encoding&gt; &lt;compilerArguments&gt; &lt;extdirs&gt;$&#123;basedir&#125;/src/main/webapp/WEB-INF/lib&lt;/extdirs&gt; &lt;/compilerArguments&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;warName&gt;$&#123;project.artifactId&#125;&lt;/warName&gt; &lt;webResources&gt; &lt;resource&gt; &lt;directory&gt;src/main/webapp&lt;/directory&gt; &lt;filtering&gt;true&lt;/filtering&gt; &lt;includes&gt; &lt;include&gt;**/*.html&lt;/include&gt; &lt;include&gt;**/*.js&lt;/include&gt; &lt;include&gt;**/*.css&lt;/include&gt; &lt;include&gt;**/*.xml&lt;/include&gt; &lt;include&gt;**/*.ftl&lt;/include&gt; &lt;/includes&gt; &lt;/resource&gt; &lt;/webResources&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt;&lt;/project&gt; 拷贝源码包里webapp下文件到项目webapp下 cp -r ~/Downloads/solr-4.10.4/solr/webapp/web/* ~/IdeaProjects/solr/solr/src/main/webapp/ 新建一个solr home文件夹(任何位置，如:~/solr_home)，将源码包示例配置文件拷到solr home文件夹 cd ~mkdir solr_homecp -r ~/Downloads/solr-4.10.4/solr/example/example-schemaless/solr/* ~/solr_home/ 配置solr home(solr home路径写全称) 可以通过修改java运行参数指定solr home -Dsolr.solr.home=/Users/bianle/solr_home 也可以修改web.xlm指定solr home（同时配置了此项和java运行参数以此为准） &lt;env-entry&gt; &lt;env-entry-name&gt;solr/home&lt;/env-entry-name&gt; &lt;env-entry-value&gt;/Users/bianle/solr_home&lt;/env-entry-value&gt; &lt;env-entry-type&gt;java.lang.String&lt;/env-entry-type&gt;&lt;/env-entry&gt; maven打包部署到tomcat启动 完整代码在这下载https://github.com/bianle/solr-pom]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vmware]]></title>
    <url>%2F2017%2F07%2F18%2Fvmware%2F</url>
    <content type="text"><![CDATA[拷贝centos虚拟机后无法联网 service network restart Shutting down loopback insterface: [ OK ] Bringing up loopback insterface: [ OK ] Bringing up interface eth0: Device eth0 does not seem to be present,delaying initialization. [FAILED] 原因：查看网卡配置文件/etc/udev/rules.d/70-persistent-net.rules,可以发现多了一个虚拟网卡eth1 rules 解决1： 编辑网卡配置文件/etc/udev/rules.d/70-persistent-net.rules，将eth0的网卡地址修改成eth1的网卡地址，而后删除eth1这一行； 编辑网卡IP地址配置文件/etc/sysconfig/network-scripts/ifcfg-eth0，修改网卡物理地址HWADDR为上面eth0的网卡地址； 修改完后重启网络 service network restart 或者解决2： 打开打开/etc/udev/rules.d/70-persistent-net.rules记录下eth1的mac地址 修改/etc/sysconfig/network-scripts/ifcfg-eth0将DEVICE=&quot;eth0&quot;改成DEVICE=&quot;eth1&quot;将HWADDR=&quot;xx:xx:xx:xx:xx:xx&quot;改成刚才记录下来的mac地址 修改完后重启网络 http://www.linuxidc.com/Linux/2012-12/76248.htm http://www.01happy.com/vmware-copy-centos-device-eth0-does-not-seem-to-be-present/]]></content>
      <categories>
        <category>vm</category>
      </categories>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr学习笔记草稿]]></title>
    <url>%2F2017%2F07%2F18%2Fsolr-draft%2F</url>
    <content type="text"><![CDATA[草稿 1. solr 安装 下载安装包 wget http://mirrors.hust.edu.cn/apache/lucene/solr/6.3.0/solr-6.3.0.tgztar zxf solr* 下载历史版本在这http://archive.apache.org/dist/lucene/solr/ 创建solr用户并以solr用户启动solr useradd -M -s /bin/bash solrchown -R solr.solr solr*cd solr*su solr -c "bin/solr start" 或： useradd -M -s /sbin/nologin solrchown -R solr.solr solr*cd solr*su solr -s /bin/bash -c "bin/solr start" 常用的启动参数 -f 前台运行 -p &lt;port&gt; 指定端口 2. 主要配置文件 schema.xml field节点 required属性默认为false 3. solr控制台 修改schema.xml后控制台-&gt;Core Admin-&gt;Reload后生效 solrj 局部更新 set – set or replace a particular value, or remove the value if null is specified as the new valueadd – adds an additional value to a list remove – removes a value (or a list of values) from a list removeregex – removes from a list that match the given Java regular expression inc – increments a numeric value by a specific amount (use a negative value to decrement) facet search 分面搜索 翻译过来有点绕，一图了然 facet search 来自这 solr cloud 以下是创建cloud示例执行日志 bash-4.1$ ./solr start -e cloudWelcome to the SolrCloud example!This interactive session will help you launch a SolrCloud cluster on your local workstation.To begin, how many Solr nodes would you like to run in your local cluster? (specify 1-4 nodes) [2]:4Ok, let's start up 4 Solr nodes for your example SolrCloud cluster.Please enter the port for node1 [8983]:Please enter the port for node2 [7574]:Please enter the port for node3 [8984]:Please enter the port for node4 [7575]:Creating Solr home directory /opt/solr-6.3.0/example/cloud/node1/solrCloning /opt/solr-6.3.0/example/cloud/node1 into /opt/solr-6.3.0/example/cloud/node2Cloning /opt/solr-6.3.0/example/cloud/node1 into /opt/solr-6.3.0/example/cloud/node3Cloning /opt/solr-6.3.0/example/cloud/node1 into /opt/solr-6.3.0/example/cloud/node4Starting up Solr on port 8983 using command:/opt/solr-6.3.0/bin/solr start -cloud -p 8983 -s "/opt/solr-6.3.0/example/cloud/node1/solr"NOTE: Please install lsof as this script needs it to determine if Solr is listening on port 8983.Started Solr server on port 8983 (pid=7722). Happy searching!Starting up Solr on port 7574 using command:/opt/solr-6.3.0/bin/solr start -cloud -p 7574 -s "/opt/solr-6.3.0/example/cloud/node2/solr" -z localhost:9983NOTE: Please install lsof as this script needs it to determine if Solr is listening on port 7574.Started Solr server on port 7574 (pid=7873). Happy searching!Starting up Solr on port 8984 using command:/opt/solr-6.3.0/bin/solr start -cloud -p 8984 -s "/opt/solr-6.3.0/example/cloud/node3/solr" -z localhost:9983NOTE: Please install lsof as this script needs it to determine if Solr is listening on port 8984.Started Solr server on port 8984 (pid=8018). Happy searching!Starting up Solr on port 7575 using command:/opt/solr-6.3.0/bin/solr start -cloud -p 7575 -s "/opt/solr-6.3.0/example/cloud/node4/solr" -z localhost:9983NOTE: Please install lsof as this script needs it to determine if Solr is listening on port 7575.Started Solr server on port 7575 (pid=8164). Happy searching!Now let's create a new collection for indexing documents in your 4-node cluster.Please provide a name for your new collection: [gettingstarted]How many shards would you like to split gettingstarted into? [2]How many replicas per shard would you like to create? [2]Please choose a configuration for the gettingstarted collection, available options are:basic_configs, data_driven_schema_configs, or sample_techproducts_configs [data_driven_schema_configs]Connecting to ZooKeeper at localhost:9983 ...Uploading /opt/solr-6.3.0/server/solr/configsets/data_driven_schema_configs/conf for config gettingstarted to ZooKeeper at localhost:9983Creating new collection 'gettingstarted' using command:http://localhost:8983/solr/admin/collections?action=CREATE&amp;name=gettingstarted&amp;numShards=2&amp;replicationFactor=2&amp;maxShardsPerNode=1&amp;collection.configName=gettingstarted&#123; "responseHeader":&#123; "status":0, "QTime":20418&#125;, "success":&#123; "172.19.136.171:8984_solr":&#123; "responseHeader":&#123; "status":0, "QTime":19553&#125;, "core":"gettingstarted_shard2_replica2"&#125;, "172.19.136.171:7575_solr":&#123; "responseHeader":&#123; "status":0, "QTime":19391&#125;, "core":"gettingstarted_shard1_replica2"&#125;, "172.19.136.171:7574_solr":&#123; "responseHeader":&#123; "status":0, "QTime":19801&#125;, "core":"gettingstarted_shard2_replica1"&#125;, "172.19.136.171:8983_solr":&#123; "responseHeader":&#123; "status":0, "QTime":19853&#125;, "core":"gettingstarted_shard1_replica1"&#125;&#125;&#125;Enabling auto soft-commits with maxTime 3 secs using the Config APIPOSTing request to Config API: http://localhost:8983/solr/gettingstarted/config&#123;"set-property":&#123;"updateHandler.autoSoftCommit.maxTime":"3000"&#125;&#125;Successfully set-property updateHandler.autoSoftCommit.maxTime to 3000SolrCloud example running, please visit: http://localhost:8983/solr 执行完毕后创建了如下cloud +-------+ +-------+ +-------+ +-------+| node1 | | node2 | | node3 | | node4 || 8983 | | 7574 | | 8984 | | 7575 |+---+---+ +---+---+ +---+---+ +---+---+ | | | | +------+------+ +-------+-----+ | | +----+----+ +----+----+ | shard1 | | shard2 | | | | | +----+----+ +----+----+ | | +---------------+------------------+ | +--------+---------+ | collection | | | +------------------+ solr数据导入 solr 数据库导入配置文件可以定义多个entity solr 导入如果不指定entity参数则默认导入全部entity solr 导入http请求get和post实现不一致（猜测）,post是同步的，get是异步的 solr查询器 solr常用查询参数 q:查询条件表达式。 提供AND,OR,*,?等关键字，模糊匹配。 举个栗子: name:Jim AND age:18,查询名字类似Jim年龄18的小伙伴 范围查询startDate:[* TO 2017-01-01T00:00:00Z]，查询开始时间在17年1月1日之前的 注意：solr要求的时间格式为yyyy-MM-dd'T'HH:mm:ss'Z'，对于日期索引solr里以标准时间存储，所以我们查询时需要将日期转成格林威治时间，参考以下代码: SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");sdf.setTimeZone(TimeZone.getTimeZone("GMT"));//将北京时间转成标准时间String dateStr = sdf.format(someDate); 公元前日期用负数表示如-0009代表公元前10年（为什么是10？因为没有0000年，在solr里或者说在java里0000代表公元前1年） Date _d1 = new SimpleDateFormat("yyyy").parse("-0001");Date d0 = new SimpleDateFormat("yyyy").parse("0000");Date d1 = new SimpleDateFormat("yyyy").parse("0001");System.out.println(_d1);System.out.println(d0);System.out.println(d1); Wed Jan 01 00:00:00 CST 2 Thu Jan 01 00:00:00 CST 1 Sat Jan 01 00:00:00 CST 1 fq(filter query):过滤查询表达式,对查询结果过滤,在分页之前 sort:排序表达式。 默认按score排序。提供ASC,DESC关键字且必填，不区分大小写 举个栗子： age desc按年龄倒序排序 start,rows:分页参数。 start：开始的位置，rows：返回条数 df:默认的查询字段。 这个参数会覆盖在schema里定义的默认查询字段 Raw Query Parameters:原始查询参数。 比如：开启debug，可以页面勾选，或者直接添加参数：debugQuery=on wt(writer type):指定输出格式 可以有 xml, json, php, python,csv,ruby。 indent:返回的结果是否缩进 默认关闭，用 indent=true|on 开启，一般调试json,php,python,ruby输出才有必要用这个参数。 debugQuery:调试数据时可能会用到，有四个可选参数值。 timing – 提供调试对于组件时间耗费等信息 query — 提供调试关于查询信息 results — 提供调试关于结果信息 true – 设置为true，相当于&amp;debugQuery=true q.op: 指定默认的连接符AND还是OR，将会覆盖schema.xml的defaultOperator配置。 qt(query type)，指定那个类型来处理查询请求 一般不用指定，默认是standard Transformers 结果放回前处理document中的字段。如[docid] Luence document id 值。 verbose 获得中间步骤的详细信息. version:查询语法的版本，建议不使用它，由服务器指定默认值。 defType: 指定query parser 常用defType=lucene, defType=dismax, defType=edismax。 自定义查询类型可参考:http://blog.chenlb.com/2009/02/use-custom-solr-queryparser.html 参考资料： http://wiki.apache.org/solr/CommonQueryParameters http://wiki.apache.org/solr/SolrQuerySyntax [ ] dismax(Disjunction Max) [ ] edismax(Extended DisMax) [ ] hl(highlight):高亮参数 [ ] facet参数 [ ] spatial参数 [ ] spellcheck 拼写检查 [ ] Solr的检索运算符 eDisMax 扩展析取最大化查询解析器 qf查询字段 q=海尔&amp;qf=cmmdtyName^10 categoryName [ ] pf短语字段 [ ] ps短语间隔 qs查询短语间隔 tie决胜局 0.0 1.0 bq提升查询 仅影响排序 bq=onsale:1 bf提升函数 bf=product(rord(starLevel),rord(saleNum),rord(onsaleTime)) mm 最小匹配 ik分词器 ik添加到maven 下载源码IK-Analyzer-2012FF 新建空的maven项目 src目录下文件拷贝到src java目录 pom.xml添加依赖 &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;lucene.version&gt;4.10.4&lt;/lucene.version&gt;&lt;/properties&gt;&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-core&lt;/artifactId&gt; &lt;version&gt;$&#123;lucene.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-queryparser&lt;/artifactId&gt; &lt;version&gt;$&#123;lucene.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.lucene&lt;/groupId&gt; &lt;artifactId&gt;lucene-analyzers-common&lt;/artifactId&gt; &lt;version&gt;$&#123;lucene.version&#125;&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.solr&lt;/groupId&gt; &lt;artifactId&gt;solr-test-framework&lt;/artifactId&gt; &lt;version&gt;$&#123;lucene.version&#125;&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;artifactId&gt;jdk.tools&lt;/artifactId&gt; &lt;groupId&gt;jdk.tools&lt;/groupId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.10&lt;/version&gt; &lt;/dependency&gt;&lt;/dependencies&gt; solr添加到maven 下载源码solr-4.10.4-src.tgz ant generate-maven-artifacts Ivy is not available 解决ivy is not available]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sonar]]></title>
    <url>%2F2017%2F07%2F14%2Fsonar%2F</url>
    <content type="text"><![CDATA[“InterruptedException” should not be ignored squid:S2142 InterruptedExceptions should never be ignored in the code, and simply logging the exception counts in this case as “ignoring”. Instead, InterruptedExceptions should either be rethrown - immediately or after cleaning up the method’s state - or the method should be reinterrupted. Any other course of action risks delaying thread shutdown and loses the information that the thread was interrupted - probably without finishing its task. Noncompliant Code Example public void run () &#123; try &#123; while (true) &#123; // do stuff &#125; &#125;catch (InterruptedException e) &#123; // Noncompliant; logging is not enough LOGGER.log(Level.WARN, "Interrupted!", e); &#125;&#125; Compliant Solution public void run () throws InterruptedException&#123; try &#123; while (true) &#123; // do stuff &#125; &#125;catch (InterruptedException e) &#123; LOGGER.log(Level.WARN, "Interrupted!", e); // clean up state... throw e; &#125;&#125; or public void run () &#123; try &#123; while (true) &#123; // do stuff &#125; &#125;catch (InterruptedException e) &#123; LOGGER.log(Level.WARN, "Interrupted!", e); // clean up state... Thread.currentThread().interrupt(); &#125;&#125; See MITRE, CWE-391 - Unchecked Error Condition]]></content>
      <categories>
        <category>sonar</category>
      </categories>
      <tags>
        <tag>sonar</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx安装ssl证书]]></title>
    <url>%2F2017%2F07%2F12%2Fsetup-ssl-cert-for-nginx%2F</url>
    <content type="text"><![CDATA[环境 阿里云ecs + nginx + tomcat 域名在阿里云申请，dns解析也是阿里云的（申请阿里云证书验证方便） 申请证书 登录阿里云左侧导航安全-&gt;证书服务，申请证书 ssl 申请后下载对应版本 ssl 上传到服务器 把下载的证书上传到服务器，最好是单独的目录，方便管理 ssl 配置nginx 开启ssl ssl on;ssl_certificate /root/cert/ceshi.agoodwater.cn/ceshi.agoodwater.cn.pem;ssl_certificate_key /root/cert/ceshi.agoodwater.cn/ceshi.agoodwater.cn.key;ssl_session_timeout 5m;ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;ssl_protocols TLSv1 TLSv1.1 TLSv1.2;ssl_prefer_server_ciphers on; 兼容http请求 server&#123; listen 80; server_name ceshi.agoodwater.cn; rewrite ^(.*)$ https://$host$1 permanent;&#125; 完整配置如下 server&#123; listen 80; server_name ceshi.agoodwater.cn; rewrite ^(.*)$ https://$host$1 permanent;&#125;server &#123; listen 443; server_name ceshi.agoodwater.cn; ssl on; ssl_certificate /root/cert/ceshi.agoodwater.cn/ceshi.agoodwater.cn.pem; ssl_certificate_key /root/cert/ceshi.agoodwater.cn/ceshi.agoodwater.cn.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; root /opt/www/m.agoodwater.cn/; access_log /var/log/nginx/chcbkq.access.log main; location / &#123; # 内网ip:port proxy_pass http://219.142.236.81:4466; proxy_set_header X-Proxy nginx; proxy_read_timeout 50s; proxy_set_header Host $host; proxy_set_header X-Real-Ip $remote_addr; proxy_set_header X-Forwarded-For $remote_addr; proxy_set_header X-Forwarded-Proto $scheme; &#125;&#125;]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx,ssl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bug修复记-solr排序函数]]></title>
    <url>%2F2017%2F07%2F11%2Fsolr-sort-function%2F</url>
    <content type="text"><![CDATA[q=custNo:6054575780 AND cmmdtyName:华为nova(4GB+64GB)CAZ-AL10香槟金(白)全网通&amp;sort=&#123;!func&#125;sum(product(sum(map(query($aaa),0,0,0,2),map(zsPrice,0,0,1,4)),100000),zsPrice) desc&amp;aaa=inventory:010 不手动URL编码 CloseableHttpClient client = null;client = HttpClients.createDefault();URL url = new URL(urlStr);URI uri = new URI(url.getProtocol(), url.getHost(), url.getPath(), url.getQuery(), null);HttpGet httpget = new HttpGet(uri);HttpResponse response = client.execute(httpget); http://gcmssit.service.cnsuning.com/solr/fxnew/select?q=custNo:6054575780%20AND%20cmmdtyName:华为nova%5C(4GB%5C+64GB%5C)CAZ%5C-AL10香槟金%5C(白%5C)全网通&amp;wt=json&amp;indent=true&amp;fl=zsPrice&amp;aaa=inventory:000001000137&amp;sort=%7B!func%7Dsum(product(sum(map(query($aaa),0,0,2,0),map(zsPrice,0,0,4,1)),100000),zsPrice)%20asc q:custNo:6054575780 AND cmmdtyName:华为nova(4GB\ 64GB)CAZ-AL10香槟金(白)全网通 wt:json indent:true fl:zsPrice aaa:inventory:000001000137 sort:{!func}sum(product(sum(map(query($aaa),0,0,2,0),map(zsPrice,0,0,4,1)),100000),zsPrice) asc 手动对含特殊字符的查询串URL编码 String q = "cmmdtyName:华为nova\\(4GB\\+64GB\\)CAZ\\-AL10香槟金\\(白\\)全网通";URLEncoder.encode(q,"utf-8");...String sort="&#123;!func&#125;sum(product(sum(map(query($aaa),0,0,0,2),map(zsPrice,0,0,1,4)),100000),zsPrice) desc";URLEncoder.encode(sort,"utf-8"); CloseableHttpClient client = null;client = HttpClients.createDefault();HttpGet httpget = new HttpGet(urlStr);HttpResponse response = client.execute(httpget); http://gcmssit.service.cnsuning.com/solr/fxnew/select?q=custNo%3A6054575780+AND+cmmdtyName%3A%E5%8D%8E%E4%B8%BAnova%5C%284GB%5C%2B64GB%5C%29CAZ%5C-AL10%E9%A6%99%E6%A7%9F%E9%87%91%5C%28%E7%99%BD%5C%29%E5%85%A8%E7%BD%91%E9%80%9A&amp;wt=json&amp;indent=true&amp;fl=zsPrice&amp;aaa=inventory:000001000137&amp;sort=%7B%21func%7Dsum%28product%28sum%28map%28query%28%24aaa%29%2C0%2C0%2C2%2C0%29%2Cmap%28zsPrice%2C0%2C0%2C4%2C1%29%29%2C100000%29%2CzsPrice%29+asc q:custNo:6054575780 AND cmmdtyName:华为nova(4GB+64GB)CAZ-AL10香槟金(白)全网通 wt:json indent:true fl:zsPrice aaa:inventory:000001000137 sort:{!func}sum(product(sum(map(query($aaa),0,0,2,0),map(zsPrice,0,0,4,1)),100000),zsPrice) asc]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死12]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi12%2F</url>
    <content type="text"><![CDATA[var dplayer11 = new DPlayer({"element":document.getElementById("dplayer11"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC12%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs12.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死11]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi11%2F</url>
    <content type="text"><![CDATA[var dplayer10 = new DPlayer({"element":document.getElementById("dplayer10"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC11%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs11.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死10]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi10%2F</url>
    <content type="text"><![CDATA[var dplayer9 = new DPlayer({"element":document.getElementById("dplayer9"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC10%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs10.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死09]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi09%2F</url>
    <content type="text"><![CDATA[var dplayer8 = new DPlayer({"element":document.getElementById("dplayer8"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC09%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs9.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死08]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi08%2F</url>
    <content type="text"><![CDATA[var dplayer7 = new DPlayer({"element":document.getElementById("dplayer7"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC08%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs8.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死07]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi07%2F</url>
    <content type="text"><![CDATA[var dplayer5 = new DPlayer({"element":document.getElementById("dplayer5"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC07%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs7.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死06]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi06%2F</url>
    <content type="text"><![CDATA[var dplayer6 = new DPlayer({"element":document.getElementById("dplayer6"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC06%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs6.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死05]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi05%2F</url>
    <content type="text"><![CDATA[var dplayer4 = new DPlayer({"element":document.getElementById("dplayer4"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC05%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs5.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死04]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi04%2F</url>
    <content type="text"><![CDATA[var dplayer3 = new DPlayer({"element":document.getElementById("dplayer3"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC04%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs4.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死03]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi03%2F</url>
    <content type="text"><![CDATA[var dplayer2 = new DPlayer({"element":document.getElementById("dplayer2"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC03%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs3.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死02]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi02%2F</url>
    <content type="text"><![CDATA[var dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC02%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs2.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[网剧]杀不死01]]></title>
    <url>%2F2017%2F06%2F30%2Fshabusi01%2F</url>
    <content type="text"><![CDATA[var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/%5B%E6%9D%80BS%5D%E7%AC%AC01%E9%9B%86_bd.mp4","pic":"http://blimg.bovod.org/2017/07/11/sbs1.jpg"}});]]></content>
      <categories>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影视</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr排序中使用函数]]></title>
    <url>%2F2017%2F06%2F20%2Fsolr-sort-func%2F</url>
    <content type="text"><![CDATA[需求 价格升序 有库存有价格，价格升序 无库存有价格，价格升序 有库存无价格，自然排序 无库存无价格，自然排序 实现方案 根据需求确定商品有无库存和有无价格的权重：有库存&gt;有价格&gt;无库存&gt;无价格 为每个商品标签设置权重如下： 标签 权重 有库存 0 有价格 1 无库存 2 无价格 4 组合后商品权重为每个标签求和： 标签 权重 有库存有价格 1 无库存有价格 3 有库存无价格 4 无库存无价格 6 根据排序权重确定排序参数如下： &#123;!func&#125;sum(product(sum(map(query($aaa),0,0,4,1),map(zsPrice,0,0,2,0)),100000),zsPrice) asc&amp;aaa=inventory:000001000173 query($aaa),其中$aaa为变量,aaa=inventory:000001000173是为aaa赋值，等同于query(inventory:000001000173),返回搜索得分，搜不到（无库存）返回0 map(x,min,max,target,default),如果x在min和max之间映射成target，否则default 价格降序 有库存有价格 6 无库存有价格 4 有库存无价格 3 无库存无价格 1 &#123;!func&#125;sum(product(sum(map(query($aaa),0,0,1,4),map(zsPrice,0,0,0,2)),100000),zsPrice) desc&amp;aaa=inventory:000001000173]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[EnterpriseArchitect(EA)]]></title>
    <url>%2F2017%2F06%2F06%2FEnterpriseArchitect%2F</url>
    <content type="text"><![CDATA[下载 链接: https://pan.baidu.com/s/1pLhq7Kv 密码: bian sn Registration KeyADF8D83B-0683-4d1f-BB60-FF66D-WFM1-CHPZ-PII0-HN75-BCAuthorization KeyF08113BA-8B4F-41df-8F01-46DF2C35D249]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>ea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr相关]]></title>
    <url>%2F2017%2F05%2F19%2Fsolr2%2F</url>
    <content type="text"><![CDATA[]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ik分词器学习总结]]></title>
    <url>%2F2017%2F05%2F19%2Fik-summary%2F</url>
    <content type="text"><![CDATA[主要类及类的作用 core包 ik-core IKSegmenter IK分词器主类 主要方法init()初始化分词器： 初始化词典 初始化分词上下文 加载子分词器 加载歧义裁决器 LetterSegmenter 子分词器，英文分词器 主要方法analyze()处理三种类型的词： 纯英文单词或字母&quot;this is a dog&quot; 纯阿拉伯数字&quot;500&quot; 字母数字混合词&quot;Nikon D90&quot; CN_QuantifierSegmente 子分词器，中文量词分词器 主要方法analyze()处理中文数量词： 中文数词（一二两三四五六七八九十零壹贰叁肆伍陆柒捌玖拾百千万亿拾佰仟萬億兆卅廿） 中文数词（或阿拉伯数字）+量词；如&quot;21寸电脑&quot;,“二十架飞机” CJKSegmenter 子分词器，中文分词器(CJK,中日韩统一表意文字) 主要方法analyze() 主要是通过主词典对中文进行切分，如：“我不愿意”-&gt;“我|不愿意|愿意” IKArbitrator IK分词歧义裁决器 主要方法process(): 歧义裁决原则：匹配的长度越长越好，词的数量越少越好，路径跨度越长越好 如“我|不愿意|愿意”经过歧义裁决后“我|不愿意” Lexeme 词元 cfg包 ik-cfg Configuration 配置文件接口 主要方法： getMainDictionary() //获取主词典路径 getQuantifierDicionary() //获取量词词典路径 getExtDictionarys() //获取扩展词典路径 getExtStopWordDictionarys() //获取停止词词典路径 DefaultConfig Configuration的默认实现 dict 包 ik-dict Dictionary 字典类，提供字典相关的方法（感觉叫DictionaryUtil更贴切） 主要方法： loadMainDict() //加载主词典 loadExtDict() //加载扩展词典 loadStopWordDict() //加载用户扩展的停止词词典 loadQuantifierDict() //加载量词词典 DictSegment 字典树分段，代表字典树的一个分支（这才是真正意义上的字典） 主要方法： match() //匹配字段，返回这次匹配的命中对象Hit Hit 表示匹配字段的命中 主要方法： isMatch() //是否匹配 字典树数据结构前缀树 lucene包 ik-lucene IKAnalyzer IK分词器的主类是IK分词器的 Lucene Analyzer 类实现 IKAnalyzer(boolean useSmart) useSmart 为true时智能切词，false时最细粒度切词 IKTokenizer Lucene Tokenizer的适配器类，重写了构造分词组件方法createComponents() 基本流程 分词器初始化 实例化IKAnalyzer-&gt;调用父类Analyzer（来自lucene）的tokenStream()方法-&gt;tokenStream()中调用IKAnalyzer类重写的抽象方法createComponents()-&gt;实例化IKTokenizer-&gt;IKTokenizer构造中实例化IKSegmenter-&gt;IKSegmenter中调用init()方法初始化词典单例，初始化分词上下文，加载子分词器，加载歧义裁决器 主要代码： lucene Analyzer抽象类 public final TokenStream tokenStream(String fieldName, Reader reader) throws IOException &#123; Analyzer.TokenStreamComponents components = this.reuseStrategy.getReusableComponents(this, fieldName); Reader r = this.initReader(fieldName, reader); if(components == null) &#123; components = this.createComponents(fieldName, r); this.reuseStrategy.setReusableComponents(this, fieldName, components); &#125; else &#123; components.setReader(r); &#125; return components.getTokenStream(); &#125; IKAnalyzer 部分代码 /** * 重载Analyzer接口，构造分词组件 */@Override protected TokenStreamComponents createComponents(String fieldName, final Reader in) &#123; Tokenizer _IKTokenizer = new IKTokenizer(in , this.useSmart()); return new TokenStreamComponents(_IKTokenizer); &#125; IKTokenizer 构造器 /** * Lucene 4.0 Tokenizer适配器类构造函数 * @param in 输入流 * @param useSmart 智能切词 */public IKTokenizer(Reader in , boolean useSmart)&#123; super(in); offsetAtt = addAttribute(OffsetAttribute.class); termAtt = addAttribute(CharTermAttribute.class); typeAtt = addAttribute(TypeAttribute.class); _IKImplement = new IKSegmenter(input , useSmart); &#125; IKSegmenter 部分代码 /** * IK分词器构造函数 * @param input * @param useSmart 为true，使用智能分词策略 * * 非智能分词：细粒度输出所有可能的切分结果 * 智能分词： 合并数词和量词，对分词结果进行歧义判断 */ public IKSegmenter(Reader input , boolean useSmart)&#123; this.input = input; this.cfg = DefaultConfig.getInstance(); this.cfg.setUseSmart(useSmart); this.init(); &#125; /** * 初始化 */ private void init()&#123; //初始化词典单例 Dictionary.initial(this.cfg); //初始化分词上下文 this.context = new AnalyzeContext(this.cfg); //加载子分词器 this.segmenters = this.loadSegmenters(); //加载歧义裁决器 this.arbitrator = new IKArbitrator(); &#125; 预处理 英文分词 中文量词分词 中文分词 歧义处理 善后 参考 IK analyser源码解析 IK分词源代码分析学习——总体流程 IK中文分词扩展自定义词典！！！]]></content>
      <categories>
        <category>lucese</category>
      </categories>
      <tags>
        <tag>ik analzyer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[番羽土啬]]></title>
    <url>%2F2017%2F05%2F19%2Ffan%2F</url>
    <content type="text"><![CDATA[youtube youtube视频下载]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>gfw</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js总结]]></title>
    <url>%2F2017%2F05%2F18%2Fjs-summary%2F</url>
    <content type="text"><![CDATA[IE678不能试用JSON.stringify https://github.com/douglascrockford/JSON-js 来自：jQuery解决IE6、7、8不能使用 JSON.stringify 函数的问题]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java多线程]]></title>
    <url>%2F2017%2F05%2F16%2Fjava-thread%2F</url>
    <content type="text"><![CDATA[tips 不要对基本类型加锁 案例 来自iteye: public class Test &#123; public static void main(String[] args) &#123; final TestRun run = new TestRun(); Thread thread = new Thread(run); Thread thread2 = new Thread(run); thread.start(); thread2.start(); &#125;&#125;class TestRun implements Runnable &#123; public Integer i = 0; public Object lock = new Object(); @Override public void run() &#123; synchronized (i) &#123; i++; System.out.println("step1:" + i); i++; System.out.println("step2:" + i); &#125; &#125;&#125; 运行的结果。按理说，锁住了i对象，同步快中的内容顺序执行，结果为： step1:1 step2:2 step1:3 step2:4 但结果却是： step1:1 step1:2 step2:3 step2:4 或者 step1:1 step2:3 step1:2 step2:4 貌似没有锁住。 当改为synchronized （lock）{ …… } 结果就正常了！ 为什么？？？？锁住对象了，不能对对象进行操作吗？ 原因是Java的自动封箱和解箱操作在作怪。 这里的i++实际上是i = new Integer(i+1)，所以执行完i++后，i已经不是原来的对象了，同步块自然就无效了。 其它基本类型的封装类，如Short、Long等等也不能作为同步对象]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[demo]]></title>
    <url>%2F2017%2F02%2F13%2Fdemo%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[solr cloud 示例]]></title>
    <url>%2F2017%2F01%2F19%2Fsolr-cloud-example%2F</url>
    <content type="text"><![CDATA[单机搭建solr集群示例(4节点) 环境 centos6.6 solr6.3.0 步骤 进到solr安装目录然后执行以下命令 ##新建4个solr主目录（solr.solr.home）mkdir -p test/cloud/node&#123;1,2,3,4&#125;/solr##把配置文件拷贝到4个solr主目录echo test/cloud/node&#123;1,2,3,4&#125;/solr/ | xargs -n 1 cp -v server/solr/&#123;solr.xml,zoo.cfg&#125; ##启动第一个节点bin/solr start -cloud -p 8983 -s "test/cloud/node1/solr" ##启动第二个节点并加入到第一个节点启动的内置zookeeperbin/solr start -cloud -p 7574 -s "test/cloud/node2/solr" -z localhost:9983 ##启动第三个节点并加入到第一个节点启动的内置zookeeperbin/solr start -cloud -p 8984 -s "test/cloud/node3/solr" -z localhost:9983 ##启动第四个节点并加入到第一个节点启动的内置zookeeperbin/solr start -cloud -p 7575 -s "test/cloud/node4/solr" -z localhost:9983 ##上传`data_driven_schema_configs`到zookeeper并创建testcloud collectionbin/solr create -c testcloud -d data_driven_schema_configs -n testcloud -s 2 -rf 2 效果 solr-cloud]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单的LNMT环境搭建]]></title>
    <url>%2F2017%2F01%2F14%2Flnmt%2F</url>
    <content type="text"><![CDATA[linux + nginx + mysql + tomcat 架构 负载均衡服务器x1 web服务器x2 应用服务器x2 数据库服务器x2 文件服务器x1 缓存服务器x1 简化安装2个web服务器和2个应用服务器部署在2台物理机，主数据库服务器和缓存服务器部署在1台服务器，文件服务器不单独部署，搭了4台2c4g的centos7系统机器（实际应用中不同角色的服务器对硬件资源要求各不相同，应用服务器需要处理大量的业务逻辑， 因此需要更快更强大的CPU；数据库服务器需要快速磁盘检索和数据缓存，因此需要更快的硬盘和更大的内存；文件服务器需要存储大量用户上传的文件，因此需要更大的硬盘）。 部署图 +-----------------------+ |dsn-db01(10.1.0.6) | | | | +-------------+ | session manage| | | | +---------&gt; redis3.2.6 | |+-----------------------------------+ | | | | || dsn-app01(10.1.0.8) | | | +-------------+ || | | | || +-------------+ +-------------+ | | | +-------------+ || | | | | | |persist | | || | nginx1.10.2 +-+-&gt; tomcat7 +------+---------&gt; mysql5.7(m) | || | | | | | | | | | | || +-------------+ | +-------------+ | | | +-----+-^-----+ || | | | | | | |+-----------------------------------+ | +-----------------------+ | | | | sync |proxy_pass | | | | | | | | | | |+-----------------------------------+ | +-----------------------+| dsn-app02(10.1.0.9) | | |dsn-db02 | | || | | | |(10.1.0.7)| | || +-------------+ | +-------------+ | | | +-----v-+-----+ || | | | | | | | | | | || | nginx1.10.2 +-+-&gt; tomcat7 +------+ | | mysql5.7(s) | || | | | | | | | | || +-------------+ +-------------+ | | +-------------+ || | | |+-----------------------------------+ +-----------------------+ 准备介质 openssl-1.0.2j.tar.gz nginx-1.10.2.tar.gz pcre-8.39.tar.gz jemalloc-4.4.0.tar.bz2 apache-tomcat-7.0.69.tar.gz 百度云密码bian 安装步骤 linux安装 centos6或7 nginx安装 安装编译环境 yum install gcc gcc-c++ perl zlib-devel 解压源码包 tar xzf openssl-1.0.2j.tar.gztar xzf nginx-1.10.2.tar.gztar xzf pcre-8.39.tar.gz 安装jemalloc yum install bzip2tar xjf jemalloc-4.4.0.tar.bz2cd jemaloc-4.4.0./configuremake &amp;&amp; make installln -s /usr/local/lib/libjemalloc.so.2 /usr/lib64/libjemalloc.so.1echo '/usr/local/lib' &gt; /etc/ld.so.conf.d/local.confldconfig 添加用户 groupadd www ##创建用户组useradd -s /sbin/nologin -g www -M www ##创建一个用户，不允许登录不创建主目录 编译安装 cd nginx-1.10.2./configure \--prefix=/opt/nginx-1.10.2 \--user=www --group=www \--with-http_stub_status_module \--with-http_v2_module \--with-http_ssl_module \--with-http_gzip_static_module \--with-http_realip_module \--with-http_flv_module \--with-http_mp4_module \--with-openssl=../openssl-1.0.2j \--with-pcre=../pcre-8.39 \--with-pcre-jit \--with-ld-opt='-ljemalloc'make &amp;&amp; make install mysql安装 新建用户 useradd -M -s /sbin/nologin mysqlmkdir /usr/local/mysqlchown -R mysql.mysql /usr/local/mysqlmkdir -p /data/mysqlchown -R mysql.mysql /data/mysql 安装依赖 yum install gcc gcc-c++ cmake ncurses-devel bison 下载mysql5.7源码 wget https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/mysql-5.7.17.tar.gz 阿里云ecs安装mysql的话需要提前挂载数据盘，这有个自动挂载的脚本 wget http://mirrors.linuxeye.com/scripts/auto_fdisk.sh 安装boost wget http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.gz ##下载源码tar xvf boost*.tar.gzcd boost*./bootstrap.sh./bjam --prefix=/usr/local./b2 installecho '/usr/local/lib' &gt; /etc/ld.so.conf.d/local.confldconfig 安装mysql cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/mysql \ -DMYSQL_DATADIR=/data/mysql \ -DSYSCONFDIR=/etc \ -DWITH_INNOBASE_STORAGE_ENGINE=1 \ -DWITH_PARTITION_STORAGE_ENGINE=1 \ -DWITH_FEDERATED_STORAGE_ENGINE=1 \ -DWITH_BLACKHOLE_STORAGE_ENGINE=1 \ -DWITH_MYISAM_STORAGE_ENGINE=1 \ -DWITH_EMBEDDED_SERVER=1 \ -DENABLE_DTRACE=0 \ -DENABLED_LOCAL_INFILE=1 \ -DDEFAULT_CHARSET=utf8mb4 \ -DDEFAULT_COLLATION=utf8mb4_general_ci \ -DEXTRA_CHARSETS=all \ -DCMAKE_EXE_LINKER_FLAGS='-ljemalloc'make &amp;&amp; make install 加到系统服务 cp support-files/mysql.server /etc/init.d/mysqldsed -i "s@^basedir=.*@basedir=/usr/local/mysql@" /etc/init.d/mysqldsed -i "s@^datadir=.*@datadir=/data/mysql@" /etc/init.d/mysqldchmod +x /etc/init.d/mysqldchkconfig --add mysqld; chkconfig mysqld on; 修改配置文件 [client]port = 3306socket = /tmp/mysql.sockdefault-character-set = utf8mb4[mysql]prompt="MySQL [\\d]&gt; "no-auto-rehash[mysqld]port = 3306socket = /tmp/mysql.sockbasedir=/usr/local/mysqldatadir=/data/mysqlpid-file=/data/mysql/mysql.piduser = mysqlbind-address = 0.0.0.0server-id = 9init-connect = 'SET NAMES utf8mb4'character-set-server = utf8mb4skip-name-resolve#skip-networkingback_log = 300max_connections = 1000max_connect_errors = 6000open_files_limit = 65535table_open_cache = 128max_allowed_packet = 500Mbinlog_cache_size = 1Mmax_heap_table_size = 8Mtmp_table_size = 16Mread_buffer_size = 2Mread_rnd_buffer_size = 8Msort_buffer_size = 8Mjoin_buffer_size = 8Mkey_buffer_size = 4Mthread_cache_size = 8query_cache_type = 1query_cache_size = 8Mquery_cache_limit = 2Mft_min_word_len = 4log_bin = mysql-binbinlog_format = mixedexpire_logs_days = 7log_error = /data/mysql/mysql-error.logslow_query_log = 1long_query_time = 1slow_query_log_file = /data/mysql/mysql-slow.logperformance_schema = 0explicit_defaults_for_timestamp#lower_case_table_names = 1skip-external-lockingdefault_storage_engine = InnoDB#default-storage-engine = MyISAMinnodb_file_per_table = 1innodb_open_files = 500innodb_buffer_pool_size = 64Minnodb_write_io_threads = 4innodb_read_io_threads = 4innodb_thread_concurrency = 0innodb_purge_threads = 1innodb_flush_log_at_trx_commit = 2innodb_log_buffer_size = 2Minnodb_log_file_size = 32Minnodb_log_files_in_group = 3innodb_max_dirty_pages_pct = 90innodb_lock_wait_timeout = 120bulk_insert_buffer_size = 8Mmyisam_sort_buffer_size = 8Mmyisam_max_sort_file_size = 10Gmyisam_repair_threads = 1interactive_timeout = 28800wait_timeout = 28800[mysqldump]quickmax_allowed_packet = 500M[myisamchk]key_buffer_size = 8Msort_buffer_size = 8Mread_buffer = 4Mwrite_buffer = 4M# include all files from the config directory#!includedir /etc/my.cnf.d 初始化 /usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/usr/local/mysql --datadir=/data/mysqlchown mysql.mysql -R /data/mysqlecho "export PATH=/usr/local/mysql/bin:\$PATH" &gt;&gt; /etc/profilesource /etc/profileservice mysql startmysql -e "grant all privileges on *.* to root@'127.0.0.1' identified by \"&lt;password&gt;\" with grant option;"mysql -e "grant all privileges on *.* to root@'localhost' identified by \"&lt;password&gt;\" with grant option;"FLUSH PRIVILEGES redis安装 安装 tar xzf redis*cd redis*makemkdir -p /usr/local/redis/&#123;bin,etc,var&#125;cp src/&#123;redis-benchmark,redis-check-aof,redis-check-rdb,redis-cli,redis-sentinel,redis-server&#125; /usr/local/redis/bin/cp redis.conf /usr/local/redis/etc/ln -s /usr/local/redis/bin/* /usr/local/bin/sed -i 's@pidfile.*@pidfile /var/run/redis.pid@' /usr/local/redis/etc/redis.confsed -i "s@logfile.*@logfile /usr/local/redis/var/redis.log@" /usr/local/redis/etc/redis.confsed -i "s@^dir.*@dir /usr/local/redis/var@" /usr/local/redis/etc/redis.confsed -i 's@daemonize no@daemonize yes@' /usr/local/redis/etc/redis.confsed -i "s@^# bind 127.0.0.1@bind 127.0.0.1@" /usr/local/redis/etc/redis.conf 加到服务 vi /etc/init.d/redis-server #! /bin/sh### BEGIN INIT INFO# Provides: redis-server# Required-Start: $syslog# Required-Stop: $syslog# Should-Start: $local_fs# Should-Stop: $local_fs# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: redis-server - Persistent key-value db# Description: redis-server - Persistent key-value db### END INIT INFOPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/binDAEMON=/usr/local/redis/bin/redis-serverDAEMON_ARGS=/usr/local/redis/etc/redis.confNAME=redis-serverDESC=redis-serverPIDFILE=/var/run/redis.pidtest -x $DAEMON || exit 0test -x $DAEMONBOOTSTRAP || exit 0set -ecase "$1" in start) echo -n "Starting $DESC: " touch $PIDFILE chown redis:redis $PIDFILE if start-stop-daemon --start --quiet --pidfile $PIDFILE --chuid redis:redis --exec $DAEMON -- $DAEMON_ARGS then echo "[OK]" else echo "failed" fi ;; stop) echo -n "Stopping $DESC: " if start-stop-daemon --stop --retry 10 --quiet --oknodo --pidfile $PIDFILE --exec $DAEMON then echo "[OK]" else echo "failed" fi rm -f $PIDFILE ;; restart|force-reload) $&#123;0&#125; stop $&#123;0&#125; start ;; *) echo "Usage: /etc/init.d/$NAME &#123;start|stop|restart|force-reload&#125;" &gt;&amp;2 exit 1 ;;esacexit 0 chmod +x redis-servercc start-stop-daemon.c -o /sbin/start-stop-daemonchkconfig --add redis-serverchkconfig redis-server on 修改权限 useradd -M -s /sbin/nologin redischown -R redis:redis /usr/local/redis/var tomcat安装 安装jdk yum install java-1.8.0-openjdk-devel 解压apache-tomcat-7.0.69.tar.gz到/opt/apache-tomcat-7.0.69 tar xzf apache-tomcat-7.0.69.tar.gz -C /opt/ 添加软连接tomcat7 ln -s apache-tomcat-7.0.69 tomcat7 创建用户 useradd -M -s /bin/bash app 添加到服务 vi /etc/init.d/tomcat 添加以下内容： #!/bin/bash# description: tomcat Start Stop Restart# processname: tomcat# chkconfig: 2345 20 80export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdkexport PATH=$JAVA_HOME/bin:$PATHexport CATALINA_HOME=/opt/tomcat7export CATALINA_PID="$CATALINA_HOME/logs/tomcat.pid"export JAVA_OPTS="-Xmx1536M"export LANG="zh_CN.UTF-8"RUN_AS=appRUN="su $RUN_AS -c "case $1 instart) $RUN "cd $CATALINA_HOME &amp;&amp; bin/startup.sh";;stop) $RUN "cd $CATALINA_HOME &amp;&amp; bin/shutdown.sh" $RUN "test -f $CATALINA_PID &amp;&amp; kill -9 `cat $CATALINA_PID`";;restart) $RUN "cd $CATALINA_HOME &amp;&amp; bin/shutdown.sh" $RUN "cd $CATALINA_HOME &amp;&amp; bin/startup.sh";;esacexit 0 添加执行权限 chmod +x tomcat 自动启动 chkconfig --add tomcatchkconfig tomcat on 集群配置 redis 反向代理 tomcat session共享 tomcat+reids+session共享 mysql主从配置 mysql主从配置]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tomcat+reids+session共享]]></title>
    <url>%2F2017%2F01%2F13%2Ftomcat-reids-session-share%2F</url>
    <content type="text"><![CDATA[拷贝jar包到tomcat的lib目录 tomcat-redis-session-manager-VERSION.jar github 百度云（密码bian） jedis-2.5.2.jar 百度云（密码bian） commons-pool2-2.2.jar 百度云（密码bian） 修改context.xml配置文件 &lt;Valve className="com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve" /&gt;&lt;Manager className="com.orangefunction.tomcat.redissessions.RedisSessionManager" host="localhost" &lt;!-- optional: defaults to "localhost" --&gt; port="6379" &lt;!-- optional: defaults to "6379" --&gt; database="0" &lt;!-- optional: defaults to "0" --&gt; maxInactiveInterval="60" &lt;!-- optional: defaults to "60" (in seconds) --&gt; sessionPersistPolicies="PERSIST_POLICY_1,PERSIST_POLICY_2,.." &lt;!-- optional --&gt; sentinelMaster="SentinelMasterName" &lt;!-- optional --&gt; sentinels="sentinel-host-1:port,sentinel-host-2:port,.." &lt;!-- optional --&gt; /&gt; 示例： &lt;Valve className="com.radiadesign.catalina.session.RedisSessionHandlerValve" /&gt;&lt;Manager className="com.radiadesign.catalina.session.RedisSessionManager" host="10.1.0.6" port="6379" password="pwd" database="11" maxInactiveInterval="60"/&gt;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[solr]]></title>
    <url>%2F2017%2F01%2F12%2Fsolr-1%2F</url>
    <content type="text"><![CDATA[solr相关]]></content>
      <categories>
        <category>solr</category>
      </categories>
      <tags>
        <tag>solr</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql主从配置]]></title>
    <url>%2F2017%2F01%2F07%2Fmysql-master-slaver%2F</url>
    <content type="text"><![CDATA[背景 今天（哦不00点04分了，应该说是昨天），打算自己配置一个主从mysql实践一把学习学习，于是倒腾了一下午公司电脑里的东西，腾出了40g硬盘，删了N个游戏（心疼呀！），虚了俩台centos6.6，找了同事极力推荐的oneinstack,装了mysql5.6，开整！记下步骤，兴许哪天就能用上呢！ 环境 虚一台centos 主机名db01,为了快速安装，最小化安装就好了（其实并不好） 安装mysql 我想顺便试下oneinstack(有点大材小用)，刚想wget发现木网（最小化安装的），修改网络配置后启动network服务连上网yum又慢的想吐道路曲折跌跌撞撞但最终也装上了，不赘述！ 再虚一台centos 这时注意3点： 改下hostname(修改/etc/sysconfig/network文件HOSTNAME)，我改成db02了 拷贝虚拟机会自动添加一个网卡，造成连不上网，修改下网卡配置看这里 修改mysql的uuid（/data/mysql/auto.cnf修改下uuid值） 配置 master端 创建用户，执行sql命令 create user repl; 给repl用户授权 GRANT REPLICATION SLAVE ON *.* TO 'repl'@'172.19.136.%' IDENTIFIED BY '123zxc=-0/.,'; 修改配置文件(/etc/my.cnf) 在[mysqld]下面增加（或修改）下面几行代码 server-id=1 //给数据库服务的唯一标识，一般为大家设置服务器Ip的末尾号log_bin=master-binlog_bin_index=master-bin.index 查看master日志 show master status; master status 重启mysql slaver端 修改配置文件后重启服务 [mysqld]下增加（或修改）以下几行 server-id=2 //不要和master重复了relay-log-index=slave-relay-bin.indexrelay-log=slave-relay-bin 连接master,执行以下sql命令 change master to master_host='172.19.136.241',master_user='repl',master_port=3306,master_password='123zxc=-0/.,',master_log_file='master-bin.000001',master_log_pos=0; 启动slave start slave; 查看slave状态 show slave status\G; 报错1： The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work. uuid 解决：修改下uuid 报错2：网不通 解决：修改防火墙配置，终端命令为：/sbin/iptables -I INPUT -p tcp --dport 3306 -j ACCEPT 效果 在master建一个表 在主库创建一个表 在slaver上show tables 查看从库 参考 http://www.cnblogs.com/alvin_xp/p/4162249.html]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux-centos]]></title>
    <url>%2F2017%2F01%2F06%2Flinux-centos-1%2F</url>
    <content type="text"><![CDATA[最小化安装后需要做的事情 联网 vi /etc/sysconfig/network-script/ifcfg-eth0 NM_CONTROLLED=“no” ##取消Network Manager托管 ONBOOT=“yes” ##开机启动 BOOTPROTO=“dhcp” ##ip获取方式 service network start 开启sshd service sshd start 下载wget yum install wget 修改为国内源（阿里云为例） 备份你的原镜像文件，以免出错后可以恢复。 mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 下载新的CentOS-Base.repo 到/etc/yum.repos.d/ CentOS 5 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo CentOS 6 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo 运行yum makecache生成缓存 yum clean allyum makecache 安装openssh-clients(scp在这个包) yum install openssh-clients 源码安装node https://www.cppfans.org/1719.html netStart.sh iptables -P INPUT ACCEPTiptables -P OUTPUT ACCEPT netStop.sh iptables -P INPUT DROPiptables -P OUTPUT DROP server &#123; listen 80; server_name blog.bovod.org panpan.lu; location / &#123; proxy_pass http://localhost:2368; client_max_body_size 50m; &#125; &#125;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[联通HG220GU-WO36光猫管理员权限破解]]></title>
    <url>%2F2017%2F01%2F06%2Fnet-modem%2F</url>
    <content type="text"><![CDATA[访问 http://192.168.1.1/logoffaccount.html，隐藏用户改为启用， 这样就可以用工程账号登陆了。 登录工程帐号用户名：fiberhomehg2x0 密码：hg2x0 访问 http://192.168.1.1/backupsettings.html 下载 backupsettings.conf backupsettings.conf 里找 AdminPassword我这台上是 MTIzcXdlYXNkenhjAA==base64解码拿到密码 123qweasdzxc 看这密码的长相估计这批设备上的都一样 进服务设置，找到维护帐号开关，选开启后保存，这样就可以用管理员登录了 用户名CUAdmin 注意大小写 密码123qweasdzxc 登录 http://192.168.1.1/cu.html 更改光猫为桥接方式，桥接路由器（折腾了两个晚上木搞定，留个坑吧） 参考：http://blog.csdn.net/jtongfei/article/details/50405753]]></content>
      <categories>
        <category>net</category>
      </categories>
      <tags>
        <tag>net</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好，2017]]></title>
    <url>%2F2017%2F01%2F01%2Fhello2017%2F</url>
    <content type="text"><![CDATA[2016就这么过去了，新的一年又开始了，愿我的家人身体健康，一生平安！儿子在睡觉，媳妇在(貌似)看跨年晚会吧，我在学习下服务器架构。还要造个轮子，写个工具！]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[像程序员一样去生活]]></title>
    <url>%2F2016%2F12%2F27%2Fprogramers-life%2F</url>
    <content type="text"><![CDATA[我就是我 是颜色不一样的烟火 迷恋玉米贷写了个脚本定时抓取借款列表数据，利率超过10%，给我发短信。 记事本工具从editplus到onenote到evnenote到有道笔记到蚂蚁笔记到emacs的org-mode（现在有点上瘾了），回归原始纯天然无公害 (chún wén běn shuǎng wāi wāi) 午休时间，打开豆瓣带上耳机打开todo,先来它一个番茄钟 (Pomodoro Technique) ! wb]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[时间轴]]></title>
    <url>%2F2016%2F12%2F26%2Ftimeline%2F</url>
    <content type="text"><![CDATA[2017-03-14 17:49:00 修改域名为bianle.blog 2016-12-26 19:15:36 添加不蒜子统计 2016-11-03 14:53:42 主题改成NexT 2015-10-09 00:00:00 迁移到github,博客程序改为hexo 2012-06-28 00:00:00 淘宝购买PHP空间搭建wordpress博客]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>timeline</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[http升级https]]></title>
    <url>%2F2016%2F12%2F26%2Fhttp2https%2F</url>
    <content type="text"><![CDATA[背景 nginx + centos6 生成证书 wget https://dl.eff.org/certbot-autochmod a+x certbot-auto./certbot-auto certonly nginx配置 server&#123; listen 443; server_name vpn.le.im test.le.im; ssl on; ssl_certificate /etc/letsencrypt/live/vpn.le.im/cert.pem; ssl_certificate_key /etc/letsencrypt/live/vpn.le.im/privkey.pem; location /&#123; root /usr/share/nginx/html/test; index index.html index.htm; &#125;&#125; 参考 https://certbot.eff.org/#centos6-nginx]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>https</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jenkins]]></title>
    <url>%2F2016%2F12%2F23%2Fjava-jenkins%2F</url>
    <content type="text"><![CDATA[安装 yum install java rpm -ivh http://ftp.tsukuba.wide.ad.jp/software/jenkins/redhat-stable/jenkins-2.7.4-1.1.noarch.rpm service jenkins start 使用 jenkins centos65上将jenkins（jar包运行）设为daemon service http://blog.csdn.net/qiyueqinglian/article/details/50699008]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux命令]]></title>
    <url>%2F2016%2F12%2F22%2Flinux-command%2F</url>
    <content type="text"><![CDATA[一些常用的linux命令 linux查看系统信息 uname -a #电脑以及操作系统的相关信息cat /proc/version #内核版本cat /etc/issue #发行版信息lsb_release -a #适用于所有的linux，包括Redhat、SuSE、Debian等发行版，但是在debian下要安装lsb 下载 scp [-P &lt;端口号&gt;] &lt;用户名&gt;@&lt;远程服务器地址&gt;:&lt;文件目录&gt; &lt;本地文件目录&gt;scp -P 28639 root@vpn.le.im:/usr/local/ngrok/bin/darwin_amd64/ngrok ~/ 查看文件修改时间 stat &lt;File&gt; set -e #!/bin/bashset -ecommand 1command 2...exit 0 每个脚本都应该在文件开头加上set -e,这句语句告诉bash如果任何语句的执行结果不是true则应该退出 centos6上安装samba服务时需要关闭selinux 查看状态 sestatusSELinux status: enabled SELinuxfs mount: /sys/fs/selinux SELinux root directory: /etc/selinux Loaded policy name: targeted Current mode: enforcing Mode from config file: enforcing Policy MLS status: enabled Policy deny_unknown status: allowed Max kernel policy version: 28 临时关闭 setenforce 0 永久关闭 将SELINUX值设为disabled cat /etc/selinux/config# This file controls the state of SELinux on the system. # SELINUX= can take one of these three values: # enforcing - SELinux security policy is enforced. # permissive - SELinux prints warnings instead of enforcing. # disabled - No SELinux policy is loaded. #SELINUX=enforcing SELINUX=disabled # SELINUXTYPE= can take one of three two values: # targeted - Targeted processes are protected, # minimum - Modification of targeted policy. Only selected processes are protected. # mls - Multi Level Security protection. SELINUXTYPE=targeted 或者直接执行以下命令修改 sed -i '/SELINUX/s/enforcing/disabled/' /etc/selinux/config 参考 http://www.centoscn.com/CentOS/config/2015/0618/5681.html 使用cpu最多的10个进程 ps -aux | sort -k3nr | head -n 10 使用内存最多的10个进程 ps -aux | sort -k4nr | head -n 10]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macos-charles]]></title>
    <url>%2F2016%2F12%2F20%2Fmacos-charles%2F</url>
    <content type="text"><![CDATA[叫我查尔斯好了 charles 抓包修改请求参数 右键勾选breakpoints 修改请求参数 同理可以修改响应参数 mac上charles抓安卓https包 更新charles到&gt;3.10,百度云下载4.0.2(含破解补丁)链接: https://pan.baidu.com/s/1gf9htbt 密码: bian help-&gt;SSL proxying-&gt;Install Charles Root Certificate 右击根证书，点击显示简介，展开信任选项选择始终信任 help-&gt;SSL proxying-&gt;Install Charles Root Certificate on a Mobile Device or Remote Browser 手机浏览器(内置的)按提示打开chls.pro/ssl-&gt;选择WLAN-&gt;确认即可，其他浏览器（如uc）会下载证书然后手动安装即可 （其他浏览器需要手动安装证书）安卓设备设置-&gt;安全-从设备存储安装-选择WLAN 使用浏览器访问百度测试]]></content>
      <categories>
        <category>macos</category>
      </categories>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emacs-mobileorg]]></title>
    <url>%2F2016%2F12%2F20%2Femacs-mobileorg%2F</url>
    <content type="text"><![CDATA[MobileOrg is a FREE (open-source) iPhone and iPod Touch application for storing, searching, viewing and editing your Org-mode files. MobileOrg works offline. Although you may not always be online, you can always access your data. You can even capture notes while offline and sync the next time you have connectivity. – 这是官方的介绍，大概意思就是MobileOrg是个很拽的东西，让你在手机上也能玩的起Org，不管你有没有3G，4G信号。 准备工作 一台安装了eamcs的电脑（电脑） 一部安装了mobileorg的手机（手机） 电脑和手机同时可以访问的服务器（服务器） 服务器配置 登录服务器新建一文件夹用于存放要同步的文件 mkdir org 电脑配置 emacs配置(2016-12-28 20:44:20更新去掉几个文件) 将以下代码添加到emacs的配置文件~/.emacs或者~/.emacs.d/init.el ;; This is just an example. The way you do it might be;; completely different, and that's fine, as long as you wind up;; with `org-agenda-files' set usefully.(setq org-directory "~/org/") ;;org主目录(custom-set-variables '(org-agenda-files (quote ("todo.org" "private/personal.org"))));;上边定义了org主目录这里可以写相对路径;;这里设置MobileOrg同步的文件如果不配置则默认同步org-agenda-files列表;;(setq org-mobile-files (list "office.org";; "home.org";; ))(setq org-mobile-directory "/bl@tunnel.ink:org") ;;服务器路径，格式： /[用户名@]&lt;服务器&gt;:&lt;电脑的org文件将同步到的目录&gt;。(setq org-mobile-inbox-for-pull "~/org/index.org");;手机同步用。注：这个地址要写绝对路径！ 建立相关文件和文件夹 cd Documentstouch work.org mkdir privatetouch private/personal.org 手机配置 选择ssh mobileorg手机配置示意 填写服务器信息 mobileorg手机配置示意 开始同步 随便写点东西 电脑写内容展示 M-x org-mobile-push 然后输入密码，emacs会通过scp命令自动将文件传到服务器 手机点击同步按钮（就是右上角那个圈圈） 手机同步内容展示 参考 http://svn.red-bean.com/repos/main/3bits/mobile_org_3bits.txt]]></content>
      <categories>
        <category>emacs</category>
      </categories>
      <tags>
        <tag>emacs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[boot2docker]]></title>
    <url>%2F2016%2F12%2F13%2Fboot2docker%2F</url>
    <content type="text"><![CDATA[osx下安装boot2docker 下载安装包 github 安装 命令行启动 boot2docker init #只需要执行一次boot2docker startboot2docker shelliniteval "$(boot2docker shellinit)" #只对当前会话生效 验证是否安装成功 docker run hello-world 基本练习 boot2docker statusdocker version 在docker上启动一个nginx容器 docker run -d -P --name web nginx 使用docker ps查看运行的容器 使用docker port web查看容器端口 获取boot2docker主机地址 boot2docker ip 停止并删除容器 docker stop webdocker rm web 安装compose curl -L https://github.com/docker/compose/releases/download/1.3.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-compose 参考 http://www.widuu.com/docker/compose/install.html http://www.widuu.com/docker/installation/mac.html]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-tag-demo-demo]]></title>
    <url>%2F2016%2F12%2F07%2Fhexo-tag-demo-demo%2F</url>
    <content type="text"><![CDATA[hexo里创建html代码demo Click Me (function(){ document.getElementById('demo-button').onclick = function() { var randomColor = '#' + Math.random().toString().substr(2,6); document.getElementById('colorbox').innerHTML = randomColor; document.getElementById('colorbox').style.background = randomColor; } })(); #colorbox { border: 1px solid #ddd; height: 150px; width: 200px; line-height: 150px; text-align: center; margin-bottom: 20px; color: #fff; } #demo-button { padding: 5px 10px; } hexo-tag-demoAn example for hexo-tag-demo. The intro tag supports markdown. html12&lt;div id=&quot;colorbox&quot;&gt;&lt;/div&gt;&lt;button id=&quot;demo-button&quot;&gt;Click Me&lt;/button&gt;javascript12345document.getElementById(&apos;demo-button&apos;).onclick = function() { var randomColor = &apos;#&apos; + Math.random().toString().substr(2,6); document.getElementById(&apos;colorbox&apos;).innerHTML = randomColor; document.getElementById(&apos;colorbox&apos;).style.background = randomColor;}css123456789101112#colorbox { border: 1px solid #ddd; height: 150px; width: 200px; line-height: 150px; text-align: center; margin-bottom: 20px; color: #fff;}#demo-button { padding: 5px 10px;}]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emacs-macros]]></title>
    <url>%2F2016%2F12%2F06%2Femacs-macros%2F</url>
    <content type="text"><![CDATA[又学一招：eamcs宏 (macros) , emacs带你装逼带你飞！ 背景 emacs利用宏在每行尾插入固定字符(两个空格) 开始录制 C-x ( 录制 C-e &lt;spc&gt; &lt;spc&gt; C-n 停止录制 C-x ) 回放 C-x e 然后一直e C-e 然后一直e 效果 emacs-macos 参考 http://stackoverflow.com/questions/4870704/appending-characters-to-the-end-of-each-line-in-emacs]]></content>
      <categories>
        <category>eamcs</category>
      </categories>
      <tags>
        <tag>emacs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python-eyeD3]]></title>
    <url>%2F2016%2F12%2F06%2Fpython-eyeD3%2F</url>
    <content type="text"><![CDATA[用python都去mp3文件内嵌的封面 背景 读取mp3封面 指路人 You can use eyed3 which is a great utility for handling id3 tags. To extract all images from an mp3 file you can use: &gt;eyeD3 --write-images=DIR mp3_file&gt; This will write all embedded images from the mp3 file to the specified directory. I just found out that ffmpeg will do the trick! &gt;ffmpeg -i file.mp3 file.jpg&gt; http://unix.stackexchange.com/questions/41287/how-to-extract-album-cover-image-from-mp3-file eyeD3试用 安装 eyeD3是个python模块可以通过pip安装，命令为： pip install eyeD3 如果没安装pip，提前安装sudo easy_install pip 参考 官网]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[追梦赤子心]]></title>
    <url>%2F2016%2F12%2F06%2Fzhuimengchizixin%2F</url>
    <content type="text"><![CDATA[看段子『横空出世』里的一个片段，可能是段友加的一段背景音乐，很好听！ 鲜花的世界到底在哪里 如果它真的存在那么我一定会去 我想在那里最高的山峰矗立 不在乎它是不是悬崖峭壁 用力活着用力爱哪怕肝脑涂地 不求任何人满意只要对得起自己 关于理想我从来没选择放弃 即使在灰头土脸的日子里 也许我没有天分 但我有梦的天真 我将会去证明用我的一生 也许我手比脚笨 但我愿不停探寻 付出所有的青春不留遗憾 向前跑 迎着冷眼和嘲笑 生命的广阔不历经磨难怎能感到 命运它无法让我们跪地求饶 就算鲜血洒满了怀抱 继续跑 带着赤子的骄傲 生命的闪耀不坚持到底怎能看到 与其苟延残喘不如纵情燃烧吧 有一天会再发芽 未来迷人绚烂总在向我召唤 哪怕只有痛苦作伴也要勇往直前 我想在那里最蓝的大海扬帆 绝不管自己能不能回还 失败后郁郁寡欢 那是懦夫的表现 只要一息尚存请握紧双拳 在天色破晓之前 我们要更加勇敢 等待日出时最耀眼的瞬间 向前跑 迎着冷眼和嘲笑 生命的广阔不历经磨难怎能感到 命运它无法让我们跪地求饶 就算鲜血洒满了怀抱 继续跑 带着赤子的骄傲 生命的闪耀不坚持到底怎能看到 与其苟延残喘不如纵情燃烧 为了心中的美好 不妥协直到变老 var aplayer1 = new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: false,showlrc: 0,music : {title: "追梦赤子心",author: "GALA",url: "http://blimg.bovod.org/music/%E8%BF%BD%E6%A2%A6%E8%B5%A4%E5%AD%90%E5%BF%83.mp3",pic: "http://blimg.bovod.org/music/%E8%BF%BD%E6%A2%A6%E8%B5%A4%E5%AD%90%E5%BF%83.jpg"}});aplayer1.init();]]></content>
      <categories>
        <category>music</category>
      </categories>
      <tags>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小技巧 - svn篇]]></title>
    <url>%2F2016%2F12%2F02%2Fsvn-tip%2F</url>
    <content type="text"><![CDATA[svn的一些小技巧 svn部分检出 svn co --depth empty http://xxx.xxx.xxx.xxx/svn/RedMaster RedMastersvn update --set-depth infinity RedMaster/1.3需求管理 –depth empty Include only the immediate target of the operation, not any of its file or directory children. –depth files Include the immediate target of the operation and any of its immediate file children. –depth immediates Include the immediate target of the operation and any of its immediate file or directory children. The directory children will themselves be empty. –depth infinity Include the immediate target, its file and directory children, its children’s children, and so on to full recursion. –set-depth ARG Sets the sticky depth on a directory in a working copy to one of empty, files, immediates,or infinit. 参考 svn-book 百度云 密码: bian svn 更改地址 svn relocate &lt;新地址&gt; svn add 递归目录下所有新文件 svn add . --no-ignore --force svn比较本地副本修改内容 svn diff svn diff 可以指定diff客户端 svn diff --diff-cmd=meld svn diff meld 也可以直接修改svn配置文件~/.subversion/config中diff-cmd选项,这样就不用每次都输入参数了 svn config centos svnserve yum install -y subversion svnserve --version mkdir /var/svn svnadmin create /var/svn/repo0 http://www.centoscn.com/CentosServer/ftp/2014/0306/2505.html]]></content>
      <categories>
        <category>svn</category>
      </categories>
      <tags>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[黑科技]]></title>
    <url>%2F2016%2F12%2F01%2Fblack-tech%2F</url>
    <content type="text"><![CDATA[一些黑科技 自定义百度网盘分享密码 提取码 点击分享按钮后会弹出一个模态框，先不管它，按 F12 打开开发者工具，切换至控制台（Console），将以下代码复制粘贴到控制台，然后回车； javascript:require(["function-widget-1:share/util/service/createLinkShare.js"]).prototype.makePrivatePassword=function()&#123;return prompt("老D的自定义百度网盘提取码","laod")&#125; https://laod.cn/black-technology/baidu-wangpan-tiquma.html]]></content>
      <categories>
        <category>tips</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea代码分析]]></title>
    <url>%2F2016%2F11%2F28%2Fidea-analyze%2F</url>
    <content type="text"><![CDATA[idea代码分析功能 利用idea代码分析删除unused method paramter Analyze -&gt; Run Inspection By Name 输入 Unused me 双击 Unused method paramters idea 出现如下界面，点击ok idea 稍等片刻，分析结果 idea 点击Delete unused parameter(s) idea]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea正则替换]]></title>
    <url>%2F2016%2F11%2F28%2Fidea-regex-replace%2F</url>
    <content type="text"><![CDATA[idea正则替换功能 背景 最近在改sonar上扫描出的代码缺陷有一条建议用isEmpty()代替size()&gt;0 idea idea中正则替换 Command⌘ + r 打开替换框,勾选`Regex` idea 查找串([a-zA-Z]*).size\(\)&gt;0替换为!$1.isEmpty() 点击Replace all 批量(2017-07-17 13:45:56) 背景 还是改sonar问题:javabean的成员变量为对象类型如下警告： com.xxx.md.bussiness.bo.MdActivityBo.getActiStartDate() may expose internal representation by returning MdActivityBo.actiStartDate 解决办法 参考http://tuozixuan.iteye.com/blog/1702634 正则替换 get方法： public Date get(.*)\n(.*)return (\w*);|vpublic Date get$1\n if\($3!=null\)\&#123;\n return \(Date\) $3.clone\(\);\n\ &#125;\n$2return null; set方法 public void set(.*)\(Date (.*)\)(.*)\n(.*)this\.(\w*)(.*);|vpublic void set$1(Date $2)&#123;\n if($2!=null)&#123;\n this.$2=(Date)$2.clone();\n return;\n &#125;\n this.$2=null; 步骤 选中一个包后Ctrl+Shift⇧+r 点击options选项卡，勾选Regular expression 输入Text to find和Replace with 点击Find然后Replace单个替换或者all files全部替换 idea-reg]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea抽取常量]]></title>
    <url>%2F2016%2F11%2F28%2Fidea-extact-constant%2F</url>
    <content type="text"><![CDATA[idea抽取常量 背景 这几天修改sonar上扫描出来的代码缺陷，其中一个String literals should not be duplicated让我 又学会了一个idea的快捷键抽取常量 症状 idea mav.addObject("result", "balabala");mav.addObject("result", "balabala");mav.addObject("result", "balabala");mav.addObject("result", "balabala");... 快捷键 选中&quot;result&quot; , 按 Option⌥ + Command⌘ + c , 弹出下图提示(此时再按下 Option⌥ + Command⌘ + c 则弹出更多选项) idea 选中Replac all occurrences, enter↵ 搞定 插曲 Option⌥ + Command⌘ + c 和 alfred 的 snipper 冲突，懒得改键了我暂时把alfred关了]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea宏]]></title>
    <url>%2F2016%2F11%2F25%2Fidea-macros%2F</url>
    <content type="text"><![CDATA[idea宏 背景 最近修改sonar上扫描的问题，有些重复问题（比如下边这个），本着『磨刀不误砍柴工』的精神学了下idea宏的录制方法。 Local Variables should not be declared and then immediately returned or throw 本地变量不应该刚定义完就直接返回 idea 步骤 开始之前 光标在new关键字前 开始录制 菜单Edit-Macros-Start Macros Recording开始录制宏这时候右下角出现录制标志 idea 以下是录制的内容 shift⇧+Command⌘+→，光标移动到选取并选中 Command⌘+x，剪切 Command⌘+y，删除这一行 两次shift⇧+alt+←，光标后退两个单词（分号和mav） Ctrl+v，粘贴 Ctrl+s，保存 录制完毕后保存并绑定导快捷键 idea 回放 找到其他类，光标移到new关键字前，按Option⌥+Command⌘+1 效果 idea]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nodejs]]></title>
    <url>%2F2016%2F11%2F24%2Fnodejs%2F</url>
    <content type="text"><![CDATA[nodejs相关整理 windows绿色版nodejs 自制node.js + npm绿色版 centos 安装 nodejs sudo yum install epel-release sudo yum install nodejssudo yum install npm]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[onenote]]></title>
    <url>%2F2016%2F11%2F23%2Fonenote%2F</url>
    <content type="text"><![CDATA[onenote相关 计算器功能 输入算式（如1+1=），然后按Space onenote 除了基本的运算符号外还支持ABS, ACOS, ASIN, ATAN, COS, DEG, LN, LOG, LOG2, LOG10, MOD, PI, PHI, PMT, RAD, SIN, SQRT, TAN等高级运算符 http://www.tuicool.com/articles/6jqUVzj]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>onenote</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好大的异常-python篇]]></title>
    <url>%2F2016%2F11%2F22%2Fexception-python%2F</url>
    <content type="text"><![CDATA[Python version 2.7 required, which was not found in the registry http://blog.csdn.net/zdnlp/article/details/12171687 ## script to register Python 2.0 or later for use with win32all# and other extensions that require Python registry settings## written by Joakim Loew for Secret Labs AB / PythonWare## source:# http://www.pythonware.com/products/works/articles/regpy20.htm## modified by Valentine Gogichashvili as described in http://www.mail-archive.com/distutils-sig@python.org/msg10512.html import sys from _winreg import * # tweak as necessaryversion = sys.version[:3]installpath = sys.prefix regpath = "SOFTWARE\\Python\\Pythoncore\\%s\\" % (version)installkey = "InstallPath"pythonkey = "PythonPath"pythonpath = "%s;%s\\Lib\\;%s\\DLLs\\" % ( installpath, installpath, installpath) def RegisterPy(): try: reg = OpenKey(HKEY_CURRENT_USER, regpath) except EnvironmentError as e: try: reg = CreateKey(HKEY_CURRENT_USER, regpath) SetValue(reg, installkey, REG_SZ, installpath) SetValue(reg, pythonkey, REG_SZ, pythonpath) CloseKey(reg) except: print "*** Unable to register!" return print "--- Python", version, "is now registered!" return if (QueryValue(reg, installkey) == installpath and QueryValue(reg, pythonkey) == pythonpath): CloseKey(reg) print "=== Python", version, "is already registered!" return CloseKey(reg) print "*** Unable to register!" print "*** You probably have another Python installation!" if __name__ == "__main__": RegisterPy()]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小技巧 - mysql篇]]></title>
    <url>%2F2016%2F11%2F22%2Fmysql-tips%2F</url>
    <content type="text"><![CDATA[mysql 查询行号 select @rowno:=@rowno+1 as rowno,t.* from test t,(select @rowno:=0) r mysql里int字段插入float会四舍五入 关于索引（2016-12-28 15:15:20补充） 字符串类型索引字段，查询条件如果传数字，索引不生效 联合索引，查询条件只有部分字段的话，索引不生效 以下忽略： 红掌柜项目优化sql SELECT M.MEMBER_ID, M. NAME, M.MOBILE, M.CARD_DATE, M.MAINTAIN_DATE, M.EMPLOYEE_ID, M.BABY_NAME, M.BABY_BIRTHDAY, M.BABY_SEX, M.MEMBER_SEX, M.IS_OFFLINE, T.TOTAL_CONSUME_AMOUNT, T.TOTAL_ORDER_NUM, T.LAST_CONSUME_DATE, r.connect_status, CASE WHEN r.connect_status = 3 THEN 1 WHEN r.connect_status IS NULL THEN 3 ELSE r.connect_status END remark_typeFROM RM_MEMBER MLEFT JOIN rm_contact_remark r ON r.employee_id = m.employee_idAND r.member_id = m.member_idAND act_id =- 1, RM_MEMBER_TAG TWHERE M.MEMBER_ID = T.MEMBER_IDAND M.EMPLOYEE_ID = '14082377'ORDER BY remark_type DESC, M.UPDATE_TIME DESC, M.MEMBER_IDLIMIT 0, 20]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sublime-text-2]]></title>
    <url>%2F2016%2F11%2F22%2Fsublime-text-2%2F</url>
    <content type="text"><![CDATA[st2相关 Sublime Text 2 入门及技巧 http://lucifr.com/2011/08/31/sublime-text-2-tricks-and-tips/#package_control Sublime Text 2中如何实现Markdown语法高亮？如何实现实时双窗口预览? https://www.zhihu.com/question/20712067]]></content>
      <categories>
        <category>st2</category>
      </categories>
      <tags>
        <tag>st2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[chrome安装安装应用]]></title>
    <url>%2F2016%2F11%2F22%2Frun-apk-in-chrome%2F</url>
    <content type="text"><![CDATA[如何流畅得在所有linux发行版上跑android的apk程序。 http://tieba.baidu.com/p/3308520670 chrome运行apk问题：无法加载以下来源的扩展程序： There is no “message” element for key extName. 打开你转换apk后的文件夹，找到_locales\en目录下的messages.json文件，用txt或word打开，在&quot;description&quot;: “Extension name&quot;后加英文逗号，回车，添加&quot;message”: “XXXX” XXXX为转换apk后的文件夹名，比如你这个应该就是&quot;message&quot;: “com.xiaoji.emulator” 保存后重新加载应该就可以了， 我遇到跟你一样的问题，多方查证尝试已解决 https://zhidao.baidu.com/question/553546877343977732.html]]></content>
      <categories>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ascii]]></title>
    <url>%2F2016%2F11%2F22%2Fascii%2F</url>
    <content type="text"><![CDATA[“tree” command output with “pure” (7-bit) ASCII output I’m not sure about this but I think all you need is tree | sed ‘s/├/+/g; s/─/-/g; s/└/\/g’ For example: $ tree . ├── file0 └── foo ├── bar │ └── file2 └── file1 2 directories, 3 files $ tree | sed ‘s/├/+/g; s/─/-/g; s/└/\/g’ . ±- file0 – foo ±- bar │ – file2 – file1 2 directories, 3 files Alternatively, you can use the --charset option: $ tree --charset=ascii . |-- file0 -- foo |-- bar |– file2 `-- file1 2 directories, 3 files http://unix.stackexchange.com/questions/127063/tree-command-output-with-pure-7-bit-ascii-output 如何制作纯 ASCII 文本流程图 https://www.tuicool.com/articles/fqEzqa 佛 // // _oo8oo_// o8888888o// 88" . "88// (| -_- |)// 0\ = /0// ___/'==='\___// .' \\| |// '.// / \\||| : |||// \// / _||||| -:- |||||_ \// | | \\\ - /// | |// | \_| ''\---/'' |_/ |// \ .-\__ '-' __/-. /// ___'. .' /--.--\ '. .'___// ."" '&lt; '.___\_&lt;|&gt;_/___.' &gt;' "".// | | : `- \`.:`\ _ /`:.`/ -` : | |// \ \ `-. \_ __\ /__ _/ .-` / /// =====`-.____`.___ \_____/ ___.`____.-`=====// `=---=`// // // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//// 佛祖保佑 永不宕机/永无bug//]]></content>
      <categories>
        <category>ascii</category>
      </categories>
      <tags>
        <tag>ascii</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信]]></title>
    <url>%2F2016%2F11%2F20%2Fwechat%2F</url>
    <content type="text"><![CDATA[公众号平台开发文档 http://mp.weixin.qq.com/wiki/home/index.html 使用python一步一步搭建微信公众平台 https://my.oschina.net/yangyanxing/blog/159215]]></content>
      <categories>
        <category>wechat</category>
      </categories>
      <tags>
        <tag>wechat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[springmvc]]></title>
    <url>%2F2016%2F11%2F20%2Fspringmvc%2F</url>
    <content type="text"><![CDATA[SpringMVC处理Date类型的成员变量方法 http://blog.csdn.net/z69183787/article/details/40373565 SpringMVC提交数组时不能超过256个值 http://blog.csdn.net/f2004/article/details/17218039]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>springMVC</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ehcache]]></title>
    <url>%2F2016%2F11%2F20%2Fehcache%2F</url>
    <content type="text"><![CDATA[ehcache详解 http://raychase.iteye.com/blog/1545906]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>ehcache</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse]]></title>
    <url>%2F2016%2F11%2F20%2Feclipse%2F</url>
    <content type="text"><![CDATA[Eclipse的Servers视图中无法添加Tomcat6/Tomcat7 http://blog.csdn.net/blueheart20/article/details/40043749 svn项目忽略.project,.classpath等配置信息 Windows -&gt; Preferences -&gt; Team -&gt; Ignored Resources里点 Add Pattern，然后把 target 等等东西一个一个输入 target.project.classpath.settings.settings/* eclipse 注释user变量修改 在使用Eclipse编写Java代码时，自动生成的注释信息都是默认是使用的当前登录系统用户名： /** * @author administrator */ 如果我们想修改成我们自己的名字怎么办呢? 方法1：修改Eclipse 启动参数 在Eclipse启动时加入启动参数或eclipse.ini中添加一句 -vmargs -Duser.name=ZhangSanfeng 方法2：修改Eclipse代码模板 通过菜单 Window-&gt;Preference -&gt; Java -&gt; Code Style -&gt; Code Templates 在右侧选择Comments,将其中的Types项，然后选右边的&quot;Edit&quot;，进入编辑模式，将 @author ${user} 中的${user}改成你自己的名字即可 方法3：修改操作系统的用户名 http://www.linuxidc.com/Linux/2011-12/50090.htm]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[电话本]]></title>
    <url>%2F2016%2F11%2F17%2Faddrbook%2F</url>
    <content type="text"><![CDATA[盐山到北京 线路 电话 车牌号 反刘-北京 15831889766（随车）13930753802（司机） 旧县-北京 13932709041（旧县）13932776260（北京） 冀J78388（旧县）冀J78275（北京） 吉科-北京 13703278260 上次我拍的 addrbook addrbook addrbook addrbook 2016-12-02 11:02:21补充 addrbook addrbook 题外话 前两天想着弄一个小论坛类似这个，面向盐山父老，借助互联网把一些东西分享，今天表姐打电话说姨和姨夫来北京，打电话不接(最后接了)，问我要北京车电话，什么东西都是用时方恨少啊，我就俩旧县的电话，于是网上搜刮找到了一些，记在这里，以备后用吧！ 参考 http://blog.sina.com.cn/s/blog_86f2716d010104lr.html 赵公口-塘沽 京A-93326 13231888656/13240983411 闫航滨 赵公口-塘沽 京A-A6529 13261077600/13240983411 赵公口-塘沽 津A-D7329 80672412 王 赵公口-塘沽 津A-D7336 86672252 秦 赵公口-塘沽 津A-D7356 80672412 王 赵公口-塘沽 津A-G1605 13920405828 NULL 赵公口-塘沽 津A-G1609 13821602717 NULL 赵公口-塘沽 津A-G1610 13602038395 NULL 赵公口-塘沽 津A-C2798 13370393676 NULL 赵公口-塘沽 津A-C2816 13820946855 NULL 赵公口-塘沽 津A-C2826 13902146655/13920187530 NULL 赵公口-塘沽 津A-C9075 13821602717 NULL 赵公口-塘沽 津A-C9170 13920405828/13920405828 NULL 赵公口-塘沽 津A-C9176 13512916167/13602038395 NULL 赵公口-塘沽 京A-C8489 13821366752/13920337919 NULL 赵公口-大港 津A-E7269 15801384298/15022379709 NULL 赵公口-大港 津A-E7325 15822820944/15022379706 NULL 赵公口-大港 津A-E7955 15801384298 NULL 赵公口-大港 津A-E7968 15801384298 NULL 赵公口-大港 津A-E7969 15022379107 NULL 赵公口-天津 津A-E7808 13332050876/13902018483 NULL 赵公口-天津 津A-E1162 13752721629 NULL 赵公口-天津 津A-D5698 13820670748 NULL 赵公口-天津 津A-D5700 13920114626 NULL 赵公口-天津 津A-D5766 13622065782 NULL 赵公口-天津 津A-F2528 13332008738 NULL 赵公口-天津 津A-E9816 13323302355 NULL 赵公口-天津 津A-E9898 13332020976 NULL 赵公口-天津 津A-E8771 13621077521 NULL 赵公口-天津 津A-E8802 13302100756 NULL 赵公口-天津 津A-E8805 13622039001 NULL 赵公口-天津 津A-E9022 13752335858 NULL 赵公口-天津 京A-A6589 13752760521 NULL 赵公口-天津 津A-D5506 13521382402/13602084456 NULL 赵公口-天津 津A-D5583 15822110755 NULL 赵公口-天津 津A-C5585 13602010216 NULL 赵公口-天津 津A-C5589 13920387712 NULL 赵公口-天津 津A-C5599 15822684086 NULL 赵公口-天津 津A-C5959 13821088643 萧桂荣 赵公口-天津 津A-C7105 13502088634 NULL 赵公口-天津 津A-C8139 13312038826 NULL 赵公口-天津 津A-C8979 13516110991 NULL 赵公口-天津 津A-C3062 13332022043 NULL 赵公口-天津 津A-C3536 15822511009 NULL 赵公口-天津 津A-C3781 13102188659/13803096762 NULL 赵公口-天津 津A-C3875 86672252 秦 NULL 赵公口-天津 津A-C5553 13323337787 NULL 赵公口-天津 津A-C5582 13312110872 NULL 赵公口-天津 津A-B9188 13821032137 NULL 赵公口-天津 津A-C2562 13920370019 NULL 赵公口-天津 津A-B5662 13820388759 NULL 赵公口-天津 津A-B7891 13520493218/13752001133 王磊 赵公口-天津 津A-B9166 13102119105 NULL 赵公口-天津 津A-92966 022-27719193 NULL 赵公口-天津 津A-92968 022-27719193 NULL 赵公口-天津 津A-A3031 13072251170 NULL 赵公口-天津 津A-A3995 13332062608 NULL 赵公口-天津 津A-A6002 13072256974 NULL 赵公口-天津 津A-A6003 13332095032 NULL 赵公口-天津 津A-A6005 13672001065 NULL 赵公口-天津 津A-A6172 13436498890/15922039533 NULL 赵公口-天津 津A-A6186 133-912172046 NULL 赵公口-天津 津A-A6210 13820212429 NULL 赵公口-天津 津A-A7513 13002295579 NULL 赵公口-天津 津A-A8810 13802071857/13501284206胡 NULL 赵公口-天津 津A-A8838 13920713148/13691571272刘 NULL 赵公口-天津 津A-A8839 13752358370 NULL 赵公口-天津 津A-A9953 13821282495 NULL 赵公口-天津 津A-B0313 13332062608 NULL 赵公口-天津 津A-B0319 13032291362 NULL 赵公口-天津 津A-B0321 13752001133/13803058311 NULL 赵公口-天津 津A-B0333 15944848811 NULL 赵公口-天津 津A-B2172 13920203027 NULL 赵公口-天津 津A-B2589 13622094749 NULL 赵公口-天津 津A-B2598 13820722736 NULL 赵公口-天津 津A-B2616 13110082801 NULL 赵公口-天津 津A-B2619 13821966615 NULL 赵公口-天津 津A-B2622 13332028116 NULL 赵公口-天津 津A-B2625 13141434001/13920667991 NULL 赵公口-天津 京G-12591 13167520881 NULL 赵公口-天津 京G-12592 15910727838 NULL 赵公口-天津 京G-12593 13501372492/13146984955 NULL 赵公口-天津 京G-12594 13910996918 NULL 赵公口-天津 京G-12595 13701307873/13651193145 NULL 赵公口-天津 京G-12596 13501372492/13146984955 无 赵公口-天津 京G-39637 13910050291 NULL 赵公口-天津 京G-39638 13501378179 NULL 赵公口-天津 京G-39639 13466783047 NULL 赵公口-天津 京G-39640 13501181776 NULL 赵公口-天津 京G-39641 13601339298 NULL 赵公口-静海 津A-B0252 13370362500 周培军 赵公口-承德 京A-D0277 13932421782/13603149514 NULL 赵公口-承德 京A-A7874 13932439387/13121558534 NULL 赵公口-丰宁 冀H-P1179 13903247770/13932436161 NULL 赵公口-沧州A 冀J-49209 13731732151 NULL 赵公口-沧州A 冀J-50568 13831797319 NULL 赵公口-沧州A 冀J-61888 13180326781/13161196124 何平 赵公口-沧州A 冀J-61999 13653276766/13161196124 NULL 赵公口-沧州A 冀J-68599 13930741636 NULL 赵公口-沧州A 冀J-89889 0317-8997163/13833991520 NULL 赵公口-沧州A 冀J-89891 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89895 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89897 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-88912 13703278260 NULL 赵公口-沧州A 冀J-89810 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89833 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89850 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89862 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89865 13930741636/13833991520 NULL 赵公口-沧州A 冀J-89875 0317-8997163/0317-2156399 NULL 赵公口-沧州A 冀J-89876 13833723788/0317-2156399 NULL 赵公口-沧州A 冀J-89885 0317-8997163/13932714110 NULL 赵公口-沧州A 冀J-A3666 13831789872 NULL 赵公口-沧州A 京A-A7255 139307022254/13717763232 NULL 赵公口-沧州A 京A-B9572 13931737899 NULL 赵公口-沧州A 京G-50414 13801242653 NULL 赵公口-沧州A 京G-50441 13611357597 NULL 赵公口-沧州A 京G-50471 13011030960 NULL 赵公口-东光 冀J-89181 13932739022 NULL 赵公口-东光 冀J-89188 13833738944 NULL 赵公口-海兴 冀J-A2973 13603335819 NULL 赵公口-肃宁 冀J-91222 13230757630 NULL 赵公口-肃宁 冀J-72988 13315793636 张计服 赵公口-肃宁 冀J-73761 13315775030 王传松 赵公口-献县 冀J-68555 13931701666 NULL 赵公口-献县 冀J-77980 13831723108/13801166517 NULL 赵公口-献县 冀J-66938 13831723108 NULL 赵公口-献县 冀J-66977 13831723108 NULL 赵公口-献县 冀J-47986 13831723108 李文灿 赵公口-献县 冀J-47980 13831723108 罗宁 赵公口-献县 冀J-40975 13831713780\13582758546 郭自伟 赵公口-献县 冀J-A0938 13831723108 NULL 赵公口-献县 冀J-87136 13831723108 NULL 赵公口-孟村 冀J-91588 13180333779 NULL 赵公口-孟村 冀J-67110 13031890577/13833979991 NULL 赵公口-孟村 冀J-67188 13703270558/13831773576 NULL 赵公口-孟村 冀J-78227 13513176672/13683117899 NULL 赵公口-南皮 冀J-68588 13633170209 NULL 赵公口-青县 冀J-61095 15832705808/15076761898 孙立民 赵公口-青县 冀J-61075 13520836069/13722474246 候俊平 赵公口-青县 冀J-61082 13903177362 张寿庆 赵公口-青县 冀J-61083 13803171336 李坤山 赵公口-泊头 冀J-59099 13930731209 NULL 赵公口-泊头 冀J-59509 13503177790 NULL 赵公口-泊头 冀J-61299 13363319518 NULL 赵公口-泊头 冀J-77611 13803233231 NULL 赵公口-泊头 冀J-77631 13785759993 NULL 赵公口-泊头 冀J-77650 13603170515 NULL 赵公口-泊头 冀J-77671 13363660860 NULL 赵公口-泊头 冀J-77672 13603275960 NULL 赵公口-泊头 冀J-77693 13932730629 NULL 赵公口-泊头 冀J-77685 13603278371/13521122153 NULL 赵公口-泊头 冀J-77687 13503272640 NULL 赵公口-泊头 冀J-44158 13932706776 王树林 赵公口-泊头 冀J-44598 13903277565/13832753082 张三 赵公口-泊头 冀J-44668 13832767116 高利民 赵公口-泊头 京G-48027 13831774211/010-89875008 NULL 赵公口-泊头 京A-B9952 15933295688/13230757728 NULL 赵公口-任丘 京G-41490 13501180238 NULL 赵公口-任丘 京A-A5962 13501180238 NULL 赵公口-任丘 京A-A5963 13501180238 NULL 赵公口-任丘 冀J-44438 13785766327/13503278459 刘福祥 赵公口-任丘 冀J-42197 13700379529 赵斌 赵公口-任丘 冀J-45418 13363626366 张井江 赵公口-任丘 冀J-45431 13582782168 张月涛 赵公口-任丘 冀J-45454 11363620696/13383161975 张月涛 赵公口-任丘 冀J-47642 13832700824 刘新河 赵公口-任丘 冀J-83616 13703261440/13391931829 NULL 赵公口-任丘 冀J-83626 13833685610 NULL 赵公口-任丘 冀J-83628 13930780332 NULL 赵公口-任丘 冀J-83658 13582732601 NULL 赵公口-任丘 冀J-68169 13513273670/15030722588 NULL 赵公口-任丘 冀J-68165 15031755887 NULL 赵公口-任丘 冀J-68166 13315722061 NULL 赵公口-任丘 冀J-68101 13930710585 NULL 赵公口-任丘 冀J-68105 13731711190 NULL 赵公口-任丘 冀J-68106 13013221219 NULL 赵公口-任丘 冀J-68108 13832755147 NULL 赵公口-任丘 冀J-68116 13831776186 NULL 赵公口-任丘 冀J-68118 13103072038/13768898245 NULL 赵公口-任丘 冀J-68123 13722755565 NULL 赵公口-任丘 冀J-68128 13930710585 NULL 赵公口-任丘 冀J-68150 13803179957 NULL 赵公口-任丘 冀J-68156 15831770588 NULL 赵公口-任丘 冀J-68158 13731754781 NULL 赵公口-任丘 冀J-68160 13803250591 NULL 赵公口-任丘 冀J-90223 13653270229/13513276778 NULL 赵公口-任丘 冀J-91199 13932751881 NULL 赵公口-任丘 冀J-88085 13803250591 NULL 赵公口-任丘 冀J-88095 13191929616 NULL 赵公口-任丘 冀J-A3222 13932755881 NULL 赵公口-任丘 冀J-A3232 13501180239 NULL 赵公口-黄骅 冀J-95809 13932713167/13784711166 NULL 赵公口-黄骅 冀J-66559 15803373987/13932713167 NULL 赵公口-黄骅 冀J-48238 13803171687/15803373987 王玉庆 赵公口-黄骅 冀J-51111 15803373991/15931711150 NULL 赵公口-黄骅 冀J-57956 13603172958 NULL 赵公口-河间 冀J-58003 13932716226 孙建华 赵公口-河间 冀J-45518 13932666595/15030675388 张月强 赵公口-河间 冀J-46071 13931733676/15931728202 张卫星 赵公口-河间 冀J-45256 13930759563 吴建兵 赵公口-河间 冀J-45246 13931746257 周占山 赵公口-河间 冀J-45248 13703173098/13582750672 王满国 赵公口-河间 冀J-43437 13292777316/13930753599 李东亮 赵公口-河间 冀J-44087 13621351631/13932781877 韩新义 赵公口-河间 冀J-44738 13582759595 任文祥 赵公口-河间 冀J-59758 13730591333 NULL 赵公口-河间 冀J-67228 13903275300 NULL 赵公口-河间 冀J-67830 15832759788 NULL 赵公口-河间 冀J-72772 13323167188 NULL 赵公口-河间 冀J-72866 13930785579 NULL 赵公口-河间 冀J-86703 13582750120 NULL 赵公口-河间 冀J-81615 13503172214/13833788640 NULL 赵公口-河间 冀J-78003 13463471966 NULL 赵公口-河间 冀J-78072 13643284001 NULL 赵公口-河间 冀J-95665 13333171929 NULL 赵公口-河间 冀J-95680 13603175320 NULL 赵公口-河间 冀J-A3299 13472360888 NULL 赵公口-河间 冀J-A3225 13911622156/13932770292 NULL 赵公口-河间 冀J-A3227 13932737370 NULL 赵公口-河间 冀J-A3693 13700377786 NULL 赵公口-河间 冀J-A3581 13930750159/13463719998 NULL 赵公口-河间 冀J-A5000 15832727116 NULL 赵公口-河间 京A-A3503 13833980631 赵洪泰 赵公口-河间 京G-39642 13011030960 NULL 赵公口-河间 京G-39643 13363629526 NULL 赵公口-河间 京A-B8585 13653175073 NULL 赵公口-文安 京A-B4540 13833653222/13313169111 NULL 赵公口-衡水A配载线 京A-B6719 13521481273/13180297321 NULL 赵公口-衡水A配载线 京G-48198 13832693983/15931378619 NULL 赵公口-衡水 京A-D1418 15933291588 张洁 赵公口-衡水 冀T-12084 13932870055 张大龙 赵公口-衡水 冀T-12099 13831855055 何洪伯 赵公口-衡水 冀T-12814 13803180045 周双起 赵公口-衡水 冀T-12959 13903186050 晏振岭 赵公口-衡水 冀T-17091 13613183943 NULL 赵公口-衡水 冀T-17595 13932866959 巩国祥 赵公口-衡水 冀T-18210 15903189006 NULL 赵公口-衡水 冀T-18225 13831821169 NULL 赵公口-衡水 冀T-18256 13503185268 NULL 赵公口-衡水 冀T-19288 13463186660/13463186666 NULL 赵公口-衡水 冀T-21398 13663382406/13730535599 NULL 赵公口-衡水 冀T-28012 13785862839 NULL 赵公口-衡水 冀T-28066 13503180083 NULL 赵公口-衡水 冀T-28085 15831895366/13393181689 NULL 赵公口-枣强A 冀T-18077 13932866426/13611161527 吴春河 赵公口-枣强A 冀T-13232 13910021109/13831822587 刘丙路 赵公口-枣强A 冀T-09602 13081819808 安洪胜 赵公口-枣强A 京A-A7804 87987526/13601245711 NULL 赵公口-安平 京A-F3640 15139761116 霍志华 赵公口-安平 京A-F3641 15139761115 霍志华 赵公口-安平 冀T-13000 13931837109 苑木林 赵公口-安平 冀T-16571 13703188615 苑亚钟 赵公口-安平 冀T-12955 13543180859 苑亚彬 赵公口-安平 冀T-17338 13703184081 苑会强 赵公口-安平 冀T-17356 13931837102/13785880710 徐木兰 赵公口-安平 冀T-17576 13785863989 赵义明 赵公口-安平 冀T-20238 13784850189 NULL 赵公口-安平 冀T-22832 13503180859 张建峰 赵公口-阜城 冀T-20995 13911621829/13911621829 NULL 赵公口-阜城 冀T-16063 13081807083/13911621829 张丙升 赵公口-阜城 冀T-13273 13833893031/13911621829 张丙升 赵公口-阜城 冀T-11989 13021957695 多俭英 赵公口-阜城 冀T-11891 13261269191/13911621829 张丙升 赵公口-阜城 冀T-11391 13021957695 多俭英 赵公口-景县 冀T-11259 13021957695/13833845125 王巨安 赵公口-景县 冀T-12685 13932887689 曹学文 赵公口-景县 冀T-22118 13831887876/赵林13785881861 NULL 赵公口-景县 冀T-28116 13269010158/81603298 NULL 赵公口-饶阳 冀T-22059 15931366353 NULL 赵公口-饶阳 冀T-11795 13833852190 丛建兵 赵公口-饶阳 冀T-28165 15933836732 NULL 赵公口-深县A 冀T-20637 13730591167/15932732008 徐国忠 赵公口-深县A 冀T-23757 15033728822 NULL 赵公口-深县A 冀T-18121 15081217200 NULL 赵公口-大同 晋B-32902 13935299661 翟则林 赵公口-大同 晋B-30154 13834025885 李俊平 赵公口-大同 晋B-30496 13934121011 王强 赵公口-晋城 晋E-15325 13096554036 原龙举 赵公口-晋城 京A-A7283 13133465227 NULL 赵公口-沁水县 京A-B2148 13835630006/13703565556 NULL 赵公口-赤峰 蒙D-55555 15001087666 李光辉 赵公口-赤峰 蒙D-56666 15001087666 李光辉 赵公口-沈阳 辽A-72523 13252880623 NULL 赵公口-沈阳 辽A-72524 13252880627 NULL 赵公口-沈阳 京A-A3550 13911828335 NULL 赵公口-沈阳 京A-A3551 13911828335 NULL 赵公口-庄河 京A-B3864 13504178066 NULL 赵公口-庄河 京A-B3868 13804173868 NULL 赵公口-哈尔滨 京A-B5721 13911165828/13910578535 NULL 赵公口-哈尔滨 京A-B7706 13911165828/15004627706 NULL 赵公口-哈尔滨 黑A-87655 13910504908 NULL 赵公口-哈尔滨 黑A-88016 13910578535 NULL 赵公口-上海 沪B-57195 136010926061 NULL 赵公口-上海 京G-31988 13601092661/13601092771 邵长新 赵公口-上海 京G-60644 13601092661/13601092771 NULL 赵公口-南京 京A-A7080 13775821666 NULL 赵公口-南京 京A-A7081 13775821888 NULL 赵公口-新沂 苏C-19239 15952288288 NULL 赵公口-盐城 苏J-06789 13705107908 冯松 赵公口-江都 苏K-S5048 13852579922 NULL 赵公口-江都 苏K-S5049 13705253347 NULL 赵公口-江都 京G-34077 13683610680 NULL 赵公口-江都 京G-34078 13901255502 NULL 赵公口-宁波 京A-99601 67248618 娄绍山 赵公口-宁波 京A-99602 67248618/13396865328 汪双清 赵公口-宁波 浙B-24402 13805813999 NULL 赵公口-温州 京A-A6511 13391909989 NULL 赵公口-温州 京A-A5584 13391909989 NULL 赵公口-温州 京A-A5585 13391909989 NULL 赵公口-温州 京A-Y7778 13968586338 NULL 赵公口-温州 京A-D6518 13366663505 NULL 赵公口-乐清 京A-Y7850 15010591364 徐建龙 赵公口-乐清 京A-Y7851 15010591364 徐建龙 赵公口-乐清 京A-Y8205 15010591364 NULL 赵公口-绍兴 京G-60070 15957576655 NULL 赵公口-绍兴 浙D-10091 15957576677 NULL 赵公口-义乌 浙G-C9215 13735650288 NULL 赵公口-义乌 京A-C2635 13911667318 NULL 赵公口-义乌 京A-97832 13735650288 郑祥义 赵公口-黄山（屯溪） 京G-58770 13911593959 NULL 赵公口-黄山（屯溪） 京G-58769 13911593839 NULL 赵公口-宣州 京A-A5209 13505254716/13182051888 NULL 赵公口-宣州 京A-A5208 13605256000/13182051888 NULL 赵公口-济南 鲁A-33793 0531-85661516 NULL 赵公口-济南 鲁A-33803 13606375793 NULL 赵公口-济南 鲁A-46169 13964050148 NULL 赵公口-济南 鲁A-46776 13146933338 李孝东 赵公口-济南 鲁A-48936 13608938568/13691069233 NULL 赵公口-济南 鲁A-48937 13306403993 NULL 赵公口-济南 鲁A-48938 13969032387/13791019706 NULL 赵公口-济南 鲁A-48939 13705316894/13705316894 NULL 赵公口-济南 鲁A-81267 13869177084 NULL 赵公口-济南 鲁A-81286 13515417069 NULL 赵公口-济南 京G-24845 13601292210 NULL 赵公口-济南 京G-41794 010-67243220/010-67248729 NULL 赵公口-济南 京G-46267 15953153210/15278855169 NULL 赵公口-济南 京G-46275 15001049039/15098839757 NULL 赵公口-济南 京G-46276 13756055050/15843839888 NULL 赵公口-济南 京G-46277 15843812777 NULL 赵公口-平阴(济南) 鲁A-41591 0531-85991886/15106990568 王振 赵公口-青岛 鲁B-95377 13808991882 孔宪龙 赵公口-青岛 京G-64953 13801256652/13311391549 NULL 赵公口-青岛 鲁U-92999 13105322999/13911876698 彭纪锁 赵公口-青岛 鲁U-95999 13105325999/13105322988 任克兴 赵公口-黄岛 鲁U-96765 13505326162 无 赵公口-黄岛 鲁B-25682 13730982330 无 赵公口-沂源 鲁C-50066 13583349838 房师云 赵公口-沂源 鲁C-50077 13583349839 房师刚 赵公口-烟台 鲁F-07731 13805359818 孙德宾 赵公口-烟台 鲁F-07773 13906387185/13808909937 荆广文 赵公口-烟台 鲁F-11833 13605358687/13806387075 NULL 赵公口-烟台 鲁F-M0228 13853507962 NULL 赵公口-烟台 京A-F0634 18600036918 魏玉山 赵公口-烟台 京A-C0982 13562571079 NULL 赵公口-烟台 京A-97997 13910179342 丁林胜 赵公口-招远 京A-99809 13601317150 李长生 赵公口-招远 鲁F-G5011 13708903916/13705458795 NULL 赵公口-青州 鲁G-75297 15065695297 李俊 赵公口-青州 鲁G-75298 13606475298 邵明千 赵公口-青州 京G-46789 15964046789/13606475298 NULL 赵公口-青州 京G-46813 15963415369 NULL 赵公口-寿光 鲁G-55555 13905360966 杨永堂 赵公口-寿光 鲁G-B3686 13573653323 NULL 赵公口-寿光 京A-A3333 13869630568 苏学敏 赵公口-寿光 京A-A3616 13506465071 杨晓春 赵公口-泰安配载线 鲁J-22666 13953889911 NULL 赵公口-泰安配载线 鲁J-22999 13953889922 NULL 赵公口-威海 鲁K-08675 13706312193 NULL 赵公口-威海 鲁K-08867 13806311752 NULL 赵公口-威海 鲁K-09931 13563180110 NULL 赵公口-威海 鲁K-09982 13563180110 NULL 赵公口-荣城 京A-C3929 0535-7223977/13465123088 NULL 赵公口-荣城 京A-B4627 13465123088 NULL 赵公口-沂水 京A-F3562 13884886808 绍明铸 赵公口-沂水 京G-54938 15863988018 NULL 赵公口-沂水 鲁Q-09660 13505497119 王焕章 赵公口-沂水 鲁Q-09661 13869970686 陈增伟 赵公口-沂水 鲁Q-A7815 13869970686 NULL 赵公口-乐陵 鲁N-15236 13969271278 NULL 赵公口-乐陵 京G-50794 13953460009 NULL 赵公口-乐陵 鲁N-11381 13969271278 孙青山 赵公口-乐陵 鲁N-11888 13969271278 刘红星 赵公口-乐陵 鲁N-11889 13969271278 NULL 赵公口-乐陵 鲁N-13866 13969271278 NULL 赵公口-乐陵 鲁N-13899 13969271278 NULL 赵公口-临清 京A-B0462 13363106768/13910075093 NULL 赵公口-临清 京A-92067 13363106768/13932069119 靖严忠 赵公口-滑县 豫E-82203 13937258664 常好振 赵公口-滑县 豫E-82261 13937258674 常好振 赵公口-滑县 豫E-82432 13937249778 常好振 赵公口-禹州 豫K-99996 13503741270 杨松 赵公口-禹州 豫K-99998 13608485957 丁玉风 赵公口-永城 豫N-34336 13803704322 陈杰 赵公口-永城 豫N-35082 13803971505 NULL 赵公口-永城 豫N-35109 13603701756 NULL 赵公口-永城 豫N-35976 13803971802 NULL 赵公口-商水A 豫P-A9673 13903948780 NULL 赵公口-商水A 豫P-E1118 13703945159 NULL 赵公口-商水A 豫P-E8099 13608617764 NULL 赵公口-商水A 豫P-E9669 13608617816 NULL 赵公口-商水A 豫P-B2762 13903943038 NULL 赵公口-商水A 豫P-B3122 13939430338 NULL 赵公口-商水A 豫P-B8070 13939430378 孙建伟 赵公口-商水A 豫P-B8073 13803945628 NULL 赵公口-商水A 豫P-C1221 13507688021 NULL 赵公口-沈丘 豫P-C0827 13603871602 NULL 赵公口-沈丘 豫P-C0817 13507683398 NULL 赵公口-沈丘 豫P-A5321 13903877275 NULL 赵公口-沈丘 京A-C1396 13603871601 NULL 赵公口-沈丘 京A-C1399 13707628028 NULL 赵公口-鹿邑 豫P-56888 13939400336 谷盒海 赵公口-鹿邑 豫P-B3298 13839438950 唐强 赵公口-鹿邑 豫P-E9588 15938626998 NULL 赵公口-项城 豫P-11696 13903874908 李新宇 赵公口-项城 豫P-05159 13703785878/67932268 师向阳 赵公口-项城 豫P-05416 13703785878/67932268 范云良 赵公口-项城 豫P-05418 13949957877 于社会 赵公口-项城 豫P-11669 13839411678 何海山 赵公口-武汉 京A-A3968 13907291015 王洪德 赵公口-武汉 京A-A3969 010-86089992 刘德广 赵公口-唐山 冀B-71338 13703255332 NULL 赵公口-唐山 冀B-72772 13731620658 NULL 赵公口-唐山 冀B-85888 13311491300 NULL 赵公口-唐山 冀B-86166 13911590730 NULL 赵公口-唐山 冀B-86888 13311491300 NULL 赵公口-唐山 冀B-91986 13933362202 NULL 赵公口-唐山 冀B-88828 13311491300 NULL 赵公口-唐山 冀B-88881 13011836070 NULL 赵公口-唐山 冀B-88388 13311491300 NULL 赵公口-唐山 冀B-88588 13311491300 NULL 赵公口-唐山 冀B-88688 13311491300 NULL 赵公口-唐山 冀B-88818 13311491300 NULL 赵公口-唐山 冀B-98888 13311491300 NULL 赵公口-旧县 冀J-78275 13932776260 NULL 赵公口-旧县 冀J-78388 13932709041 NULL 赵公口-南召 冀J-44868 13833780295 安景杰 赵公口-南召 冀J-A3228 13463471988/13833780295 NULL 赵公口-南召 冀J-A3229 13700370103 NULL 赵公口-汉沽 津A-D7295 13671219621/13802083407 NULL 赵公口-汉沽 津A-B0902 13299972091 NULL 赵公口-汉沽 津A-D1630 13820821312 NULL 赵公口-汉沽 津A-D2631 13802096194 NULL 赵公口-汉沽 津A-C9331 13802010823/13821652833 NULL 赵公口-武清 津A-C6153 13240996484 NULL 赵公口-武清 津A-B8078 13611395829 NULL 赵公口-武清 津A-C3082 13126700611/13352027869 NULL 赵公口-武清 津A-D9882 13611395829 NULL 赵公口-武清 津A-E2098 13132020155 NULL 赵公口-武清 津A-E9655 13002220161 NULL 赵公口-武清 津A-E9658 13752760521 NULL 赵公口-武清 津A-E9665 13132174627 NULL 赵公口-武清 津A-E9685 13752493834 NULL 赵公口-京唐港 京A-A7560 13031167699 NULL 赵公口-尖坨子 冀B-96555 13785525850 NULL 赵公口-半壁山 冀H-K2928 13503377825\1383253351 NULL 赵公口-付佐 冀J-45543 13785492543 NULL 赵公口-付佐 冀J-47913 13785492543 王洪专 赵公口-万里 冀J-47930 13785775977\15030629339 NULL 赵公口-寨子 冀J-60292 13911299333/13703179333 NULL 赵公口-寨子 冀J-60298 13911895666/13803175833 NULL 赵公口-吴桥 冀J-70010 13730575308/13932778535 NULL 赵公口-吴桥 冀J-53593 13483465593 NULL 赵公口-吴桥 冀J-53561 13700373517 NULL 赵公口-吴桥 冀J-53576 13582704898 NULL 赵公口-吴桥 冀J-53587 13603179553 NULL 赵公口-吴桥 冀J-A3659 13932776944/15832783877 NULL 赵公口-淮镇 冀J-47979 13831723108 李文灿 赵公口-淮镇 冀J-47957 13831723108 许长虹 赵公口-淮镇 冀J-47963 13831723108 李文灿 赵公口-临河 冀J-A3210 13483815880/15932706866 NULL 赵公口-本斋 冀J-46808 13703338440 石张 赵公口-黎民居A 冀J-45264 13511029534\13931730759 NULL 赵公口-黎民居A 冀J-78138 13931738762/13513008081 NULL 赵公口-米格庄 冀J-58666 13230750032 柴秋兰 赵公口-米格庄 冀J-44740 13785707806 张艳武 赵公口-束城 冀J-A3226 13031894861/13082192340 NULL 赵公口-卧佛堂 冀J-95703 13931700115 NULL 赵公口-大营 冀T-13155 13503188877 刘伟 赵公口-大营 京A-B6920 13701357355 NULL 赵公口-审坡 冀T-15125 13393188155 NULL 赵公口-审坡 冀T-12953 13603185302 徐希民 赵公口-薛庄 冀T-13288 13803186390 闫文波 赵公口-薛庄 冀T-22916 13603185320 NULL 赵公口-赵桥 冀T-12090 13315825968 闫文波 赵公口-龙店 冀T-12272 13910434299 黄宪章 赵公口-龙店 冀T-12294 13910434293 黄宪文 赵公口-桑村 冀T-15176 13091185834 NULL 赵公口-合立 冀T-18975 13833812212 NULL 赵公口-合立 冀T-10800 15932438509 刘伟莹 赵公口-街关 冀T-12162 13932869508 张大龙 赵公口-街关 冀T-17956 13488728157/13754469262 郭艳威 赵公口-街关 冀T-17618 13785849499 李永亮 赵公口-街关 冀T-27987 13231882268/13171710282 NULL 赵公口-街关 冀T-12366 15933852555 王金牛 赵公口-街关 冀T-12958 13932899068 李志远 赵公口-街关 冀T-12827 13701208555/13932899068 周月文 赵公口-街关 京A-D0590 13231882288 NULL 赵公口-南王庄 冀T-28130 13833856539 NULL 赵公口-察罗 冀T-20289 13785850994 NULL 赵公口-察罗 冀T-10794 13503181284 李建听 赵公口-郑口A 冀T-12141 13803184479/13931832381 刘玉彬 赵公口-郑口A 冀T-09421 13603184947 王文成 赵公口-郑口A 冀T-12599 15930389507/13931832381 孙国良 赵公口-郑口A 冀T-12423 15930389502/13931832381 李保华 赵公口-郑口A 京A-A8744 13931832381/13013278093 孙国辉 赵公口-军屯 冀T-12811 13931832381/13931832381 王立国 赵公口-军屯 冀T-13728 15930389503/13931832381 常达刚 赵公口-饶阳店 冀T-10086 13931832381/13931832381 王志军 赵公口-三郎 冀T-12386 15930389508/13931832381 师长水 赵公口-袁庄 冀T-11317 13931832381/13931832381 孙茂峰 赵公口-赵官寺 冀T-11350 13785881861 赵林 赵公口-赵官寺 冀T-31255 13785881861 赵林 赵公口-王瞳 冀T-28378 13315700182 NULL 赵公口-崔庙 冀T-10171 13911621829 于宝山 赵公口-崔庙 冀T-09420 13021957695 多俭英 赵公口-明化 冀T-16171 13703188016 NULL 赵公口-明化 冀T-16183 13932860330/13231885939 NULL 赵公口-明化 冀T-17103 13932811461 郑沿喜 赵公口-明化 冀T-21853 13391876724/13930987904 NULL 赵公口-漳淮 冀T-12506 13910810746 李瑞春 赵公口-土路口 冀T-12750 13102755059/15931201351 杜丽伟 赵公口-于科 冀T-13839 13501083871 支子川 赵公口-于科 冀T-15038 13731352779/13731352779 郭海北 赵公口-西留 冀T-22988 13785888208 NULL 赵公口-西留 冀T-17258 13931832318 甲金成 赵公口-西留 冀T-18218 13253266322 NULL 赵公口-阜宁 苏J-07446 13911698285/010-81822318 NULL 赵公口-阜宁 苏J-07291 13801419577/010-81822318 NULL 赵公口-龙港 浙C-D2217 13858760958/13858723781 NULL 赵公口-龙港 浙C-D2228 13906663709 NULL 赵公口-龙港 浙C-D2269 13858778508/13858723308 NULL 赵公口-章丘(济南) 京A-B4630 13863695917/13573135129 NULL 赵公口-章丘(济南) 京A-B4605 13863695917/13573135605 NULL 赵公口-章丘(济南) 鲁A-65389 13864168088 NULL 赵公口-章丘(济南) 鲁A-65379 15863795811/13905418330 NULL 赵公口-淄博 鲁C-05558 13953358215 韩继强 赵公口-淄博 鲁CB3146 13508952509 郭谦 赵公口-淄博 鲁C-B3149 13953358215 郭谦 赵公口-淄博 鲁C-05582 13508952509 段连祥 赵公口-淄博 鲁C-25419 13606438624 周江 赵公口-淄博 京A-A5470 13754778548/13370121139 NULL 赵公口-黄县 鲁F-K2689 13853507963 NULL 赵公口-黄县 京A-C5295 13705350452/13605451469 NULL 赵公口-潍坊 京A-D1414 13805366300 NULL 赵公口-潍坊 鲁G-05090 15853679666 李德田 赵公口-潍坊 鲁G-05092 15853679555 李平春 赵公口-潍坊 鲁G-05356 13963636327 王涛 赵公口-潍坊 鲁G-05357 13963636327 王国涛 赵公口-潍坊 鲁G-B2680 0536-8233546 NULL 赵公口-潍坊 京A-A6532 15948825888 张久玉 赵公口-郭桥 冀J-40546 13731722888 郭永德 赵公口-郭桥 冀J-61139 13731722999 NULL]]></content>
      <categories>
        <category>addrbook</category>
      </categories>
      <tags>
        <tag>addrbook</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小技巧 - linux篇]]></title>
    <url>%2F2016%2F11%2F17%2Flinux-tips%2F</url>
    <content type="text"><![CDATA[linux定时任务配置文件位置 /var/spool/cron/ 存放的每个用户的任务以创建者名字命名，就是执行crontab -e保存的目录 /etc/crontab 系统任务 /etc/cron.d/ 存放脚本 http://blog.csdn.net/hi_kevin/article/details/8983746 linux定时任务精确到秒 我们知道linux的crontab精确到分钟，如果想精确到秒怎么办，可以变通一下，通过sleep解决 如：每隔10秒执行一次/root/sh/remind_yumidai.sh脚本 * * * * * /root/sh/remind_yumidai.sh* * * * * sleep 10;/root/sh/remind_yumidai.sh* * * * * sleep 20;/root/sh/remind_yumidai.sh* * * * * sleep 30;/root/sh/remind_yumidai.sh* * * * * sleep 40;/root/sh/remind_yumidai.sh* * * * * sleep 50;/root/sh/remind_yumidai.sh 但是，每隔一秒就略坑了，得写60次 监测进程定时重启 阿里云512小鸡ngrokd服务老挂，写了个程序定时监测，如果挂了，重启之 #!/bin/bashPROCESS_NUM=`ps -ef | grep "ngrokd" | grep -v "grep" | wc -l`if [ "$PROCESS_NUM" == "1" ]then echo 'running'else cd /usr/local/src/ngrok/bin/ ./start.shfi 查看当前正在运行的nginx使用哪个配置文件 查看PID netstat -anop | grep 0.0.0.0:80 通过相应的进程ID(比如：31305）查询当前运行的nginx路径 ll /proc/31305/exe linux 获取到nginx的执行路径后，使用-t参数即可获取该进程对应的配置文件路径，如： /opt/nginx-1.10.0/sbin/nginx -t linux wget 整站下载 wget -r -p -np -k &lt;url&gt;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小技巧 - python篇]]></title>
    <url>%2F2016%2F11%2F16%2Fpython-tips%2F</url>
    <content type="text"><![CDATA[list获取最后一个元素 li = [1,2,3]print li[-1] 3 数字数组转字符串 我们知道join()可以将字符串数组转字符串，数字数组怎么转呢？ a = [1,2,3]b="-".join(str(i) for i in a)print b ‘1-2-3’ a = [1,2,3]b = "-".join(imap(str,a))print b ‘1-2-3’]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu]]></title>
    <url>%2F2016%2F11%2F14%2Fubuntu%2F</url>
    <content type="text"><![CDATA[更换源 http://www.linuxidc.com/Linux/2013-05/83902.htm ubuntu 文本模式黑屏 http://forum.ubuntu.org.cn/viewtopic.php?t=474823 ubuntu清dns缓存 sudo /etc/init.d/dns-clean start 安装apache2 安装 sudo apt-get install apache2 修改端口号 cd /etc/apache2vim ports.confcd sites-enabled/vim 000-default.conf 重启 service apache2 restart]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql-powerdesigner]]></title>
    <url>%2F2016%2F11%2F11%2Fmysql-powerdesigner%2F</url>
    <content type="text"><![CDATA[powerdesigner mysql逆向工程 安装mysql-connector-odbc-5.1.5-win32 win-e 搜索odbc mysql 点击添加 mysql 选择驱动 mysql 填写配置信息 mysql 点击确定后添加数据源成功 mysql dbms选择mysql mysql]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ssh]]></title>
    <url>%2F2016%2F11%2F09%2Fssh%2F</url>
    <content type="text"><![CDATA[ssh (Secure Shell) 相关的内容 SSH免密码登录 vi /etc/ssh/sshd_config RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys SELinux会引起免密码登录失败,看了半天没搞明白到底为什么，我先关了，留坑 setenforce 0 参考：https://segmentfault.com/q/1010000000445726 tail /var/log/secure -n 20 Address 172.19.137.29 maps to localhost, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT! GSSAPIAuthentication no SSH无密码登入非root用户如何设置 客户机生成密钥对 ssh-keygen -t rsa 把公钥内容追加到服务器用户主目录/home/bl/.ssh/authorized_keys文件内 服务器权限设置 主目录权限700 .ssh目录权限700 authorized_keys权限600 cd /homechmod 700 blchmod 700 bl/.sshchmod 600 bl/.ssh/auhorized_keys 参考 ======= SSH无密码登入非root用户如何设置 6db12a9147e2e19ad77c1dd9325ac3b6c6cfcd90 1#: 大家好，由于近期要管理大批机器，我在设置SSH登入的采用公钥无密码登入。但是只有ROOT用户才有效果 客户机A 把id_rsa.pub内容拷贝到服务器主机B /root/.ssh/authorized_keys 这时客户机A ssh root@B 不用输入密码直接登入 然后我在设置无密码登入test账号 客户机A 把id_rsa.pub内容拷贝到服务器主机B /home/test/.ssh/authorized_keys 这时客户机A ssh test@B 这时提示还是要输入密码 大家知道我哪里还需要设置吗？ 5#: 多半是权限问题。 .ssh目录的权限和authorized_keys的权限都要看， 权限大了是不行的 .ssh的权限700， authorized_keys的权限600， 就够了， 属主要是登陆用户自己（root是不行的），组无所谓 不管是什么原因， 查/var/log/secure就明白了 6#: 查看/var/log/secure 报Authentication refused: bad ownership or modes for directory /home/test 确实是用户主目录的权限问题造成的 /home/test 之前是777 后来改成755后就正常了 只是感到困惑，权限改小确可以。。。。 总之问题解决了 谢了各位 原文：http://bbs.chinaunix.net/forum.php?mod=viewthread&amp;tid=3554821]]></content>
      <categories>
        <category>ssh</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好大的异常-windows篇]]></title>
    <url>%2F2016%2F11%2F09%2Fexception-windows%2F</url>
    <content type="text"><![CDATA[outlook一直显示正在加载中 打开office其他软件如word，excel禁用硬件加速]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>异常</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于logo]]></title>
    <url>%2F2016%2F11%2F09%2Fabout-logo%2F</url>
    <content type="text"><![CDATA[就是他 - logo 我是仿照这个光照派纹章做的，感兴趣的可以看下 这个网站也可以自动生成]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>关于</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jquery-tips]]></title>
    <url>%2F2016%2F11%2F09%2Fjquery-tips%2F</url>
    <content type="text"><![CDATA[jquery ajax post请求 ，浏览器不会进行缓存； get请求,若dateType属性 为“script”/“jsonp”时，浏览器也不会进行缓存（此时其cache属性默认为false）； get请求，dateType（default: Intelligent Guess (xml, json, script, or html)），若为text/xml/html/json时，可以设置 cache属性为 false来避免缓存 jquery 插件开发 http://blog.jobbole.com/30550/?replytocom=90781 (function($) &#123;var privateFunction = function() &#123;// 代码在这里运行&#125; var methods = &#123;init: function(options) &#123;return this.each(function() &#123;var $this = $(this);var settings = $this.data('pluginName'); if(typeof(settings) == 'undefined') &#123; var defaults = &#123;propertyName: 'value',onSomeEvent: function() &#123;&#125;&#125; settings = $.extend(&#123;&#125;, defaults, options); $this.data('pluginName', settings);&#125; else &#123;settings = $.extend(&#123;&#125;, settings, options);&#125; // 代码在这里运行 &#125;);&#125;,destroy: function(options) &#123;return $(this).each(function() &#123;var $this = $(this); $this.removeData('pluginName');&#125;);&#125;,val: function(options) &#123;var someValue = this.eq(0).html(); return someValue;&#125;&#125;; $.fn.pluginName = function() &#123;var method = arguments[0]; if(methods[method]) &#123;method = methods[method];arguments= Array.prototype.slice.call(arguments, 1);&#125; else if( typeof(method) == 'object' || !method ) &#123;method = methods.init;&#125; else &#123;$.error( 'Method '+ method + ' does not exist on jQuery.pluginName' );return this;&#125; return method.apply(this, arguments); &#125; &#125;)(jQuery);]]></content>
      <categories>
        <category>jquery</category>
      </categories>
      <tags>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ghost]]></title>
    <url>%2F2016%2F11%2F09%2Fblog-ghost%2F</url>
    <content type="text"><![CDATA[先fuck一下gfw 修改字体 fonts.googleapi.com 统统改成 fonts.useso.com /content/themes/capser/default.hbs /core/client/app/html/apps.html /core/client/app/html/themes.html /core/client/app/index.html /core/server/views/user-error.hbs /core/server/views/private.hbs /core/server/views/default.hbs 2016-12-07 16:21:54补充 useso.com也慢了 用下边几个： fonts.css.network libs.bangbang93.com fonts.proxy.ustclug.org cdn.moefont.com/fonts 安装 yum install gcc-c++ nodejs npm -g install ghost-cli mkdir &lt;blog&gt; cd &lt;blog&gt; ghost install local]]></content>
      <categories>
        <category>ghost</category>
      </categories>
      <tags>
        <tag>ghost</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ghost邮件服务器]]></title>
    <url>%2F2016%2F11%2F09%2Fghost-mail%2F</url>
    <content type="text"><![CDATA[注册mailgun mailgun 添加自己的域名并验证，验证成功后会得到一个密码 mailgun mailgun 修改ghost配置 mailgun]]></content>
      <categories>
        <category>ghost</category>
      </categories>
      <tags>
        <tag>ghost</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ghost集成disqus评论]]></title>
    <url>%2F2016%2F11%2F09%2Fghost-disqus%2F</url>
    <content type="text"><![CDATA[注册disqus获取插件代码 修改content/themes/casper下post.hbs,在最后一个&lt;footer&gt;里追加 &lt;!--disqus plugin begin--&gt;&lt;div id="disqus_thread"&gt;&lt;/div&gt;&lt;script&gt;/*** RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.* LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*//*var disqus_config = function () &#123;this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variablethis.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable&#125;;*/(function() &#123; // DON'T EDIT BELOW THIS LINEvar d = document, s = d.createElement('script');s.src = '//leim.disqus.com/embed.js';s.setAttribute('data-timestamp', +new Date());(d.head || d.body).appendChild(s);&#125;)();&lt;/script&gt;&lt;noscript&gt;Please enable JavaScript to view the &lt;a href="https://disqus.com/?ref_noscript" rel="nofollow"&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;&lt;script id="dsq-count-scr" src="//leim.disqus.com/count.js" async&gt;&lt;/script&gt;&lt;!--disqus plugin ended--&gt; ghost-disqus ghost-disqus 参考 http://blog.christophvoigt.com/enable-comments-on-ghost-with-disqus/]]></content>
      <categories>
        <category>ghost</category>
      </categories>
      <tags>
        <tag>disqus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ghost集成七牛]]></title>
    <url>%2F2016%2F11%2F09%2Fghost-qiniu%2F</url>
    <content type="text"><![CDATA[安装七牛插件 npm install qiniu --save 拷贝qiniu.js到/core/server/storage/目录下 修改/core/server/storage/index.js ghost-qiniu ghost配置 ghost-qiniu storage: &#123; provider: 'qiniu', bucketname: 'bianle', ACCESS_KEY: 'xxx', SECRET_KEY: 'xxx', root: '/image/', prefix: 'http://bianle.qiniudn.com'&#125; github https://github.com/Minwe/qn-store]]></content>
      <categories>
        <category>ghost</category>
      </categories>
      <tags>
        <tag>ghost</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php]]></title>
    <url>%2F2016%2F11%2F08%2Fphp-1%2F</url>
    <content type="text"><![CDATA[php -m]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jedis学习]]></title>
    <url>%2F2016%2F11%2F08%2Fjedis%2F</url>
    <content type="text"><![CDATA[http://www.cnblogs.com/chenpi/p/5686039.html#_label2]]></content>
      <categories>
        <category>jedis</category>
      </categories>
      <tags>
        <tag>jedis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js]]></title>
    <url>%2F2016%2F11%2F08%2Fjs%2F</url>
    <content type="text"><![CDATA[YUI Compressor 2.4.8 failed on jQuery 2.2 https://github.com/yui/yuicompressor/issues/234 js函数前面的加号叹号波浪号 如： +function()&#123;&#125;(); 这里的加号，也可以替换成!,~等其他一元操作符，其效果相当于： (function() &#123; console.log("Foo!"); &#125;)(); // or (function() &#123; console.log("Foo!"); &#125;()); 如果没有这个加号的话，解析器会认为function是一个函数声明的开始，而后面（）将会导致语法错误。在function前面加上+号时，就变成了一个函数表达式，而函数表达式后面又添加了一个()就变成了一个立即执行的函数了 参考：http://stackoverflow.com/questions/13341698/javascript-plus-sign-in-front-of-function-name]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[json和jsonp]]></title>
    <url>%2F2016%2F11%2F08%2Fjson-jsonp%2F</url>
    <content type="text"><![CDATA[json和jsonp http://kb.cnblogs.com/page/139725/]]></content>
      <categories>
        <category>js</category>
      </categories>
      <tags>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macos小技巧]]></title>
    <url>%2F2016%2F11%2F08%2Fmacos-tips%2F</url>
    <content type="text"><![CDATA[升级系统(MacOS Mojave 10.14)后svn命令行不可用 xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun 执行命令 xcode-select --install Spotlight Command⌘ Command⌘ + Space快速搜索应用，文件，基本告别dock finder中打开终端 添加右键快捷键 Finder -&gt; 服务 -&gt; 服务偏好设置 -&gt; 快捷键 -&gt; 勾选新建位于文件夹位置的终端标签、新建位于文件夹位置的终端窗口 选中文件夹，右键-&gt;服务-&gt;新建… 注意：这里是用系统默认的终端打开如果想用iterm2打开，看下这个go2shell,这里有介绍 打开finder直接把文件夹拖拽到终端窗口然后回车 终端中打开finder cd到目标目录open . vpn Mac OSX 无共享的密钥情况下连接基于L2TP协议的VPN /etc/ppp/ 下 创建 options 文件 sudo vim /etc/ppp/options 输入以下内容 plugin L2TP.ppp l2tpnoipsec 把高级设置里面”通过VPN连接发送所有流量“勾上 连接 更改顶部托盘图标顺序 按住Command⌘,拖动图标即可 macos-tips-tray 升级10.12后office2016崩溃了 重装office 2016 for mac 更新 参考这 /home 目录权限修改 WARN: We can’t create the directory ‘/home/ebay/work/log/terracotta/client-logs’ that you specified for your logs. http://ju.outofmemory.cn/entry/283070 macos 端口占用 lsof -i tcp:&lt;port&gt;kill -9 &lt;pid&gt; 解决 Mac 80 端口被占用 https://blog.csdn.net/toocruel/article/details/79987388 关闭占用80端口的apache sudo apachectl stop 修改/etc/pf.conf，设置端口转发 sudo vi /etc/pf.conf再rdr-anchor &quot;com.apple/*&quot;后添加 rdr on lo0 inet proto tcp from any to 127.0.0.1 port 80 -&gt; 127.0.0.1 port 8080 使修改生效，依次执行以下命令 sudo pfctl -dsudo pfctl -f /etc/pf.confsudo pfctl -e 键盘控制弹窗 macos-keyboard Finder标题显示文件全路径 defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES finder 在finder中拷贝文件目录 automator https://www.cnet.com/how-to/how-to-copy-a-file-path-in-os-x/ 软件 Scroll Reverser 鼠标翻转软件 查词 系统偏好设置 -&gt; 触控板 -&gt; 光标与点按 -&gt; 查询与数字检测器 -&gt; 用三个手指轻点 macos-tips 清除Mac OS X文件“打开方式”中的重复项 /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -r -domain local -domain user;killall Finder;echo "Open With has been rebuilt, Finder will relaunch" https://www.macx.cn/thread-2087384-1-1.html?mod=viewthread&amp;tid=2087384&amp;extra=page%253D1&amp;page=1]]></content>
      <categories>
        <category>macos</category>
      </categories>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[macos 有用的软件]]></title>
    <url>%2F2016%2F11%2F07%2Fmacos%2F</url>
    <content type="text"><![CDATA[alfred 国人必备的30个Alfred Workflow iterm2 比较全面的介绍 iterm2 ssh 自动登录 imgls imgcat Shell Integration curl -L https://iterm2.com/shell_integration/zsh \-o ~/.iterm2_shell_integration.zsh 密码管理器 广播输入iTerm2 Broadcast Input oh-my-zsh Oh My Zsh 插件篇 - 实用工具 brew moacos brew Cornerstone svn客户端 链接: https://pan.baidu.com/s/1kVdQbTd 密码: bian Dropzone 使用 Dropzone 快速上传图片到七牛云存储 bartender 分享隐藏 macOS 10.12菜单栏的 Spotlight 和通知中心图标方法 重新启动电脑，在黑屏后，显示苹果标志前，按住 ⌘ 键和 R 键，让Mac进入救援模式； 在救援模式的工具菜单中打开终端机（路径：顶部左上角菜单条-实用工具-终端），在终端中运行命令 csrutil disable ，关闭SIP； 退出终端重启电脑； 打开Bartender，现在可以设置Spotlight的隐藏设置了； 设置完成后，再次重启进入救援模式，方法同步骤1； 打开终端机，运行命令 csrutil enable 再次启用SIP； 重启到正常模式后，Bartender的对Spotlight的隐藏设置依然有效。 Bartender 2安装 打开安装包，把 Bartender 2.app 拖到应用程序文件夹中并打开运行，安装 helper ，然后完全关闭（从菜单栏点击退出） 将安装包中“k‘ed”文件夹里的 Bartender 2.app 拖到应用程序文件夹中，覆盖替换原程序文件 运行程序，并使用SN.txt中的激活码激活 链接:https://pan.baidu.com/s/1ggzbGFh 密码:se1c paste 链接:https://pan.baidu.com/s/148iZ3yLg7tAfLJk2FMBhng 密码:u665]]></content>
      <categories>
        <category>macos</category>
      </categories>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jekyll安装]]></title>
    <url>%2F2016%2F11%2F06%2Fblog-jekyll%2F</url>
    <content type="text"><![CDATA[windows安装jekyll 安装ruby http://rubyinstaller.org/downloads/ 安装RubyDevKit cd C:\RubyDevKitruby dk.rb initruby dk.rb install gem install jekyll 参考： http://jekyll-windows.juthilo.com/1-ruby-and-devkit/ jekyll中转义jekyll代码 jekyll中使用的Liquid模板引擎，用raw标签可以转义 &#123;% raw %&#125; &lt;此处为代码块&gt; &#123;% endraw %&#125; 参见： http://stackoverflow.com/questions/22044488/jekyll-code-in-jekyll The {%...%} syntax used by Jekyll is part of the Liquid templating engine. To escape these tags, and so show them literally, you should use the raw tag. You will probably want to combine this with the markdown syntax for code blocks. With Redcarpet you can use the triple backtick syntax. It doesn’t matter if you put the backticks inside the raw tags or the other way round: &#123;%raw%&#125;&#123;% for post in site.posts %&#125;&#123;% if post.categories contains '&lt;categoryname&gt;' %&#125; &lt;h2&gt; &lt;a href="&#123;&#123; post.url &#125;&#125;"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/h2&gt;&#123;% endif %&#125;&#123;% endfor %&#125;&#123;%endraw%&#125; jekyll themes http://jekyllthemes.org/ jekyll 子模块 git submodule add -b master -- "https://github.com/bianle/HelloWorld.git" "_post" https://github.com/jekyll/jekyll/issues/679]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些年我用过的博客软件]]></title>
    <url>%2F2016%2F11%2F05%2Fblog%2F</url>
    <content type="text"><![CDATA[写博客初衷 文字，是人类最伟大的发明！ 现在记点东西只是想告诉未来的自己过去曾经做过什么！ 脑子一天比一天不好使 回忆开始 大一的时候，才知道有个东西叫博客，那时候注册了一个新浪博客，在网吧一呆就呆一天，不是打游戏，也不看电影，而是为了给博客添加个播放器，换一换布局，然后就打电话给同学说，我有了自己的网站，现在想想图样图森破 (too young too simple) ！记得后来注册了一个微博客，就是现在的微博的前身，后来登录名字都被新浪改了，渣浪就是这么霸道 (bú yào liǎn) ！ 后来有了电脑，却沉浸在游戏，电影，上网，早不知博客为何物了！ 刚上班的时候，在友邦，跟着王哥学了不少东西，可那时候也不知道记些什么，直到02年，淘宝买了国外的空间，开始捣鼓php，wordpress，注册了人生中第一个域名，搭了第一个属于我的网站，当le5u.net弹出wordpress的第一个文章时，激动的心情不是能用言语形容的，我记的我写的第一篇文章叫开篇,内容很长，为开篇一定要长...，哈哈!然后就东拼西凑[1]，凑了一堆东西，好歹也算个网站了。 后来，在软通上班期间知道了一个很古老的编辑器叫emacs，并且花了很长时间就是为了弄明白，这么『难』用的编辑器为什么竟然还会有人用，却渐渐被她洗脑！于是我尝试用emacs的org2blog发博客，开始很新奇，后来还是放弃了（不是emacs）! 再后来，渐渐的知道有个网站叫github，知道有个语法叫markdown，知道了jekyll，让我第一次觉的写博客是一种享受！ 我喜欢尝试不同的东西，尝试过hexo和ghost，每一款都让我欲罢不能，我不是个花心的人，但是个花心的猿！ 我不喜欢对她们评头论足，没有最优秀的，只有最适合的，我现在用的是hexo（在emacs里用hexo.el插件[2]写博客简直爽到飞）并且很多人都喜欢她！ 题外 sublime text 2 下的Markdown写作 当时用wordpress的一个自动抓取博客的软件，定时抓取文章，现在想想确实有点不厚道 ↩ https://github.com/kuanyui/hexo.el ↩]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2016%2F11%2F05%2Fmysql%2F</url>
    <content type="text"><![CDATA[mysql 锁 http://blog.csdn.net/xifeijian/article/details/20313977 mysql 索引 http://blog.jobbole.com/24006/ save or update INSERT ... SELECT ... NOT EXISTS ON DUPLICATE KEY UPDATE REPLACE http://blog.csdn.net/miraclestar/article/details/6525236 This version of MySQL doesn’t yet support ‘LIMIT &amp; IN/ALL/ANY/SOME subquery’ MySQL Errno: 1235 http://stackoverflow.com/questions/17892762/mysql-this-version-of-mysql-doesnt-yet-support-limit-in-all-any-some-subqu mysql中orderby和limit同时使用的bug http://blog.sina.com.cn/s/blog_705cc5dd01012ehb.html]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python小工具]]></title>
    <url>%2F2016%2F11%2F05%2Fpython-tools%2F</url>
    <content type="text"><![CDATA[python智能剪贴板 场景 个人在整理一个word文档时，碰到了类似a102,a103,a104…a&lt;不确定多少&gt;的输入，敲的手疼，何不用Python脚本写一个自动输入。 思路 复制a102到剪贴板，执行脚本[1]修改剪贴板为a103，粘贴，执行脚本修改剪贴板为a104,以此类推… 以下是替换字符串中数字加1: import reinput = 'a102'output = re.sub('\\d+',lambda m: str(int(m.group(0))+1),input)print output a103 python-re 参考 python正则表达式 python键盘事件 执行脚本通过python监听事件实现 ↩]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emacs]]></title>
    <url>%2F2016%2F11%2F02%2Femacs%2F</url>
    <content type="text"><![CDATA[Emacs 是什么 Emacs Makes A Computer Slow Escape Meta Alt Control Shift Emacs Makers Are Crazy Sickos Emacs Makes All Computing Simple Emacs Makefiles Annihilate C-Shells Emacs Manuals Always Cause Senility Emacs May Allow Customized Screwups Emacs Manuals Are Cryptic and Surreal Eventually Munches All Computer Storage Eight Megabytes And Constantly Swapping Elsewhere Maybe All Commands are Simple Excellent Manuals Are Clearly Suppressed Emacs May Alienate Clients and Supporters Except by Middle Aged Computer Scientists Extended Macros Are Considered Superfluous Every Mode Accelerates Creation of Software Each Manual’s Audience is Completely Stupefied Exceptionally Mediocre Algorithm for Computer Scientists Easily Maintained with the Assistance of Chemical Solutions Eradication of Memory Accomplished with Complete Simplicity Emacs = Esc + Meta + Alt + Ctrl + Super 文件编码 打开文件出现乱码时，可以尝试修改字符的编码 M-x revert-buffer-with-coding-system 输入编码后回车 enter↵ 指定文件的保存编码 M-x set-buffer-file-coding-system 输入编码后回车 enter↵ 矩形选择 http://blog.sina.com.cn/s/blog_88b165d301017djg.html emacs以C-x r开头的命令来进行矩形操作。先用C-space或者C-@设一个mark，移动光标到另一点，用以下命令进行列操作： C-x r k 剪切一个矩形块 C-x r y 粘贴一个矩形块 C-x r o 插入一个矩形块 C-x r c 清除一个矩形块(使其变成空白) C-x r t 在选定区域的所有列前插入样的字符 ido 你如果要创建一个新的文件叫 “ab”，而你的目录里有匹配前缀的文件 或目录，RET 就会打开部分匹配的文件。所以这个时候你必须按 C-j 来创建这 样一个文件。如果没有匹配的文件，那么RET也会创建一个新的文件 http://docs.huihoo.com/homepage/shredderyin/emacs_elisp.html org-mode 快捷键（参考：http://blog.csdn.net/u014801157/article/details/24372485） M-LEFT/RIGHT 升级/降级当前标题，不允许有子标题的存在 M-S-LEFT/RIGHT 升级/降级标题树，即标题树内的各级标题相应升/降级 M-UP/DOWN 在同级标题间上/下移标题树，不能跨级别移动 M-RET 在当前标题后插入同级标题符号（即换行符和星号） C-RET 在当前标题树后插入同级标题符号 M-S-RET 在当前标题后插入同级TODO标题 C-S-RET 在当前标题树后插入同级TODO标题 C-c * 把光标所在行转成标题 C-c - 把光标所在行转成列表 org-capture 使用Org Capture来收集灵感 使用org-capture记录密码 Capture mode and Date Trees in org-mode org-pomodoro 给 org-pomodoro 增加桌面通知功能 表格列计算 http://stackoverflow.com/questions/6688075/permanently-summing-a-column-in-an-org-mode-table dired 必備的 Dired 設定與簡易教學 org-capture 使用Org Capture来收集灵感 使用org-capture记录密码 Capture mode and Date Trees in org-mode github上emacs相关 githup上stars过20扩展类型为el编程语言为elisp的项目 emacs Advising Emacs List Functions https://www.gnu.org/software/emacs/manual/html_node/elisp/Advising-Functions.html emacs 替换掉^M 从windows平台拷过来的文件带^M，如何去掉 M-x replace-string ret c-q c-m ret ret macos brew 安装 emacs rm /usr/bin/emacsrm -rf /usr/share/emacs##brew install emacs --cocoa --srgb --with-xbrew install emacs --with-cocoa ln -s /usr/local/Cellar/emacs/24.3/Emacs.app /Applications/ 其中–cocoa选项为编译cocoa版本的emacs（即带有GUI），–srgb选项为启用sRGB颜色支持，–with-x选项用于启用对于X11环境的支持。 mud emacs -batch -l dunnet 其他 Emacs Power_ Can your editor do THIS]]></content>
      <categories>
        <category>eamcs</category>
      </categories>
      <tags>
        <tag>emacs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好大的异常-springmvc篇]]></title>
    <url>%2F2016%2F11%2F02%2Fexception-springmvc%2F</url>
    <content type="text"><![CDATA[这一贴比较费流量！ 关键字call 'refresh' before multicasting events via the context 21:29:25.216 [localhost-startStop-1] WARN o.s.w.c.s.XmlWebApplicationContext - Exception thrown from ApplicationListener handling ContextClosedEvent java.lang.IllegalStateException: ApplicationEventMulticaster not initialized - call ‘refresh’ before multicasting events via the context: Root WebApplicationContext: startup date [Thu Mar 24 21:29:24 CST 2016]; root of context hierarchy at org.springframework.context.support.AbstractApplicationContext.getApplicationEventMulticaster(AbstractApplicationContext.java:347) [spring-context-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:334) [spring-context-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1051) [spring-context-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1012) [spring-context-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:586) [spring-web-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:143) [spring-web-3.2.13.RELEASE.jar:3.2.13.RELEASE] at com.xxx.pai.service.listener.SystemListener.contextDestroyed(SystemListener.java:76) [SystemListener.class:na] at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:5014) [catalina.jar:7.0.54] at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5659) [catalina.jar:7.0.54] at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232) [catalina.jar:7.0.54] at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:160) [catalina.jar:7.0.54] at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559) [catalina.jar:7.0.54] at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549) [catalina.jar:7.0.54] at java.util.concurrent.FutureTask.run(FutureTask.java:262) [na:1.7.0_45] at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_45] at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_45] at java.lang.Thread.run(Thread.java:744) [na:1.7.0_45] bean id 重复了 SpringMVC3.2+Mybatis3.2集成报错 Exception in thread “main” java.lang.AbstractMethodError: org.mybatis.spring.transaction.SpringManagedTransactionFactory.newTransaction(Ljava/sql/Connection;)Lorg/apache/ibatis/transaction/Transaction; at org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSessionFromConnection(DefaultSqlSessionFactory.java:98) at org.apache.ibatis.session.defaults.DefaultSqlSessionFactory.openSession(DefaultSqlSessionFactory.java:71) at org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:135) at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:345) at com.sun.proxy.$Proxy1.selectOne(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:155) at im.le.hello.dao.TestDao.select(TestDao.java:13) at im.le.hello.dao.TestDao.main(TestDao.java:19) mybatis-spring插件升级到1.0.2-&gt;1.1.1 &lt;dependency&gt; &lt;groupId&gt;org.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt; &lt;version&gt;1.1.1&lt;/version&gt;&lt;/dependency&gt; quartz2+spring3 Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name ‘runMeJob’ defined in URL [jar:file:/D:/bl/git/cpx/cpx-admin/target/cpx-admin/WEB-INF/lib/cpx-business-1.0.0-SNAPSHOT.jar!/conf/spring/spring-job.xml]: Invocation of init method failed; nested exception is java.lang.IncompatibleClassChangeError: Implementing class at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1514) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] 七月 29, 2016 8:41:51 上午 org.apache.catalina.core.StandardContext startInternal at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:191) ~[spring-beans-3.2.13.RELEASE.jar:3.2.13.RELEASE] spring3不兼容quartz2 http://www.mkyong.com/spring/incompatibleclasschangeerror-jobdetailbean-has-interface-org-quartz-jobdetail-as-super-class/]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>springmvc</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有用的网址]]></title>
    <url>%2F2016%2F11%2F02%2Fuseful-sites%2F</url>
    <content type="text"><![CDATA[开发 拨云剑 在线工具 测试 gtmetrix网页性能在线测试 破解 http://blog.lanyus.com/ 前端 What the font http://www.myfonts.com/WhatTheFont/ 识字体http://www.likefont.com/ 浏览器兼容性 http://caniuse.com/ 网页性能测试 gtmetrix https://gtmetrix.com/ favicon http://www.degraeve.com/favicon/ http://www.favicon.cc/ 高质量图片 https://visualhunt.com 有趣的 一个前端大神的个人网站 http://strml.net/ ascii art http://www.asciiarts.net/ webservice 常用免费的WebService列表 博客 老D]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>网址</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[maven]]></title>
    <url>%2F2016%2F11%2F02%2Fmaven%2F</url>
    <content type="text"><![CDATA[国内maven镜像 http://nexus.hsweb.me/content/groups/public/ http://maven.aliyun.com/nexus/content/groups/public/ http://mvnrepo.tae.taobao.com/content/groups/public/ http://maven.mofasuidao.xyz/nexus/content/groups/public/ Nexus环境搭建及简单介绍 http://blog.csdn.net/wang379275614/article/details/43940259 默认密码admin/admin123 Maven nexus 安装nexus : wrapper | OpenSCManager failed - 拒绝访问。 (0x5) maven Nexus入门指南（图文） 常用命令 maven install -Dmaven.test.skip=true 从模板构建项目 Projects mvn archetype:generate -DgroupId=&lt;groupId&gt; -DartifactId=&lt;artifactId&gt; -DarchetypeGroupId=&lt;archetypeGroupId&gt; -DarchetypeArtifactId=&lt;archetypeArtifactId&gt; -DarchetypeVersion=&lt;archetypeVersion&gt; -Dfile.encoding=UTF-8 -DarchetypeCatalog=internalmvn archetype:generate -DgroupId=lu.panpan -DartifactId=yhb -DarchetypeGroupId=org.gy.archetype -DarchetypeArtifactId=gy-archetype-parent -DarchetypeVersion=1.0-SNAPSHOT -Dfile.encoding=UTF-8 -DarchetypeCatalog=internal 参数 -T 多线程 maven3.x支持并发 mvn -T 4 clean install ## 4线程并发构建mvn -T 1C clean install ## 每个cpu内核1个线程mvn -T 1.5C clean install ## 每个cpu内核1.5个线程 参考：https://cwiki.apache.org/confluence/display/MAVEN/Parallel+builds+in+Maven+3]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git相关]]></title>
    <url>%2F2016%2F11%2F02%2Fgit%2F</url>
    <content type="text"><![CDATA[git 相关技巧 2017-03-22 16:37:53 add git clone 带子模块的项目 git clone 带子模块的项目 git clone &lt;repository url&gt; [local path]cd [local path]git submodule initgit submodule update git添加子模块 git submodule add &lt;repository url&gt; &lt;local path&gt; 搭建git服务器 http://developer.51cto.com/art/201507/483448.htm Git Stash用法 http://www.cppblog.com/deercoder/archive/2011/11/13/160007.aspx 覆盖更新本地已经修改的代码 http://stackoverflow.com/questions/1125968/how-to-force-git-pull-to-overwrite-local-files git fetch --allgit reset --hard origin/master Gource 一个神奇的软件 先看视频org-mode git history http://my.oschina.net/softshellhero/blog/176460 解决git clone时报错：The requested URL returned error: 401 Unauthorized while accessing 版本问题，最直接的解决办法就是重新编辑安装git吧： 下载： wget -O git.zip https://github.com/git/git/archive/master.zip 解压: unzip git.zip 进入git目录: cd git-master 编译安装： autoconf./configure --prefix=/usr/localmake &amp;&amp; make install 最后别忘了删掉旧的git，并把新版本的git建立软链接到/usr/bin/git rm /usr/bin/gitln -s /usr/local/bin/git /usr/bin/git centos 6.5 升级git（2016-12-24 20:08:26补充） 最近在学习jenkins在一台centos6服务器上安装jenkins，centos6默认的git版本是1.7.1，在clone码云上的项目出现error: The requested URL returned error: 401 Unauthorized网上说是git版本问题。 下载源码（不能克隆码云上的但可以克隆github上的，服！） git clone https://github.com/git/git.git 进入git目录执行以下命令 sudo yum install libcurl-devel zlib-devel asciidoc xmlto # 安装依赖make configure ./configure --prefix=/usrmake allsudo make install install-doc install-html 参考：http://serverfault.com/questions/448814/yum-doesnt-install-latest-version-of-git-on-centos6 git记住密码 设置记住密码（默认15分钟）： git config --global credential.helper cache 如果想自己设置时间，可以这样做： git config credential.helper 'cache --timeout=3600' 这样就设置一个小时之后失效 长期存储密码： git config --global credential.helper store 增加远程地址的时候带上密码也是可以的。(推荐) git remote add origin http://yourname:password@git.oschina.net/name/project.git]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php]]></title>
    <url>%2F2016%2F11%2F02%2Fphp%2F</url>
    <content type="text"><![CDATA[php不能连接 mysql 安装php5-mysqlnd Call to undefined function ImageCreateFromjpeg 安装php5-gd 参考http://chen498402552-163-com.iteye.com/blog/1161254]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx]]></title>
    <url>%2F2016%2F11%2F02%2Fnginx%2F</url>
    <content type="text"><![CDATA[No input file specified 配置文件里 SCRIPT_FILENAME 配置问题 nginx添加ssl模块 进入nginx的sbin目录（这里是/opt/nginx-1.10.0/sbin）查看nginx当前配置 ./nginx -V nginx 进入nginx的源码包(这里是/opt/download/nginx-1.10.0)重新编译 ./configure --prefix=/opt/nginx-1.10.0 --with-http_stub_status_module --with-http_ssl_modulemake ##这一步之后千万不要`make install`!!! 进入nginx的sbin目录备份原来的nginx二进制文件 cp nginx nginx.bak 停止nginx服务，回到源码目录把重新编译的二进制文件拷贝到nginx的sbin目录替换旧的 cp objs/nginx /opt/nginx-1.10.0/sbin/ 执行第1步，验证一下]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows]]></title>
    <url>%2F2016%2F11%2F01%2Fwindows%2F</url>
    <content type="text"><![CDATA[OneNote2013 代码语法高亮插件 http://blog.home-ml.com/wordpress/?p=1 win7文件被占用 win7]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux-centos]]></title>
    <url>%2F2016%2F11%2F01%2Flinux-centos%2F</url>
    <content type="text"><![CDATA[centos 6.6 yum 安装 nginx rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpmyum install nginx 安装nodejs sudo yum install epel-releasesudo yum install nodejssudo yum install npm 安装mysql yum install mysql-serveryum install mysqlservice mysqld startmysqladmin -u root password xxxxmysql -u root -p 安装whois yum install jwhois 安装ssh服务 yum install openssh-serverservice sshd start 开机启动 chkconfig sshd on ntfs支持 yum instal fuse-ntfs-3g 挂载LVM卷，提示mount: unknown filesystem type 'LVM2_member’的解决 http://blog.csdn.net/pengyouchuan/article/details/17578189 挂载到/media/2失败:结构需要清理 http://www.cnblogs.com/xiaoyu1005/archive/2013/05/20/3088586.html xfs_repair /dev/centos/homemkfs.ext4 /dev/centos/home /media/2 CentOS 7 安装配置 NFS http://www.linuxidc.com/Linux/2015-05/117378.htm 【Linux】nfs 服务的exportfs命令的简介 http://blog.itpub.net/22664653/viewspace-709839/ Centos7安装配置NFS服务和挂载 http://blog.dreamlu.net/blog/67 systemctl enable nfs-server.service yum install nfs-utils rpcbind 可能会报冲突： file /usr/share/man/man8/blkdeactivate.8.gz from install of device-mapper-7:1.02.107-5.el7_2.2.x86_64 conflicts with file from package lvm2-7:2.02.105-14.el7.x86_64 解决：https://bugzilla.redhat.com/show_bug.cgi?id=1294128 nfs 先更新下lvm2 yum update lvm2 mount -t nfs 10.10.10.2:/opt/test ./test -o proto=tcp -o nolock mount.nfs: an incorrect mount option was specified 解决：http://blog.chinaunix.net/xmlrpc.php?id=3988881&amp;r=blog/article&amp;uid=26849186 mount -o nfsvers=3 10.10.10.2:/opt/test ./test mount -t nfs -o nolock,nfsvers=3,vers=3 -o proto=tcp 10.10.10.2:/opt/test ./test 设置时间 http://www.3lian.com/edu/2015/04-17/205955.html timedatectl set-time "2016-06-27 11:15:59" 基于 Samba 实现 NAS 系统 http://shumeipai.nxez.com/2013/08/24/install-nas-on-raspberrypi.html setenforce 0 (切记关闭！！！)]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis]]></title>
    <url>%2F2016%2F11%2F01%2Fredis%2F</url>
    <content type="text"><![CDATA[redis安装 $ wget http://download.redis.io/releases/redis-3.2.1.tar.gz$ tar xzf redis-3.2.1.tar.gz$ cd redis-3.2.1$ make]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux-btsync]]></title>
    <url>%2F2016%2F11%2F01%2Flinux-btsync%2F</url>
    <content type="text"><![CDATA[linux安装btsync http://www.ldisp.com/a/linux/2013/CentOS-BitTorrent-Sync.shtml 下载地址 https://download-cdn.getsync.com/stable/linux-x64/BitTorrent-Sync_x64.tar.gz http://pan.baidu.com/s/1pLncD0B byej]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>p2p</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux vim]]></title>
    <url>%2F2016%2F11%2F01%2Flinux-vim%2F</url>
    <content type="text"><![CDATA[vim卡住了 vim C-Q]]></content>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos]]></title>
    <url>%2F2016%2F11%2F01%2Fcentos%2F</url>
    <content type="text"><![CDATA[centos7 最小系统安装后无法联网 http://www.centoscn.com/CentosBug/osbug/2014/0831/3621.html 最小系统查看ifconfig https://linux.cn/article-3631-1.html 修改hostname hostnamectl set-hostname slaver2 安装 whois yum install jwhois centos卸载自带jdk http://www.cnblogs.com/hitwtx/archive/2012/02/13/2349752.html 搭建dns服务器 http://jingyan.baidu.com/article/454316ab56277df7a6c03a6a.html CentOS服务器磁盘跑满了,如何处理 通过df查看磁盘使用情况 df 挂载点/90%占用，通过命令du -sh /* | sort -nr查看占用 du http://www.centoscn.com/CentOS/Intermediate/2014/0727/3361.html 安装jenkins yum install javarpm -ivh http://ftp.tsukuba.wide.ad.jp/software/jenkins/redhat-stable/jenkins-2.7.4-1.1.noarch.rpm]]></content>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[shiro和quartz冲突]]></title>
    <url>%2F2016%2F11%2F01%2Fmaven-shiro-quartz-conflict%2F</url>
    <content type="text"><![CDATA[背景 maven项目中同时配置了shiro和quartz，shiro本身引用了quartz造成jar包冲突 解决办法 排除shiro里的quartz依赖： &lt;dependency&gt;&lt;groupId&gt;org.apache.shiro&lt;/groupId&gt;&lt;artifactId&gt;shiro-quartz&lt;/artifactId&gt;&lt;version&gt;1.0.0-incubating&lt;/version&gt;&lt;exclusions&gt;&lt;exclusion&gt;&lt;groupId&gt;quartz&lt;/groupId&gt;&lt;artifactId&gt;quartz&lt;/artifactId&gt;&lt;/exclusion&gt;&lt;/exclusions&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.quartz-scheduler&lt;/groupId&gt;&lt;artifactId&gt;quartz&lt;/artifactId&gt;&lt;version&gt;1.7.3&lt;/version&gt;&lt;/dependency&gt; 参考 http://stackoverflow.com/questions/3821339/shiro-plugin-conflicting-with-quartz-framework-in-grails 扩展 Maven类包冲突终极解决小技若干 mvn dependency:tree -Dverbose -Dincludes=asm:asm]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java小技巧]]></title>
    <url>%2F2016%2F11%2F01%2Fjava-tips%2F</url>
    <content type="text"><![CDATA[非静态方法不要修改静态变量 sonar 判断集合不为空isEmpty() productList == null||productList.size()==0productList == null||productList.isEmpty() new BigDecimal(0.1) -&gt; BigDecimal.valueOf(0.1) p.getTotalPerformancePay().equals(BigDecimal.ZERO) 注意运算符的优先级 response.setMsg("未查询到商品价格信息：" + rst == null ? null : rst.getErrorMessage()); Condition ‘“未查询到商品价格信息：” + rst == null’ is always ‘false’ response.setMsg("未查询到商品价格信息：" + (rst == null ? null : rst.getErrorMessage())); java数组为什么没有泛型 http://blog.csdn.net/orzlzro/article/details/7017435 http://docs.oracle.com/javase/tutorial/extra/generics/fineprint.html MessageFormat转义 原 转义 ’ ‘’ \ \\ { ‘}’ } ‘}’ 如果{}或}{等多个连接在一起，则只开头结尾加'号：'{}'或'}{']]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SecureCrt]]></title>
    <url>%2F2016%2F10%2F31%2Fsecurecrt%2F</url>
    <content type="text"><![CDATA[退格键显示^H Session Option - Terminal - Mapped Keys 勾选 Backspace sends delete 和 Delete sends backspace securecrt securecrt]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>SecureCrt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows命令行神器babun]]></title>
    <url>%2F2016%2F10%2F31%2Fwindows-babun%2F</url>
    <content type="text"><![CDATA[http://babun.github.io/ 下载安装包 解压执行index.bat安装到%USERPROFILE%\.babun目录win7对应 C:\Users\&lt;username&gt;\.babun目录 babun shell /bin/zsh 设置默认shell babun]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>命令行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[神器]]></title>
    <url>%2F2016%2F10%2F31%2Fshenqi%2F</url>
    <content type="text"><![CDATA[密码管理 keepass 开发相关 babun (zsh,oh-my-zsh) SecureCRT http://pan.baidu.com/s/1pJTKFaV sublime text 2 http://pan.baidu.com/s/1hrvdrEk winrar http://pan.baidu.com/s/1bojcnaZ 版本管理 TortoiseGit http://pan.baidu.com/s/1o7zAN3s TortoiseSvn http://pan.baidu.com/s/1KbNoa p2p tox bitmessage 文件同步 sync toy http://pan.baidu.com/s/1miHCVZa 翻墙 twister macos dash破解版 https://pan.baidu.com/s/1qXV6yyK navicat premium 中文破解版 https://pan.baidu.com/s/1hrOviL2 charles 破解版 https://pan.baidu.com/s/1hrJBwKO Today-Scripts https://github.com/SamRothCA/Today-Scripts keycastr 链接: https://pan.baidu.com/s/1c2gfLYS 密码: bian licecap 链接: https://pan.baidu.com/s/1c2FXQ0K 密码: bian paw (restclient) 破解版 链接: https://pan.baidu.com/s/1qYtUSws 密码: bian Keyboard Maestro73 破解版 链接: 链接: https://pan.baidu.com/s/1sljdIyD 密码: bian go2shell,这里有介绍 airdroid calibre 电子书管理 官网下载地址 istat menus5 链接: https://pan.baidu.com/s/1gfeFAGr 密码: bian svn meld github 手册 linux p2p BTSync 官网：https://download-cdn.getsync.com/stable/linux-x64/BitTorrent-Sync_x64.tar.gz 链接: http://pan.baidu.com/s/1pLncD0B 密码: byej 它山之石 http://type.so/cool-tools.html]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python]]></title>
    <url>%2F2016%2F10%2F31%2Fpython%2F</url>
    <content type="text"><![CDATA[windows非官方python插件包 Unofficial Windows Binaries for Python Extension Packages python 爬虫利器 Beautiful Soup http://cuiqingcai.com/1319.html centos 安装 mysqldb-python yun install python-develyum install mysqldb-python python二维码 https://pypi.python.org/pypi/qrcode/5.1 http://www.cnblogs.com/linjiqin/p/4140455.html python 正则表达式 http://www.cnblogs.com/sevenyuan/archive/2010/12/06/1898075.html windows安装python,setuptools,pip,virtualenv http://blog.useasp.net/archive/2014/01/16/install-python-setuptools-pip-and-virtualenv-in-windows.aspx windows安装python插件时找不到python Python version 2.7 required, which was not found in the registry python 教程 廖雪峰 python orm http://www.w2bc.com/Article/8693 http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001402228705570c9506d546a3349c6b7d64135127672fe000 python3 和 python2 里的round round(2.5) python3返回2 python2返回3 python2使用的四舍五入算法 python3使用的四舍六入五成双算法 类似的Round(1.5)=2,Round(2.5)=2,DELPHI里怎么做四舍五入 for循环 for index,val in enumerate(arr): print index,in]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[demo]]></title>
    <url>%2F2016%2F10%2F31%2Fsss%2F</url>
    <content type="text"><![CDATA[var aplayer0 = new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: true,showlrc: 0,music : {title: "Caffeine",author: "Jeff Williams",url: "http://7xq131.com1.z0.glb.clouddn.com/Preparation.mp3",pic: ""}});aplayer0.init(); var dplayer12 = new DPlayer({"element":document.getElementById("dplayer12"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://blimg.bovod.org/video/mv/Billie%20Jean%20-%20Winterplay,%20%E1%84%87%E1%85%B5%E1%86%AF%E1%84%85%E1%85%B5%E1%84%8C%E1%85%B5%E1%86%AB%20-%20%E1%84%8B%E1%85%B1%E1%86%AB%E1%84%90%E1%85%A5%E1%84%91%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A6%E1%84%8B%E1%85%B5,%20Lalala%2020090312.mp4","pic":""},"danmaku":{"api":"http://dplayer.daoapp.io","id":"9E2E3368B56CDBB4","token":"tokendemo"}}); var dplayer13 = new DPlayer({"element":document.getElementById("dplayer13"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://devtest.qiniudn.com/若能绽放光芒.mp4","pic":"http://devtest.qiniudn.com/若能绽放光芒.png"},"danmaku":{"api":"http://dplayer.daoapp.io","id":"9E2E3368B56CDBB4","token":"tokendemo"}}); aplayer]]></content>
  </entry>
  <entry>
    <title><![CDATA[webpy打包egg]]></title>
    <url>%2F2016%2F10%2F31%2Fwebpy-egg%2F</url>
    <content type="text"><![CDATA[背景 写了个webpy小应用，为了方便安装，将依赖一起打包 步骤 下载webpy源码 进入到源码目录 webpy 修改setup包 [1] web06 执行打包命令python setup.py bdist_egg 0.40+版本无需修改 ↩]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[openwrt本地dns]]></title>
    <url>%2F2016%2F10%2F30%2Fopenwrt%2F</url>
    <content type="text"><![CDATA[背景 家里搭了个小服务器（192.168.1.119），部署了个owncloud方便管理计划将域名yun.hp.cn解析到服务器上，开始偷懒只修改了笔记本电脑host文件将就着也用了几周，后来发现手机是真不好改，得亏路由刷的openwrt，治病还是治根 开工 登录路由器，修改/etc/hosts/增加一条记录指向192.168.1.119 openwrt 重启路由器 openwrt无线中继(2018年03月07日) https://www.cnblogs.com/hdk1993/p/4769079.html]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emacs从剪贴板粘贴图片]]></title>
    <url>%2F2016%2F10%2F26%2Femacs-paste-image-from-clipboard%2F</url>
    <content type="text"><![CDATA[背景 emacs写日志时插入图片链接一般步骤： 准备图片（截图或下载） 上传图床(我一般用七牛) 获取外链 粘贴到emacs 超级繁琐！ 前车之鉴 接着就是在网上搜到了这篇文章 讲述了两种插入图片的方法： emacs调用截图命令保存图片到指定目录然后插入图片链接 拷贝本地图片（文件）然后获取剪贴板中文件地址，拷贝文件到指定目录插入图片链接 方法1基本能满足现在的需求: 问题1：我用的mac，截图用的scrot为linux版本，这个好解决，替换成screencapture (call-process "screencapture" nil nil nil "-i" filename) 问题2：截图时emacs一直保持在屏幕中，截图emacs之外的应用有点复杂 造轮子 既然如此，花费一晚上,稍加改造就有了如下代码： ;;------------------------------------------------------------------;; 粘贴图片到七牛服务器;;------------------------------------------------------------------(defun paste-image() "paste image from clipboard" (interactive) (setq localBaseDir "~/.qiniu/bianle/") (call-process-shell-command (concat "mkdir -p " (concat localBaseDir "$(date +%Y/%m/%d)")) ) (setq relFilename (format-time-string "%Y/%m/%d/%Y%m%d%H%M%S.png" (current-time)) ) (setq filename (concat localBaseDir relFilename )) (message (concat "/usr/local/bin/pngpaste " filename)) (call-process-shell-command (concat "/usr/local/bin/pngpaste " filename)) (call-process-shell-command "~/sh/sync.sh") (insert (concat "![](http://blimg.bovod.org/" relFilename ")")) ) 怎么跑起来 安装 安装pngpaste brew install pngpaste 安装七牛命令行同步工具 emacs配置文件添加上边的脚本 使用 使用任意截图软件截图，然后M-x输入paste-image然后RET 效果 我要在这之后插入一张截图： 图片文件拖拽到emacs(2016-12-01 14:13:40) (defun md-dnd-func (event) (interactive "e") (goto-char (nth 1 (event-start event))) (x-focus-frame nil) (let* ((payload (car (last event))) (type (car payload)) (fname (cadr payload)) (img-regexp "\\(gif\\|png\\|jp[e]?g\\)\\&gt;") (localBaseDir "~/.qiniu/bianle/") (relFilename (concat (format-time-string "%Y/%m/%d/" (current-time)) (nth 0 (last (split-string fname "/")))))) (cond ;; insert image link ((and (eq 'drag-n-drop (car event)) (eq 'file type) (string-match img-regexp fname)) (call-process-shell-command (concat "mkdir -p " (concat localBaseDir "$(date +%Y/%m/%d)")) ) (call-process-shell-command (format "cp %s %s" fname (concat localBaseDir "$(date +%Y/%m/%d)" "/") )) (call-process-shell-command "~/sh/sync.sh") (insert (format "![](http://blimg.bovod.org/%s)" relFilename)) (beginning-of-line) (forward-char 2) ;;(org-display-inline-images t t)) ;; regular drag and drop on file ((eq 'file type) (insert (format "[[%s]]\n" fname))) (t (error "I am not equipped for dnd on %s" payload))))))(require 'markdown-mode)(define-key markdown-mode-map (kbd "&lt;drag-n-drop&gt;") 'md-dnd-func) 效果 emacs-dnd emacs-dnd]]></content>
      <categories>
        <category>eamcs</category>
      </categories>
      <tags>
        <tag>emacs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql命令]]></title>
    <url>%2F2016%2F10%2F19%2Fmysql-command%2F</url>
    <content type="text"><![CDATA[mysql 表解锁 修改一个表的索引，由于表数据量大导致修改操作挂起，表被锁 查进程SHOW PROCESSLIST kill掉锁表进程KILL &lt;ID&gt;]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[idea]]></title>
    <url>%2F2016%2F10%2F13%2Fidea%2F</url>
    <content type="text"><![CDATA[idea license server http://idea.le.im http://idea.bovod.org jrebel license server http://idea.qinxi1992.cn/ilanyu IntelliJ IDEA License Server本地搭建教程 idea sonar sonar sonar idea sonarLint 离线安装百度云 idea快捷键 Command⌘+shift⇧+a Ctrl+shift⇧+v 打开剪贴板 Option⌥+Command⌘+c 抽取常量 Option⌥+Command⌘+m 抽取方法 idea插件 rainbow acejump idea插件安装目录 /Users/bianle/Library/Application Support/IntelliJIdea2016.2 代码格式化 https://blog.jetbrains.com/idea/2014/01/intellij-idea-13-importing-code-formatter-settings-from-eclipse/ mac上idea记不住svn密码 方法1. 打开钥匙串选择svn钥匙串访问权限改成所有程序 idea http://www.oschina.net/question/273712_162220?sort=time 方法2. 重装idea http://stackoverflow.com/questions/13585631/intellij-wont-save-svn-authentication-information idea新建项目时慢 idea idea剪贴板历史 默认有5条记录Settings &gt; Editor &gt; Limits &gt; Maximum number of contents to keep in clipboard可以修改限制 参考：http://stackoverflow.com/questions/24164672/can-you-increase-the-paste-buffer-size-in-intellij-idea idea Live Template 打开设置面板（macos下快捷键为Command⌘+,） Editor-&gt;Live Templates 右侧点击+选择2. Template Group...新建一组 点击+选择1.Live Template,填写Abbreviation(简写)，Template Text(模板内容)，点击No applicable contexts选择上下文，模板中有变量点击Edit variables按钮设置变量 点击ok按钮结束编辑 光标移到指定上下文输入刚填写的简写按tab idea-live-template 注释报错 idea-inspection idea 排除文件夹 idea-excluded idea 忽略部分类编译错误 idea-no-check idea-no-check 插件 CamelCase 驼峰转换 Emoji Support Plugin emoji支持 codeglance 小地图 GsonFormat properties文件显示中文 idea-properties idea svn “我就改下，不提交” idea]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[chrome扩展工具推荐]]></title>
    <url>%2F2016%2F10%2F13%2Ftools-chrome-extensions%2F</url>
    <content type="text"><![CDATA[115下载助手 Advanced REST client Anything to QRcode Axure RP Extension for Chrome ChaZD Chrome Sniffer Plus Clear Cache ColorPick Eyedropper d3coder Domain Availability Checker and Whois Lookup Frame two pages Ghostery GistBox Clipper IE Tab JSONView LastPass: Free Password Manager Leanote 记录, 随时随地用Leanote记录知识! Plunker WebExtension Pocket Proxy SwitchySharp Request Maker Screen Resolution Tester SEO for Chrome Session Manager sFTP Client Site Spider, Mark II Tampermonkey http://pan.baidu.com/s/1jGlL4wQ User-Agent Switcher for Chrome Usersnap - visual feedback &amp; bug reports Validity Vimium vim党不要错过，让你用 Chrome 上网快到想哭：Vimium Web Developer ZeroNet Protocol 划词翻译 微信 微信 飞传 草料二维码 http://www.codeceo.com/article/15-chrome-extension.html http://blog.renren.com/share/246480304/16193463025 http://www.admin10000.com/document/6588.html]]></content>
      <categories>
        <category>开发</category>
      </categories>
      <tags>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[securecrt+vps+SwitchySharp+科学上网]]></title>
    <url>%2F2016%2F05%2F16%2Fsecurecrt-vps-SwitchySharp-tutorial%2F</url>
    <content type="text"><![CDATA[Some birds aren’t meant to be caged, that’s all. Their feathers are just too bright. 使用securecrt,国外vps,SwitchySharp科学上网 (fān qiáng) 准备 1个国外vps(同事推荐了日本的conoha) securecrt Chrome+SwitchSharp插件 步骤 SecureCrt连接vps 配置SecureCrt端口转发 securecrt-vps 配置Chrome浏览器代理 securecrt-vps 愉快的玩耍 securecrt-vps ssh 隧道 不指定ip则默认本地ip ssh -qTfnN -D 7000 root@133.130.120.157 ssh -qTfnN -D 172.19.137.29:7000 root@133.130.120.157]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx+owncloud搭建私有云盘]]></title>
    <url>%2F2016%2F04%2F29%2Fphp-owncloud%2F</url>
    <content type="text"><![CDATA[准备 vps (阿里云等) php mysql nginx 安装 下载安装包官网 上传到vps(操作系统为Ubuntu的阿里云为例) 配置nginx https://github.com/owncloud/documentation/wiki/ownCloud-9.x-nginx-config 制作自签名SSL证书 给Nginx配置一个自签名的SSL证书 启动php-cgi(需要安装php5-curl模块sudo apt-get install php5-curl),mysql(新建一个库)和nginx 浏览器访问owncloud应用进行安装 问题 依赖缺失 Owncloud Class ‘PDO’ not found yum install php-pdo PHP mb multibyte未安装 Yum install php-mbstring [ ] 配置文件直接参考别人的,直接输入域名访问404,访问地址需要增加/index.php,nginx不熟,待后续解决 git强制拉取服务器代码覆盖本地改动 git fetch --allgit reset --hard origin/master https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Discuz! X系列远程代码执行漏洞分析]]></title>
    <url>%2F2016%2F04%2F29%2Fdiscuz-bug%2F</url>
    <content type="text"><![CDATA[阿里云上部了个小博客程序,安骑士漏洞检查报了好几天的异常了,也没空理,今儿个度娘了下,找到Discuz! X系列远程代码执行漏洞分析 PO主讲的症状和我的程序一致,可惜没能给出具体解决方案(可能是解决方案太简单不值一提)!下面附上解决方案: 这个问题的根源在于api/uc.php文件中的updatebadwords方法，代码如下： function updatebadwords($get, $post) &#123; global $_G; if(!API_UPDATEBADWORDS) &#123; return API_RETURN_FORBIDDEN; &#125; $data = array(); if(is_array($post)) &#123; foreach($post as $k =&gt; $v) &#123; $data['findpattern'][$k] = $v['findpattern']; $data['replace'][$k] = $v['replacement']; &#125; &#125; $cachefile = DISCUZ_ROOT.'./uc_client/data/cache/badwords.php'; $fp = fopen($cachefile, 'w'); $s = "&lt;?php\r\n"; $s .= '$_CACHE[\'badwords\'] = '.var_export($data, TRUE).";\r\n"; fwrite($fp, $s); fclose($fp); return API_RETURN_SUCCEED; &#125; 修改后: function updatebadwords($get, $post) &#123; if(!API_UPDATEBADWORDS) &#123; return API_RETURN_FORBIDDEN; &#125; $cachefile = $this-&gt;appdir.'./uc_client/data/cache/badwords.php'; $fp = fopen($cachefile, 'w'); $data = array(); if(is_array($post)) &#123; foreach($post as $k =&gt; $v) &#123; //修复代码执行漏洞补丁 if(substr($v['findpattern'], 0, 1) != '/' || substr($v['findpattern'], -3) != '/is') &#123; $v['findpattern'] = '/' . preg_quote($v['findpattern'], '/') . '/is'; &#125; $data['findpattern'][$k] = $v['findpattern']; $data['replace'][$k] = $v['replacement']; &#125; &#125; $s = "&lt;?php\r\n"; $s .= '$_CACHE[\'badwords\'] = '.var_export($data, TRUE).";\r\n"; fwrite($fp, $s); fclose($fp); return API_RETURN_SUCCEED; &#125;]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse自动生成getter和setter的注释]]></title>
    <url>%2F2016%2F03%2F11%2Feclipse-getter-and-setter-commonts%2F</url>
    <content type="text"><![CDATA[下载修改后的class文件get set方法生成注释和字段注释 eclipse安装目录进入plugins文件夹搜索org.eclipse.jdt.ui_*.jar 替换对应class文件 Window-&gt;Preferences-&gt;Java-&gt;CodeStyle-&gt;Code Templates-&gt;Comments-&gt;Getters/Setters Getters: /** * 获取$&#123;bare_field_name&#125; * @return $&#123;bare_field_name&#125; $&#123;bare_field_name&#125; */ Setters: /** * 设置$&#123;bare_field_name&#125; * @param $&#123;bare_field_name&#125; $&#123;bare_field_name&#125; */ http://yaku2688.iteye.com/blog/1164640]]></content>
      <categories>
        <category>eclipse</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[google搜索技巧]]></title>
    <url>%2F2016%2F03%2F11%2Fgoogle-usage%2F</url>
    <content type="text"><![CDATA[站内搜索site: 添加双引号后不分词&quot; 排除搜索- 相关网站related: 文件类型filetype: 信息图-从谷歌搜获更多]]></content>
      <categories>
        <category>google</category>
      </categories>
      <tags>
        <tag>google</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[emacs在win7上导入purcell的配置时出错]]></title>
    <url>%2F2016%2F02%2F25%2Femacs-purcell-s-config-error-on-win7%2F</url>
    <content type="text"><![CDATA[window7安装emacs24.5后导入purcell的配置后打开emacs报错 Warning (initialization): An error occurred while loading `c:/HOME/.emacs.d/init.el’: error: Package `fullframe-’ is unavailable 在这个讨论中找到答案https://github.com/purcell/emacs.d/issues/303 具体解决方案参考http://xn–9dbdkw.se/diary/how_to_enable_GnuTLS_for_Emacs_24_on_Windows/index.en.html 下载安装gnutls-3.2.18-w32.exe，解压后把bin目录下的文件拷到emacs的bin目录重启emacs。]]></content>
      <categories>
        <category>emacs</category>
      </categories>
      <tags>
        <tag>emacs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云上搭建ngrok服务器]]></title>
    <url>%2F2015%2F12%2F28%2Fngrok-on-aliyun%2F</url>
    <content type="text"><![CDATA[环境 阿里云+centos7(x64) 安装vpn客户端pptp go安装地址被墙(为啥?问方校长)!需要安装vpn客户端翻墙下载,centos安装vpn客户端pptp 或者用我已经下载好的go1.4.1.linux-amd64.tar.gz 安装golang yum安装 刚开始yum安装,后来在交叉编译window客户端时失败后改为源码安装) yum install golang 源码安装 wget https://storage.googleapis.com/golang/go1.4.1.linux-amd64.tar.gztar -C /usr/local -xzf go1.4.1.linux-amd64.tar.gzmkdir $HOME/goecho 'export GOROOT=/usr/local/go' &gt;&gt; ~/.bashrc echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc echo 'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin' &gt;&gt; ~/.bashrc source $HOME/.bashrc 参考:Windows/Centos安装GO语言环境 安装 下载ngrok源码并设置环境变量 cd /usr/local/src/git clone https://github.com/inconshreveable/ngrok.gitexport GOPATH=/usr/local/src/ngrok/export NGROK_DOMAIN="tunnel.ink" 生成自签名SSL证书 cd /usr/local/src/ngrokopenssl genrsa -out rootCA.key 2048openssl req -x509 -new -nodes -key rootCA.key -subj "/CN=tunnel.ink" -days 5000 -out rootCA.pemopenssl genrsa -out device.key 2048openssl req -new -key device.key -subj "/CN=tunnel.ink" -out device.csropenssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 5000 ngrok通过bindata将ngrok源码目录下的assets目录（资源文件）打包到可执行文件(ngrokd和ngrok)中 去，assets/client/tls和assets/server/tls下分别存放着用于ngrok和ngrokd的默认证书文件，我们需要将它们替换成我们自己生成的,因此这一步务必放在编译可执行文件之前 cp rootCA.pem assets/client/tls/ngrokroot.crtcp device.crt assets/server/tls/snakeoil.crt cp device.key assets/server/tls/snakeoil.key 编译客户端和服务端 GOOS=linux GOARCH=amd64make cleanmake release-server release-client 启动服务端 bin/ngrokd -domain="tunnel.ink" -httpAddr=":80" 可以在后台启动 nohup bin/ngrokd -domain="tunnel.ink" -httpAddr=":80" &gt; /dev/null 2&gt;&amp;1 &amp; 编译windows客户端 cd /usr/local/go/src/GOOS=windows GOARCH=amd64 CGO_ENABLED=0 ./make.bashcd -GOOS=windows GOARCH=amd64 make release-server release-client 客户端配置文件ngrok.conf server_addr: &quot;tunnel.ink:4443&quot; trust_host_root_certs: false 启动客户端 ngrok -subdomain dev -config=ngrok.conf 80 参考 官方文档 Sebastian的博客 海运博客 Run Ngrok on Your Own Server Using Self-Signed SSL Certificate 它山之石 ngrok一键安装脚本，适于centos版本服务器]]></content>
      <categories>
        <category>ngrok</category>
      </categories>
      <tags>
        <tag>ngrok</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos-vpn]]></title>
    <url>%2F2015%2F12%2F28%2Fcentos-vpn%2F</url>
    <content type="text"><![CDATA[安装ppp和pptp yum -y install ppp pptp pptp-setup 配置pptp pptpsetup --create wjvpn --server 192.200.194.142 --username bianle wjvpn为自定义连接名 bianle为vpn用户名 192.200.194.142为vpn服务器地址 执行命令系统会提示输入vpn的密码 编辑/etc/ppp/peers/wjvpn vim /etc/ppp/peers/wjvpn 改为: # written by pptpsetup pty &quot;pptp 192.200.194.142 --nolaunchpppd&quot; lock #noauth nobsdcomp nodeflate name bianle remotename wjvpn ipparam wjvpn2 require-mppe-128 refuse-pap refuse-chap refuse-eap refuse-mschap 编辑chap-secrets vim /etc/ppp/chap-secrets 改为: # Secrets for authentication using CHAP # client server secret IP addresses # added by pptpsetup for wjvpn bianle wjvpn “xxxxx” * 把pon和poff命令拷贝(或者链接)到系统path目录 cp /usr/share/doc/ppp-2.4.5/scripts/pon /usr/sbin/cp /usr/share/doc/ppp-2.4.5/scripts/poff /usr/sbin/chmod +x /usr/sbin/pon /usr/sbin/poff 拨号 pon wjvpn 查看是否连接 ifconfig 正常情况话会提示如下信息: ppp0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt; mtu 1456 inet 172.16.21.77 netmask 255.255.255.255 destination 172.16.20.208 ppp txqueuelen 3 (Point-to-Point Protocol) RX packets 9 bytes 106 (106.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 7 bytes 82 (82.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 断开连接 poff wjvpn 调试模式 vi /etc/ppp/options.pptpd /var/log/message查看日志 添加路由 添加路由后才能用ppp上网 sudo route add default dev ppp0]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>vpn</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在openshift上搭建ghost博客系统]]></title>
    <url>%2F2015%2F12%2F14%2Fghost-blog-hosted-by-openshift%2F</url>
    <content type="text"><![CDATA[到openshift网站免费注册一个账号。（貌似现在被墙了，得翻墙头过去） 进入控制台OPENSHIFT WEB CONSOLE 添加一个应用Add Application... 选择应用类型,点击Browse By Tag按钮选择Node Js 配置应用,点击标题Nodejs0.10进入配置页面 填写Public Url,需要补充两部分格式为http://&lt;应用名称&gt;-&lt;命名空间&gt;.rhcloud.com,如我填写的http://nodejs-bianle.rhcloud.com,命名空间全网唯一,应用名称在本命名空间内唯一.源码填写Ghost的github仓库地址https://github.com/developercorey/openshift-ghost-quickstart.git openshift支持绑定域名,点击应用列表中应用右侧齿轮按钮可进入应用配置界面 点Change(如果已经绑定过则为change alias),填写要绑定的域名,并且将该域名CNAME方式解析到默认应用路径(我的是http://nodejs-bianle.rhcloud.com)(这一步骤通常在域名注册商或域名解析服务商那完成) 修改ghost配置,改成绑定的网址. 先添加ssh-key到openshift,点击setting-add a new key打开配置页面 填写生成好的公钥 拷贝源码路径ssh://566ed2892d5271b18e0000e0@nodejs-bianle.rhcloud.com/~/git/nodejs.git/ SecureCRT（ssh客户端）远程登录nodejs-bianle.rhcloud.com，用户名566ed2892d5271b18e0000e0会提示加载私钥选择生成的私钥 进入app-root/runtime/repo目录修改config.js文件 将url改成自己的域名 登录后台/ghost创建用户 填写基本信息 邀请你的好友一起用(ghost支持多用户)]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>ghost</tag>
        <tag>openshift</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse开发maven项目]]></title>
    <url>%2F2015%2F12%2F10%2Feclipse-maven%2F</url>
    <content type="text"><![CDATA[New-Maven Project 打开向导 选择默认工作空间 Filter输入web,选择maven-archetype-webapp 输入groupid,artifactid,点击Finish index.jsp报错 The superclass “javax.servlet.http.HttpServlet” was not found on the Java Build Path 添加Server Runtime 启动项目测试]]></content>
      <categories>
        <category>maven</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse自定义模板]]></title>
    <url>%2F2015%2F12%2F09%2Feclipse-template%2F</url>
    <content type="text"><![CDATA[菜单栏点击Window-Preferences进入首选项 左边导航树依次展开java-editor-templates,点击new按钮打开编辑窗口 编辑模板内容后保存. name 为输入的关键字如输入syso按Alt-/ Context为模板适用范围 Pattern可添加变量如:${cursor}为光标. 编辑xml页面模板参考步骤3]]></content>
      <categories>
        <category>eclipse</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装kubuntu后]]></title>
    <url>%2F2015%2F12%2F06%2Flinux-kubuntu%2F</url>
    <content type="text"><![CDATA[安装中文包 sudo apt-get install language-pack-kde-zh-hans 安装pidgin Sudo apt-get install pidginsudo add-apt-repository ppa:lainme/pidgin-lwqqsudo apt-get updateSudo apt-get install pidgin-lwqq 安装finch 安装yakuake 安装fcitx sudo apt-get install fcitx-pinyinsudo apt-get install fcitx-table-wbpyreboot ssh 安装 sudo apt-get install openssh-server 查看是否启动 sudo ps -e |grep ssh 有sshd证明已启动 sudo service ssh start 配置文件 /etc/ssh/sshd_config Emacs ~/.profile加入 emacs --daemon&amp; 开机自动启动server 安装输入法 http://www.cnblogs.com/guyufei/p/3536133.html https://github.com/wenbinye/emacs-eim C-spac 冲突 http://blog.sina.com.cn/s/blog_a04f0d1c0101bwk1.html secureCRT 选项 -&gt; 会话选项 -&gt; 仿真 -&gt; 映射键； 勾上backspace发送delete。 git Sudo apt-get install gitgit config --global user.email "229371515@qq.com"git config --global user.name "bianle" ssh-keygen -t rsa -C "229371515@qq.com" hexo sudo apt-get install nodejssudo apt-get install npmsudo npm install hexo-cli -g 将包安装到全局环境中 npm install hexo --save 进入一个目录 hexo init &lt;folder&gt; /usr/bin/env: node: No such file or directory (ubuntu :ln -s /usr/bin/nodejs /usr/bin/node ) http://stackoverflow.com/questions/20886217/browserify-error-usr-bin-env-node-no-such-file-or-directory npm install hexo generate hexo server sudo npm install hexo-renderer-ejs --savesudo npm install hexo-renderer-stylus --savesudo npm install hexo-renderer-marked --save sudo npm install hexo-generator-feed --save sudo npm install hexo-ruby-character --savesudo npm install nodejieba --save sudo npm install hexo-math --save sudo npm install hexo-deployer-git cat ./ssh/id_rsa.pub 加到github deploy: type: git repository: git@github.com:bianle/bianle.github.io.git branch: master feed: type: atom path: atom.xml limit: 20 rz sz Sudo apt-get install lrzsz sudo apt-get install tree chrome Wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.debsudo dpkg -i *.deb 缺包 sudo apt-get install libappindicator1 缺依赖 apt-get -f install chromeos-apk sudo apt-get install lib32stdc++6-s390x-cross yakuake zsh Oh my zsh sudo apt-get install url sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" 修改字体 ~/.kde/share/apps/konsole/ xxx.profile Fantasque sans mono git clone git://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/plugins/zsh-syntax-highlighting http://www.v2ex.com/t/156997 git下载单个文件夹 https://github.com/bianle/oh-my-zsh/tree/master/themes https://github.com/bianle/oh-my-zsh/trunk/themes]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[websocket]]></title>
    <url>%2F2015%2F12%2F02%2Fwebsocket%2F</url>
    <content type="text"><![CDATA[概述 WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。WebSocket通讯协议于2011年被IETF定为标准RFC 6455，WebSocketAPI被W3C定为标准。 在WebSocket API中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。 背景 现在，很多网站为了实现推送技术，所用的技术都是轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP request，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP request的header是非常长的，里面包含的数据可能只是一个很小的值，这样会占用很多的带宽和服务器资源。 而比较新的技术去做轮询的效果是Comet，使用了AJAX。但这种技术虽然可达到双向通信，但依然需要发出请求，而且在Comet中，普遍采用了长链接，这也会大量消耗服务器带宽和资源。 面对这种状况，HTML5定义了WebSocket协议，能更好的节省服务器资源和带宽并达到实时通讯。 优点 和现在主流web通信方式对比websocket优势 轮询 客户端定时向服务器发送Ajax请求，服务器接到请求后马上返回响应信息并关闭连接。 优点：后端程序编写比较容易。 缺点：请求中有大半是无用，浪费带宽和服务器资源。 实例：适于小型应用。 A:我是xxx的机主我想查一下当月的花费 B:暂无当月话费请稍后查询挂机 A:我是xxx的机主查话费 B:暂无 A:我是 B:200 长轮询 客户端向服务器发送Ajax请求，服务器接到请求后hold住连接，直到有新消息才返回响应信息并关闭连接，客户端处理完响应信息后再向服务器发送新的请求。 优点：在无消息的情况下不会频繁的请求，耗费资源小。 缺点：服务器hold连接会消耗资源，返回数据顺序无保证，难于管理维护。 实例：WebQQ、Hi网页版、Facebook IM。 A:我是xxx机主查话费 B:请不要挂机查询中 … B:200挂机 A:请查一下上个月话费 B:不要挂机 B:300 长连接 在页面里嵌入一个隐蔵iframe，将这个隐蔵iframe的src属性设为对一个长连接的请求或是采用xhr请求，服务器端就能源源不断地往客户端输入数据。 优点：消息即时到达，不发无用请求；管理起来也相对方便。 缺点：服务器维护一个长连接会增加开销。 没有方法可用来实现可靠的错误处理或是跟踪连接的状态，因为所有的连接和数据都是由浏览器通过HTML标签来处理的，因此你没有办法知道连接何时在哪一端已被断开了。 实例：Gmail聊天 A:查话费 B:当月200 B:上月300 B:积分50000 B:这是广告 B:你好啊 B:xxxx B:balabala Flash Socket 在页面中内嵌入一个使用了Socket类的 Flash 程序JavaScript通过调用此Flash程序提供的Socket接口与服务器端的Socket接口进行通信，JavaScript在收到服务器端传送的信息后控制页面的显示。 优点：实现真正的即时通信，而不是伪即时。 缺点：客户端必须安装Flash插件；非HTTP协议，无法自动穿越防火墙。 实例：网络互动游戏。 Websocket 优点: 相比轮询，只需要握手一次，不用客户端每次都请求(建立http协议,关闭http协议)，不需要每次都在head中包含无效信息，减少网络资源消耗。 相比长连接，websocket经过一次握手后,物理层建立一个tcp连接,不用在网络层维护一个长连接从而减少开销。 相比flashsocket，websocket是独立的基于tcp的协议，通过80端口通信可绕过应用防火墙。 服务器可以主动传送数据给客户端。而不是“请求-响应”模式。 缺点: WebSocket 规范目前还处于草案阶段，也就是它的规范和 API 还是有变动的可能 另外的一个风险就是微软的 IE 作为占市场份额最大的浏览器，和其他的主流浏览器相比，对 HTML5 的支持是比较差的，这是我们在构建企业级的 Web 应用的时候必须要考虑的一个问题 握手协议 在实现websocket连线过程中，需要透过浏览器发出websocket连线请求，然后服务器发出回应，这个过程通常称为“握手”（handshaking）。 PS:后期的版本大多属于功能上的扩充，例如使用第7版的握手协议同样也适用于第8版的握手协议。 例子 浏览器请求 GET / HTTP/1.1 Upgrade: websocket Connection: Upgrade Host: example.com Origin: null Sec-WebSocket-Key: sN9cRrP/n9NdMgdcy2VJFQ== Sec-WebSocket-Version: 13 服务器回应 HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: fFBooB7FAkLlXgRSz0BT3v4hq5s= Sec-WebSocket-Origin: null Sec-WebSocket-Location: ws://example.com/ 原理 在请求中的“Sec-WebSocket-Key”是随机的，服务器端会用这些数据来构造出一个SHA-1的信息摘要。 把“Sec-WebSocket-Key”加上一个魔幻字符串“258EAFA5-E914-47DA-95CA-C5AB0DC85B11”。使用SHA-1加密，之后进行BASE-64编码，将结果做为“Sec-WebSocket-Accept”头的值，返回给客户端。 浏览器 实现websocket的协议，浏览器扮演着一个很重要的角色。所有最新的浏览器支持最新规范（RFC 6455）的WebSocket协议。一个详细的测试报告[1]列出了这些浏览器支持的Websocket版本。 浏览器支持现状 协议 发布日期 IE Firefox[2]（个人电脑） Firefox (Android) Chrome（个人电脑，手机） Safari（Mac, iOS） Opera（个人电脑，手机） Android浏览器 hixie-75 2010年2月4日 4 5.0.0 hixie-76 hybi-00 2010年5月10日，2010年5月23日 4.0（已被禁用） 6 5.0.1 11.00(已被禁用) 7 hybi-07 2011年4月22日 6 8 hybi-10 2011年7月11日 7 7 14 13 RFC 6455 2011年12月 10 11 11 16 6 12.10 4.4 服务器 在服务器方面，网上都有不同对websocket支持的服务器： php - http://code.google.com/p/phpwebsocket/ jetty - http://jetty.codehaus.org/jetty/（版本7开始支持websocket） netty - http://www.jboss.org/netty ruby - http://github.com/gimite/web-socket-ruby Kaazing - http://www.kaazing.org/confluence/display/KAAZING/Home Tomcat - http://tomcat.apache.org/（7.0.27支持websocket，建议用tomcat8，7.0.27中的接口已经过时） WebLogic - http://www.oracle.com/us/products/middleware/cloud-app-foundation/weblogic/overview/index.html（12.1.2開始支持） node.js - https://github.com/Worlize/WebSocket-Node node.js - http://socket.io nginx - http://nginx.com/ mojolicious - http://mojolicio.us/ python - https://github.com/abourget/gevent-socketio Django - https://github.com/stephenmcd/django-socketio Spring-websocket Spring-websocket作为websocket的java服务器实现的继承websocket优势外自身的一些特点 java标准 与 JSR-356 Java WebSocket API 兼容。 浏览器兼容性 为那些不支持或者不允许使用Websocket的浏览器和网络提供了一些候选项,基于 SockJS（对 WebSocket 的模拟）的回调方案。 服务器松耦合 服务器端对WebSocket的处理要稍加复杂一些，现在还没有某个Java规范以一种标准的方式来支持WebSocket。要使用web容器（例如Tomcat或是Jetty）的WebSocket功能的话，你得把应用代码和容器特定的库紧密耦合在一起才能访问WebSocket的功能。Spring-websocket很好的屏蔽web容器间的差异性。 参考资料 维基百科https://zh.wikipedia.org/wiki/WebSocket Web 通信 之 长连接、长轮询（long polling） http://www.cnblogs.com/hoojo/p/longPolling_comet_jquery_iframe_ajax.html/ 反向Ajax，第1部分：Comet介绍 http://kb.cnblogs.com/page/112185/ 反向Ajax，第2部分：WebSocket http://kb.cnblogs.com/page/112616/ Spring WebSocket详解http://www.lxway.net/445162.html Spring 4.0 中的 WebSocket 架构 http://developer.51cto.com/art/201311/418069.htm Spring源码整体架构http://blog.javachen.com/2014/09/29/spring-source-codes.html spring+websocket整合（springMVC+spring+MyBatis即SSM框架和websocket技术的整合）http://blog.csdn.net/gisredevelopment/article/details/38392629 使用 HTML5 WebSocket 构建实时 Web 应用 http://www.ibm.com/developerworks/cn/web/1112_huangxa_websocket/ WebSocket 是什么原理？为什么可以实现持久连接？ http://www.zhihu.com/question/20215561]]></content>
      <categories>
        <category>websocket</category>
      </categories>
      <tags>
        <tag>websocket</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows-whois]]></title>
    <url>%2F2015%2F11%2F23%2Fwindows-whois%2F</url>
    <content type="text"><![CDATA[安装 百度云下载 解压后将whois.exe拷贝到C:\Windows\System32(win7以上)或任意路径并加到环境变量 cmd -&gt; hwois 2le.me 批量whois bat脚本 目录树 │ domains.txt │ mywhois.bat │ └─rst 2le.me.txt myshois.bat echo offfor /f "usebackq tokens=1* delims=:" %%a in ("domains.txt") do (set filename=%date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2%::echo %filename%whois "%%a" &gt; rst\"%%a".txt)pause domains.txt 2le.me]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>whois</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo]]></title>
    <url>%2F2015%2F11%2F19%2Fhexo%2F</url>
    <content type="text"><![CDATA[hexo 安装 hexo你的博客 hexo 插件 安装方法 [sudo] npm install --save &lt;插件名&gt; 如： npm install --save hexo-deployer-git 常用插件 hexo-deployer-git 部署到github hexo-ruby-character （依赖nodejieba）效果如下： {% ruby Base|top %} Base (top) nodejieba 拼音 hexo-math 数学公式 hexo-generator-feed rss订阅 hexo-tag-demo hexo-tag-kbd hexo-image-caption hexo-pdf 所有插件 https://hexo.io/plugins/ 主题 自己写个主题 Hexo 主题制作指南 常见错误 ERROR Deployer not found: github hexo 更新到3.0之后，deploy的type 的github需要改成git ERROR Deployer not found: git 安装hexo-deployer-git插件npm install hexo-deployer-git –-save Error: spawn git ENOENT hexo部署问题：Error: spawn git ENOENT hexo站内搜索 利用swiftype为hexo添加站内搜索v2.0 hexo seo 动动手指，不限于NexT主题的Hexo优化（SEO篇） hexo脚注 安装hexo-renderer-markdown-it npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it --save 配置 markdown: render: html: true xhtmlOut: false breaks: false linkify: true typographer: true quotes: '“”‘’' plugins: - markdown-it-footnote - markdown-it-sup - markdown-it-sub - markdown-it-abbr# - markdown-it-emoji anchors: level: 1 collisionSuffix: 'v' permalink: true permalinkClass: header-anchor permalinkSymbol: ' ']]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[error]]></title>
    <url>%2F2015%2F11%2F19%2Ferror%2F</url>
    <content type="text"><![CDATA[git disconnected no supported authentication methods available(server sent: publickey，keyboard interae） 因为TortoiseGit和Git的冲突 我们需要把TortoiseGit设置改正如下。 1.找到TortoiseGit -&gt; Settings -&gt; Network 2.将SSH client指向~\Git\bin\ssh.exe(Git安装路径下) 然后便可正确push和pull http://blog.csdn.net/lifuxiangcaohui/article/details/40820097]]></content>
      <categories>
        <category>error</category>
      </categories>
      <tags>
        <tag>error</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RSA加密算法原理及RES签名算法]]></title>
    <url>%2F2015%2F11%2F16%2Frsa-encrypt%2F</url>
    <content type="text"><![CDATA[RSA算法原理与加密解密 RSA加密过程简述 A和B进行加密通信时,B首先要生成一对密钥。一个是公钥，给A，B自己持有私钥。A使用B的公钥加密要加密发送的内容，然后B在通过自己的私钥解密内容。 RSA加密算法基础 整个RSA加密算法的安全性基于大数不能分解质因数。 数学原理 互质关系： 两个数a和b没有除1外的其他公约数，则a与b互质 任意两个质数构成互质关系 两个数中，如果大数为质数，则两数必定互质 1和任意整数互质 当p&gt;1时，p与p-1互质(相邻两数互质) 当$p=2n+1$(n&gt;0且n为整数)时，p与p+2互质(相连的两个奇数互质) 求欧拉函数： 定义：与正整数n互质且小于正整数n的正整数的个数。通常使用ψ(n)表示。 求取与正整数n互质的正整数的个数ψ(n),且ψ(n)满足ψ(n)∈(2,n) 如果n=1,则ψ(n)=1 如果n是质数,则ψ(n)=n-1 如果n是质数p的次方,则：ψ(pk)=pk-p^(k-1) = p^k*(1-1/p) 若p1和p2互质,$n=p1p2$,则$ψ(n)= ψ(p1p2)= ψ(p1) ψ(p2)$ 任意一个大于1的正整数都可以写成一系列质数的积 根据定理5，推导欧拉定理： 因为 $n = (p1^{k1})\cdot (p2{k2})\cdot……(pr{kr})$(p1~pr都是质数) 所以 $\psi(n)= \psi((p1^{k1})) \psi(p2^{k2}) ……\psi(pr^{kr})$ 定理4 $\psi(n)= (p1^{k1})\cdot(1-\frac{1}{p1}) \cdot (p2{k2})(1-\frac{1}{p2})……(pr{kr})\cdot(1-\frac{1}{pr})$ 定理3 $\psi(n)= (p1^{k1})\cdot (p2{k2})\cdot……(pr{kr}) \cdot (1-\frac{1}{p1}) (1-\frac{1}{p2})…… (1-\frac{1}{pr})$ $\psi(n)=n (1-\frac{1}{p1}) (1-\frac{1}{p2})…… (1-\frac{1}{pr})$ 欧拉定理： 正整数a与n互质，则下式恒成立 $$a^{\psi(n)} \equiv {1(mod n)}$$ 即： a的ψ(n)次幂除以n,余数恒为1 模反元素 如果两个正整数a和n互质,则必定存在整数b使得a*b-1被n除余数为1 $$ab \equiv 1(mod n)$$ 其中b被称为a的模反元素 RSA算法详解： 假设A和B要通信 生成密钥 公钥 随机生成两个不相等的质数p和q(质数越大越安全) 计算n,n=p*q 则n的二进制位数就是密钥的长度。 计算n的欧拉函数ψ(n) 因为 $n=p \cdot q$ 所以 $\psi(n) =\psi§\cdot \psi(q)$ 定理4 又p和q为质数 所以 $\psi§=p-1$ 定理2 $\psi(q)=q-1$ 定理2 所以 $\psi(n) = (p-1)(q-1)$ 获取随机正整数e,e满足 e∈(1, ψ(n))且e与ψ(n)互质(通常选择65537) 将n和e封装成公钥 私钥 计算e对于ψ(n)的模反元素d $e*d=1(mod \psi(n))$; 设正整数k, $e*d = k\psi(n)+1$; 则$ed-k\psi(n)=1$ $d = (k\psi(n)+1) / e$; 对于不定方程$ax+by=c$，设$gcd(a,b)=d$，如果$ax+by=c$有解，则d|c-----&gt;也就是说如果$ed-k\psi(n)=1$ 有解,则gcd(d,-k)能够整除1,而1显然可以被任何整数整除,所以该二元一次方程必定有解(d,k) (欧几里得定理和扩展欧几里得定理计算二元一次方程) 将n和d封装成私钥 RSA算法可靠性论证 从上文可以统计出整个算法涉及到的量有6个，其中三个为由私钥持有者生成，三个是私钥持有者推导出来的 生成量：p,q,e 推导量：n, ψ(n),d 密钥中只有公钥被发布,所有人都可以获取。而公钥由n和e封装起来,因此,如果要破解一份RSA加密过的密文,我们必须使用私钥(私钥由n和d封装而成) n可以从公钥获取。 (假设mc为明文，c为密文，则公钥由n和e封装则意味着求取密文的运算中，n，e和mc是已知数，只有c是未知数；私钥由n和d封装，同上，解密密文的运算中，n，d和c是已知的，只有mc是未知数。) 因此,破解私钥的关键就是破解e对于ψ(n)的模反元素d。 其数学关系是： e*d=1(modψ(n)); 因此需需要先求出ψ(n),而求出ψ(n)需要知道ψ§和ψ(q)(因为ψ(n)= ψ(p* ψ(q)) 而p和q只能通过分解n的质因数获得。所以,整个RSA算法都基于n这个大数不能分解质因数这个基础上。 因此，只要n够大，私钥就不会被破解 加解密过程：假设明文是m,c是密文 加密：使用公钥(n,e) 先将其换算成asc码或者unicode等其他数值。且m必须小于n 则加密算法是 m^e=c(mod n) 推出 m^e / n = k ……c这里c就是密文，k我们不关心 解密：使用私钥(n,d) 简单的说解密就是通过下式求m。(一定可以求解出m) c^d = m(mod n) 推出 c^d / n = k … … m m就是明文编码，不关心k 查表得出明文 RSA算法签名与验签 假设A要想B发送消息，A会先计算出消息的消息摘要，然后使用自己的私钥加密这段摘要加密，最后将加密后的消息摘要和消息一起发送给B，被加密的消息摘要就是“签名”。 B收到消息后，也会使用和A相同的方法提取消息摘要，然后使用A的公钥解密A发送的来签名，并与自己计算出来的消息摘要进行比较。如果相同则说明消息是A发送给B的，同时，A也无法否认自己发送消息给B的事实。 其中，A用自己的私钥给消息摘要加密成为“签名”；B使用A的公钥解密签名文件的过程，就叫做“验签”。 数字签名的作用是保证数据完整性，机密性和发送方角色的不可抵赖性 下面是对签名和验签过程的简要描述： 签名过程： A计算消息m的消息摘要,记为 h(m) A使用私钥(n,d)对h(m)加密，生成签名s ,s满足： s=(h(m))^d mod n; 由于A是用自己的私钥对消息摘要加密，所以只用使用s的公钥才能解密该消息摘要，这样A就不可否认自己发送了该消息给B。 A发送消息和签名(m,s)给B。 验签过程： B计算消息m的消息摘要,记为h(m); B使用A的公钥(n,e)解密s,得到 H(m) = s^e mod n; B比较H(m)与h(m),相同则证明 总结 下面简单总结加密和解密的完整过程。 签名过程： A提取消息m的消息摘要h(m),并使用自己的私钥对摘要h(m)进行加密,生成签名s A将签名s和消息m一起,使用B的公钥进行加密,生成密文c,发送给B。 验证过程： B接收到密文c,使用自己的私钥解密c得到明文m和数字签名s B使用A的公钥解密数字签名s解密得到H(m). B使用相同的方法提取消息m的消息摘要h(m) B比较两个消息摘要。相同则验证成功;不同则验证失败。 java Demo EnAndDe.java package com.joe.main;import java.io.*;import java.math.BigInteger;import java.util.ArrayList;/** * &lt;p&gt; * Company: 建工学院 * &lt;/p&gt; * * @author 04信息（1）程晟 * @modify Joe * @Description Demo说明： * 1、按照加密解密和签名验签的逻辑,编写简单的demo,不涉及java中继承的RSA相关类和Sigesture签名类 * 2、只能对数字和字母进行加密, 不涉及编码和解码问题 。 3、不做数字签名和验证了,涉及到提取信息摘要。 */public class EnAndDe &#123; private long p = 0; private long q = 0; private long n = 0; private long t = 0; // 欧拉函数 private long e = 0; // 公匙 private long d = 0; // 密匙 private String mc; // 明文 private long c = 0; // 密文 private long word = 0; // 解密后明文 // 判断是一个数 x 否为素数素数就是判断在 (2,√x)范围内有没有除1外的因数,如果没有则x数素数 public boolean isPrime(long t) &#123; long k = 0; k = (long) Math.sqrt((double) t); for (int i = 2; i &lt;= k; i++) &#123; if ((t % i) == 0) &#123; return false; &#125; &#125; return true; &#125; // 随机产生大素数(1e6数量级，注意，太大了要超出范围) public void bigprimeRandom() &#123; do &#123; p = (long) (Math.random() * 1000000); &#125; while (!this.isPrime(p)); do &#123; q = (long) (Math.random() * 1000000); &#125; while (p == q || !this.isPrime(q)); &#125; // 输入PQ public void inputPQ() throws Exception &#123; this.bigprimeRandom(); System.out.println("自动生成两个大素数p,q分别为:" + this.p + " " + this.q); this.n = (long) p * q; this.t = (long) (p - 1) * (q - 1); System.out.println("这两个素数的乘积为p*q：" + this.n); System.out.println("所得的t=(p-1)(q-1)：" + this.t); &#125; // 求最大公约数 public long gcd(long a, long b) &#123; long gcd; if (b == 0) gcd = a; else gcd = gcd(b, a % b); return gcd; &#125; // 生成公匙 public void getPublic_key() throws Exception &#123; do &#123; this.e = (long) (Math.random() * 100000); // e满足 e∈(1, ψ(n))且e与ψ(n)最大公约数为1,即 e与t互质 &#125; while ((this.e &gt;= this.t) || (this.gcd(this.t, this.e) != 1)); System.out.println("生成的公钥为：" + "(" + this.n + "," + this.e + ")"); &#125; // 生成私钥 e*d=1(modψ(n))==&gt; d = (kψ(n)+1) / e public void getPrivate_key() &#123; long value = 1; // value 是e和d的乘积 outer: for (long k = 1;; k++) &#123; value = k * this.t + 1; if ((value % this.e == 0)) &#123; this.d = value / this.e; break outer; &#125; &#125; System.out.println("产生的一个私钥为：" + "(" + this.n + "," + this.d + ")"); &#125; // 输入明文 public void getText() throws Exception &#123; System.out.println("请输入明文："); BufferedReader stdin = new BufferedReader(new InputStreamReader( System.in)); mc = stdin.readLine(); &#125; // 解密密文 public void pascolum() throws Exception &#123; this.getText(); System.out.println("输入明文为: " + this.mc); // 加密 ArrayList cestr = new ArrayList(); for (int i = 0; i &lt; mc.length(); i++) &#123; this.c = this.colum((long) mc.charAt(i), this.n, this.e); cestr.add(c); &#125; System.out.println("加密后所得的密文为：" + cestr); // 解密 StringBuffer destr = new StringBuffer(); for (int j = 0; j &lt; cestr.size(); j++) &#123; this.word = this.colum(Long.parseLong(cestr.get(j).toString()), this.n, this.d); destr.append((char) word); &#125; System.out.println("解密后所得的明文为：" + destr); &#125; // 加密、解密计算 public long colum(long mc, long n, long key) &#123; BigInteger bigy = new BigInteger(String.valueOf(mc)); BigInteger bign = new BigInteger(String.valueOf(n)); BigInteger bigkey = new BigInteger(String.valueOf(key)); return Long.parseLong(bigy.modPow(bigkey, bign).toString());// 备注1 &#125; public static void main(String[] args) &#123; try &#123; EnAndDe t = new EnAndDe(); t.inputPQ(); t.getPublic_key(); t.getPrivate_key(); t.pascolum(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 备注1：modPow(a,b)是java类BigInteger中的一个方法，返回结果是：调用该方法的对象的a次幂,模b的结果]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-math]]></title>
    <url>%2F2015%2F11%2F16%2Fhexo-math%2F</url>
    <content type="text"><![CDATA[MathJax inline: Simple inline $a=b+c$. Simple inline $a=b+c$. MathJax Block: $$\frac&#123;\partial u&#125;&#123;\partial t&#125;= h^2 \left( \frac&#123;\partial^2 u&#125;&#123;\partial x^2&#125; +\frac&#123;\partial^2 u&#125;&#123;\partial y^2&#125; +\frac&#123;\partial^2 u&#125;&#123;\partial z^2&#125;\right)$$ $$\frac{\partial u}{\partial t} = h^2 \left( \frac{\partial^2 u}{\partial x^2} + \frac{\partial^2 u}{\partial y^2} + \frac{\partial^2 u}{\partial z^2}\right)$$ Tag: This equation &#123;% math %&#125;\cos 2\theta = \cos^2 \theta - \sin^2 \theta = 2 \cos^2 \theta - 1 &#123;% endmath %&#125; is inline. This equation $\cos 2\theta = \cos^2 \theta - \sin^2 \theta = 2 \cos^2 \theta - 1$ is inline. &#123;% math %&#125;\begin&#123;aligned&#125;\dot&#123;x&#125; &amp; = \sigma(y-x) \\\dot&#123;y&#125; &amp; = \rho x - y - xz \\\dot&#123;z&#125; &amp; = -\beta z + xy\end&#123;aligned&#125;&#123;% endmath %&#125; $$\begin{aligned} \dot{x} &amp; = \sigma(y-x) \\ \dot{y} &amp; = \rho x - y - xz \\ \dot{z} &amp; = -\beta z + xy \end{aligned}$$]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搬家]]></title>
    <url>%2F2015%2F11%2F02%2Flife-move%2F</url>
    <content type="text"><![CDATA[周六,搬家到铁建广场,兴奋 (lèi de) 难眠,周日逛了一上午华贸品超市,你好北苑 (zài jiàn xī yuàn) !]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[油猴脚本]]></title>
    <url>%2F2015%2F10%2F23%2Fweb-js-userscript%2F</url>
    <content type="text"><![CDATA[wiki : http://wiki.greasespot.net/Metadata_Block 中文 : https://github.com/JixunMoe/gmDevBook 在chrome中利用“油猴”为每个网页增加“返回顶部”功能 http://userscripts-mirror.org/ 一些我使用和开发的油猴脚本 以下内容安装油猴脚本后可见: http://2le.me/static/blog_userscript.user.js]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>油猴</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python VideoCapture]]></title>
    <url>%2F2015%2F10%2F14%2Fpython-VideoCapture%2F</url>
    <content type="text"><![CDATA[环境 win10(64),python2.7 下载安装VideoCapture 官网:http://videocapture.sourceforge.net/ 百度云:http://pan.baidu.com/s/1eQBDqJw 解压VideoCapture,将pythonXX覆盖python安装目录 官方提供了一个拍照例子: from VideoCapture import Deviceif __name__ == "__main__": cam = Device() cam.saveSnapshot('image.jpg') 下载安装PIL 官网:http://www.pythonware.com/products/pil/ 百度云:http://pan.baidu.com/s/1pJEIFYb 只找到了32位的,安装后报错 ImportError: The _imaging C module is not installed http://www.lfd.uci.edu/~gohlke/pythonlibs/#pillow查找pillow,pil的替代软件,下载对应64位版本whl文件 通过pip安装 pip install xxx.whl 安装pip参考Windows下Python,setuptools,pip,virtualenv的安装 接着报错: Traceback (most recent call last): File “C:\Users\bl\Desktop\python\cam (2).py”, line 4, in cam.saveSnapshot(‘image.jpg’) File “D:\bl\app\Python27\lib\VideoCapture.py”, line 200, in saveSnapshot self.getImage(timestamp, boldfont, textpos).save(filename, **keywords) File “D:\bl\app\Python27\lib\VideoCapture.py”, line 138, in getImage im = Image.fromstring(‘RGB’, (width, height), buffer, ‘raw’, ‘BGR’, 0, -1) File “D:\bl\app\Python27\lib\site-packages\PIL\Image.py”, line 2053, in fromstring &quot;Please call frombytes() instead.&quot;) Exception: fromstring() has been removed. Please call frombytes() instead. 明显找到fromstring方法改成frombytes 执行VideoCapture官方例子会调用本地摄像头抓取图片保存到image.jpg 参考:python的50个模块满足你各种需求]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软件收集]]></title>
    <url>%2F2015%2F10%2F14%2Fsoftware-collect%2F</url>
    <content type="text"><![CDATA[windows增强 软件 地址 描述 QTTabBar 官网 百度云 clover 官网 百度云 win10卡顿 onenote代码高亮 百度云 cmdMarkdown 百度云 qTox 百度云 babun 百度云 BeyondCompare 百度云 calibre 百度云 cygwin 百度云 emacs 百度云 whois 百度云]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[圆明园]]></title>
    <url>%2F2015%2F09%2F26%2Flife-yuanmingyuan%2F</url>
    <content type="text"><![CDATA[中秋节前夕,圆明园散步]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>摄影</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win7安装maven nexus]]></title>
    <url>%2F2015%2F09%2F02%2Fjava-maven-nexus-install%2F</url>
    <content type="text"><![CDATA[下载 官网最新版(可能被墙) 百度云:nexus-latest-bundle.zip(2.6.4-02) 解压 解压后俩文件夹nexus-x.x.x-xx,sonatype-work,将nexus-x.x.x-xx/bin加到环境变量 安装 cmd下执行nexus install 报错 wrapper | OpenSCManager failed - 拒绝访问。 (0x5) 以管理员身份运行cmd 临时:右键-&gt;以管理员身份运行 nexus 永久:开始-&gt;命令提示符-&gt;属性-&gt;快捷方式-&gt;高级-&gt;用管理员身份运行 nexus 启动 cmd下执行nexus start仍然报错 控制台 wrapper | Starting the nexus service… wrapper | The nexus service was launched, but failed to start. 请按任意键继续. . . 日志 wrapper | Unable to execute Java command. 系统找不到指定的文件。 (0x2) wrapper | “java” -Djava.io.tmpdir=./tmp -Djava.net.preferIPv4Stack=true wrapper | Critical error: wait for JVM process failed wrapper | The nexus service was launched, but failed to start. 解决 nexus-x.x.x-xx/bin/jsw/conf/wrapper.conf # Set the JVM executable# (modify this to absolute path if you need a Java that is not on the OS path)wrapper.java.command=C:\Program Files\Java\jre\bin\java.exe 使用 访问地址http://localhost:8081/nexus 用户名admin密码admin123]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>maven</tag>
        <tag>nexus</tag>
        <tag>sonatype</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win7激活程序]]></title>
    <url>%2F2015%2F08%2F28%2Fsystem-win7-active%2F</url>
    <content type="text"><![CDATA[联想L430安装Windows_7_RTM_7600.16385_x64_CN_DVD.iso使用n中方法激活无果，最后下载WIN7_激活程序.exe成功激活！]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>win7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[苏宁团建活动]]></title>
    <url>%2F2015%2F08%2F22%2Flife-langhushao%2F</url>
    <content type="text"><![CDATA[21日入职苏宁第三天七夕第二天怀柔狼虎哨村团建活动]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python的50个模块满足你各种需求]]></title>
    <url>%2F2015%2F06%2F05%2Fpython-50-modules%2F</url>
    <content type="text"><![CDATA[Python具有强大的扩展能力，我列出了50个很棒的Python模块，包含几乎所有的需要：比如Databases，GUIs，Images, Sound, OS interaction, Web,以及其他。推荐收藏。 模块 地址 Graphical interface wxPython http://wxpython.org Graphical interface pyGtk http://www.pygtk.org Graphical interface pyQT http://www.riverbankcomputing.co.uk/pyqt/ Graphical interface Pmw http://pmw.sourceforge.net/ Graphical interface Tkinter 3000 http://effbot.org/zone/wck.htm Graphical interface Tix http://tix.sourceforge.net/ Database MySQLdb http://sourceforge.net/projects/mysql-python Database PyGreSQL http://www.pygresql.org/ Database Gadfly http://gadfly.sourceforge.net/ Database SQLAlchemy http://www.sqlalchemy.org/ Database psycopg http://www.initd.org/pub/software/psycopg/ Database kinterbasdb http://kinterbasdb.sourceforge.net/ Database cx_Oracle http://www.cxtools.net/default.aspx?nav=downloads Database pySQLite http://initd.org/tracker/pysqlite MSN Messenger msnlib http://auriga.wearlab.de/~alb/msnlib/ MSN Messenger pymsn http://telepathy.freedesktop.org/wiki/Pymsn MSN Messenger msnp http://msnp.sourceforge.net/ Network Twisted http://twistedmatrix.com/ Images PIL http://www.pythonware.com/products/pil/ Images gdmodule http://newcenturycomputers.net/projects/gdmodule.html Images VideoCapture http://videocapture.sourceforge.net/ Sciences and Maths scipy http://www.scipy.org/ Sciences and Maths NumPy http://numpy.scipy.org/ Sciences and Maths numarray http://www.stsci.edu/resources/software_hardware/numarray Sciences and Maths matplotlib http://matplotlib.sourceforge.net/ Games Pygame http://www.pygame.org/news.html Games Pyglet http://www.pyglet.org/ Games PySoy http://www.pysoy.org/ Games pyOpenGL http://pyopengl.sourceforge.net/ Jabber jabberpy http://jabberpy.sourceforge.net/ Web scrape http://zesty.ca/python/scrape.html Web Beautiful Soup http://crummy.com/software/BeautifulSoup Web pythonweb http://www.pythonweb.org/ Web mechanize http://wwwsearch.sourceforge.net/mechanize/ Localisation geoname.py http://www.zindep.com/blog-zindep/Geoname-python/ Serial port pySerial http://pyserial.sourceforge.net/ Serial port USPP http://ibarona.googlepages.com/uspp Parallel Port pyParallel http://pyserial.sourceforge.net/pyparallel.html USB Port pyUSB http://bleyer.org/pyusb/ Windows ctypes http://starship.python.net/crew/theller/ctypes/ Windows pywin32 http://sourceforge.net/projects/pywin32/ Windows pywinauto http://www.openqa.org/pywinauto/ Windows pyrtf http://pyrtf.sourceforge.net/ Windows wmi http://timgolden.me.uk/python/wmi.html PDA/GSM/Mobiles pymo http://www.awaretek.com/pymo.html PDA/GSM/Mobiles pyS60 http://sourceforge.net/projects/pys60 Sound pySoundic http://pysonic.sourceforge.net/ Sound pyMedia http://pymedia.org/ Sound FMOD http://www.fmod.org/ Sound pyMIDI http://www.cs.unc.edu/Research/assist/developer.shtml GMail libgmail http://libgmail.sourceforge.net/ Google pyGoogle http://pygoogle.sourceforge.net/ Expect pExpect http://pexpect.sourceforge.net/ WordNet pyWordNet http://osteele.com/projects/pywordnet/ Command line cmd http://blog.doughellmann.com/2008/05/pymotw-cmd.html Compiler backend llvm-py http://mdevan.nfshost.com/llvm-py/ 3D VPython http://vpython.org]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress新站需要修改的7个代码]]></title>
    <url>%2F2015%2F06%2F05%2Fphp-wordpress-new-guide%2F</url>
    <content type="text"><![CDATA[修改默认登录logo function custom_login_logo() &#123; echo '&lt;style type="text/css"&gt; h1 a &#123; background-image:url('.get_bloginfo('template_directory').'/images/login_logo.png) !important; &#125; &lt;/style&gt;'; &#125; add_action('login_head', 'custom_login_logo'); 预览模式下取消google分析自动运行 if( !is_preview()): # Google Analytics Code # endif; 激活小工具段代码 add_filter('widget_text', 'do_shortcode'); 启用网站维护模式 function maintenace_mode() &#123; if ( !current_user_can( 'administrator' ) ) &#123; wp_die('The site will be up soon.'); &#125; &#125; add_action('get_header', 'maintenace_mode'); 取消更新通知 if ( !current_user_can('administrator') ) &#123; add_action( 'init', create_function( '$a', "remove_action( 'init', 'wp_version_check' );" ), 2 ); add_filter( 'pre_option_update_core', create_function( '$a', "return null;" ) ); &#125; 取消自我追踪 function disable_self_ping( &amp;$links ) &#123; foreach ( $links as $l =&gt; $link ) if ( 0 === strpos( $link, get_option( 'home' ) ) ) unset($links[$l]); &#125; add_action( 'pre_ping', 'disable_self_ping' ); 自定义可是编辑器css $your_custom_stylesheet = 'css/custom-editor-style.css'; add_editor_style($your_custom_stylesheet);]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[myeclipse垃圾回收箱设置]]></title>
    <url>%2F2015%2F03%2F26%2Fjava-eclipse-recycle%2F</url>
    <content type="text"><![CDATA[MyEclipse垃圾箱设置 找到你的MyEclipse的工作空间。路径：&lt;workspace&gt;/.metadata/.plugins/org.eclipse.core.runtime/.settings 用记事本或写字板打开org.eclipse.ui.prefs添加：SHOW_MEMORY_MONITOR=true 重启MyEclipse就会看到下面有个小垃圾箱。这个是用来释放MyEclipse内存用的。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oracle视图传参数]]></title>
    <url>%2F2014%2F09%2F25%2Fdb-oracle-view-vars%2F</url>
    <content type="text"><![CDATA[创建包 create or replace package p_view_param is function set_param(num number) return number; function get_param return number; end p_view_param; create or replace package body p_view_param is paramValue number; function set_param(num number) return number is begin paramValue:=num; return num; end; function get_param return number is begin return paramValue; end; end p_view_param; 创建视图 create or replace view p_view_user as select id,realName,address from tbl_info where id=p_view_param.get_param(); PL/SQL调用 select * from p_view_user where p_view_param.set_param(2781)=2781]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CONNECT BY 行转列]]></title>
    <url>%2F2014%2F09%2F25%2Fdb-oracle-connect-by%2F</url>
    <content type="text"><![CDATA[SELECT max(a) FROM (SELECT sys_connect_by_path(outer_name,' ') a FROM (SELECT * FROM Sys_Io_Table_Column t where t.table_id = '00000000000000000526512180550341') START WITH NO = 1 CONNECT BY NO = PRIOR NO+1)]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[删除unicode空格]]></title>
    <url>%2F2014%2F09%2F12%2Fjava-del-unicode-space%2F</url>
    <content type="text"><![CDATA[&lt;script&gt; alert('unicode空格-&gt; &lt;-'.match(/^S+$/)); alert('普通空格-&gt; &lt;-'.match(/^S+$/)); if('删unicode空格-&gt; '.charCodeAt('删unicode空格-&gt; '.length-1) == 160)&#123; alert('111 '.substr(0,'111 '.length-1)+""); &#125; &lt;/script&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[alert]]></title>
    <url>%2F2014%2F09%2F12%2Fweb-js-alert%2F</url>
    <content type="text"><![CDATA[&lt;script&gt; //改写alert window.alert = function(txt) &#123; var shield = document.createElement("DIV"); shield.id = "shield"; shield.style.position = "absolute"; shield.style.left = "0px"; shield.style.top = "0px"; shield.style.width = "100%"; shield.style.height = document.body.scrollHeight+"px"; shield.style.background = "#333"; shield.style.textAlign = "center"; shield.style.zIndex = "10000"; shield.style.filter = "alpha(opacity=0)"; var alertFram = document.createElement("DIV"); alertFram.id="alertFram"; alertFram.style.position = "absolute"; alertFram.style.left = "50%"; alertFram.style.top = "50%"; alertFram.style.marginLeft = "-225px"; alertFram.style.marginTop = "-75px"; alertFram.style.width = "450px"; alertFram.style.height = "150px"; alertFram.style.background = "#ccc"; alertFram.style.textAlign = "center"; alertFram.style.lineHeight = "150px"; alertFram.style.zIndex = "10001"; strHtml = "&lt;ul style="list-style:none;margin:0px;padding:0px;width:100%"&gt;n"; strHtml += " &lt;li style="background:#DD828D;text-align:left;padding-left:20px;font-size:14px;font-weight:bold;height:25px;line-height:25px;border:1px solid #F9CADE;"&gt;[倍儿忙网系统提示]&lt;/li&gt;n"; strHtml += " &lt;li style="background:#fff;text-align:center;font-size:12px;height:120px;line-height:120px;border-left:1px solid #F9CADE;border-right:1px solid #F9CADE;"&gt;"+txt+"&lt;/li&gt;n"; strHtml += " &lt;li style="background:#FDEEF4;text-align:center;font-weight:bold;height:25px;line-height:25px; border:1px solid #F9CADE;"&gt;&lt;input type="button" value="确 定" onclick="doOk()" /&gt;&lt;/li&gt;n"; strHtml += "&lt;/ul&gt;n"; alertFram.innerHTML = strHtml; document.body.appendChild(alertFram); document.body.appendChild(shield); var c = 0; this.doAlpha = function()&#123; if (c++ &gt; 20)&#123;clearInterval(ad);return 0;&#125; shield.style.filter = "alpha(opacity="+c+");"; &#125; var ad = setInterval("doAlpha()",5); this.doOk = function()&#123; alertFram.style.display = "none"; shield.style.display = "none"; &#125; alertFram.focus(); document.body.onselectstart = function()&#123;return false;&#125;; &#125; &lt;/script&gt; &lt;div class="grsz_bottomyuan"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="main_right"&gt; &lt;script&gt; function chkpwd()&#123; if(document.getElementById('title').value=="")&#123; alert('标题不能为空'); return false; &#125;else if(document.getElementById('up_changeimg').value=="")&#123; alert('图片上传不能为空'); return false; &#125; &#125; &lt;/script&gt; &lt;div class="basic_biaoqian"&gt; &lt;a href="http://192.168.0.10"&gt;倍儿忙网&lt;/a&gt;&amp;nbsp;&gt;&amp;nbsp;&lt;a href="http://192.168.0.10/cp.php?do=control"&gt;个人设置&lt;/a&gt;&amp;nbsp;&gt;&amp;nbsp;&lt;a href="http://192.168.0.10/cp.php?do=control&amp;op=changeimg"&gt;图片轮换&lt;/a&gt; &lt;/div&gt; &lt;form action="http://192.168.0.10/cp.php?do=control&amp;op=changeimg" enctype="multipart/form-data" method="post" name="form_img" id="form_img" onsubmit="return chkpwd();"&gt; &lt;div class="grsz_contant emial_contant"&gt; &lt;div class="emial lunbojieshi"&gt; &lt;div class="lunbo_title"&gt; 使用必读: &lt;/div&gt; &lt;div class="lunbo_zizi"&gt; 1.请填写您想展示的信息标题。&lt;br /&gt; 2.请填写此信息的地址，务必为站内地址，否则将不予审核。&lt;br /&gt; 3.图片大小限制为400*300像素的jpg或gif图片。【图片制作指南】&lt;br /&gt; 4.你所提交的广告图片钭在24小时之内 审核，审核结果将通过站内信息告知您&lt;br /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="lunhun_ming"&gt; &lt;div class="nicheng"&gt; &lt;div class="username c"&gt;标题： &lt;/div&gt; &lt;div class="web"&gt; &lt;input type="text" name="title" id="title" value="" class="grsz_wek qianming biankuang"/&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="nicheng"&gt; &lt;div class="username c"&gt;链接： &lt;/div&gt; &lt;div class="web"&gt; &lt;input type="text" name="url" id="url" value="http://" class="grsz_wek qianming biankuang" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="nicheng"&gt; &lt;div class="username c"&gt;图片： &lt;/div&gt; &lt;div class="web"&gt; &lt;input type="file" name="up_changeimg" value="" id="up_changeimg" class="lunhuan_youlan biankuang"/&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="basic_bar"&gt; &lt;input type="submit" name="savesubmit" id="savesubmit" class="bar" value="确 认"/&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Math.uuid]]></title>
    <url>%2F2014%2F09%2F12%2Fweb-js-uuid%2F</url>
    <content type="text"><![CDATA[Math.uuid = (function() &#123; // Private array of chars to use var CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' .split(''); return function(len, radix) &#123; var chars = CHARS, uuid = [], rnd = Math.random; radix = radix || chars.length; if (len) &#123; // Compact form for ( var i = 0; i &lt; len; i++) uuid[i] = chars[0 | rnd() * radix]; &#125; else &#123; // rfc4122, version 4 form var r;// rfc4122 requires these characters uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-'; uuid[14] = '4';// Fill in random data. At i==19 set the high bits of clock sequence as // per rfc4122, sec. 4.1.5 for ( var i = 0; i &lt; 36; i++) &#123; if (!uuid[i]) &#123; r = 0 | rnd() * 16; uuid[i] = chars[(i == 19) ? (r &amp; 0x3) | 0x8 : r &amp; 0xf]; &#125; &#125; &#125; return uuid.join(''); &#125;; &#125;)();// Deprecated - only here for backward compatability function UUID() &#123; return Math.uuid(); &#125;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ORACLE 创建视图时,提示用户权限不足]]></title>
    <url>%2F2014%2F03%2F25%2Fdb-oracle-grant%2F</url>
    <content type="text"><![CDATA[首先使用system帐户进行登录 sqlplus system/pwd[@DB] 然后执行： grant create any view to scott 提示：授权成功。 执行： exit 退出当前system帐户。]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[启动tomcat报java.lang.NoClassDefFoundError: javax/el/ExpressionFactory]]></title>
    <url>%2F2014%2F03%2F25%2Fjava-tomcat-java-lang-NoClassDefFoundError-javax-el-ExpressionFactory%2F</url>
    <content type="text"><![CDATA[java.lang.NoClassDefFoundError: javax/el/ExpressionFactory异常 如果你按照以上目录发布工程，抛出以下异常： java.lang.NoClassDefFoundError: javax/el/ExpressionFactory 或打开页面后显示： HTTP Status 404 – /xxx/xxx 报404错误 Tomcat/5.5.17 则将javaee.jar包再copy一份放在tomcat目录的common\lib下就不会了。 关于用到的javaee.jar、jsf-api.jar、jsf-impl.jar、jstl-1.2.jar这四个包可以通过myeclipse中获得， 如果你安装了myeclipse5.5的话，我安装的是MyEclipse，这四个包的所在的目录是：MyEclipse\myeclipse\eclipse\plugins\com.genuitec.eclipse.j2eedt.core_6(目录下)\data\libraryset\EE_5]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux配置环境变量]]></title>
    <url>%2F2014%2F03%2F25%2Flinux-env-vars%2F</url>
    <content type="text"><![CDATA[\#vi /etc/profile 在该profile文件中添加： JAVA_HOME=/usr/java/jdk1.6.0_10 JRE_HOME=/usr/java/jdk1.6.0_10/jre PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin CLASSPATH=.:$JAVA_HOME/lib/jt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib(注意：前面的.: ，linux中的；号为：号) export JAVA_HOME JRE_HOME PATH CLASSPATH 添加完毕保存退出 \#source /etc/profile]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>环境变量</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oracle sql整理]]></title>
    <url>%2F2014%2F03%2F25%2Fdb-oracle-sql%2F</url>
    <content type="text"><![CDATA[oracle 分页查询 SELECT * FROM ( SELECT A.*, ROWNUM RN FROM ([sql语句]) A WHERE ROWNUM &lt;= [lineSize*currentPage] ) WHERE RN &gt;=[((currentPage-1)*lineSize+1)]; WITH t AS (SELECT ‘remoteAddr:10.176.27.94,protocol:HTTP/1.1,localAddr:10.176.27.94,mac:44-37-E6-86-C4-6A,Cookie:%2Fclient6%2F=1361081051064;logoin=1361081051064;’ id FROM dual), t1 AS (SELECT REPLACE(id, ‘logoin=’, ‘logoin:’) id1 FROM t), t2 AS (SELECT ’1′ num0, rownum num1, regexp_substr(id1, ‘[^,|;|:]+’, 1, LEVEL) t1a FROM t1 CONNECT BY LEVEL &lt;= regexp_count(id1, ‘,’) + regexp_count(id1, ‘;’) + regexp_count(id1, ‘:’)) SELECT * FROM t2 pivot(MAX(t1a) FOR num1 IN( 2 remoteaddr, 4 protocol, 6 localaddr, 8 mac, 10 cookie,12 logoin)) oracle 正则表达式 关键字REGEXP_SUBSTR SELECT REGEXP_SUBSTR(‘在#12d’, ‘#[[:digit:]]+’) FROM DUAL 参考：http://www.jb51.net/article/31227.htm]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[查询本月天数]]></title>
    <url>%2F2014%2F03%2F25%2Fdb-oracle-get-month-days%2F</url>
    <content type="text"><![CDATA[SELECT ROWNUM rn FROM DUAL CONNECT BY ROWNUM &lt;= TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, 1), ‘mm’) – 1, ‘dd’)]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle trunc()函数的用法]]></title>
    <url>%2F2014%2F03%2F25%2Fdb-oracle-trunc%2F</url>
    <content type="text"><![CDATA[/**************日期********************/ select trunc(sysdate) from dual –2011-3-18 今天的日期为2011-3-18 select trunc(sysdate, ‘mm’) from dual –2011-3-1 返回当月第一天. select trunc(sysdate,’yy’) from dual –2011-1-1 返回当年第一天 select trunc(sysdate,’dd’) from dual –2011-3-18 返回当前年月日 select trunc(sysdate,’yyyy’) from dual –2011-1-1 返回当年第一天 select trunc(sysdate,’d’) from dual –2011-3-13 (星期天)返回当前星期的第一天 select trunc(sysdate, ‘hh’) from dual –2011-3-18 14:00:00 当前时间为14:41 select trunc(sysdate, ‘mi’) from dual –2011-3-18 14:41:00 TRUNC()函数没有秒的精确 /***************数字********************/ /* TRUNC（number,num_digits） Number 需要截尾取整的数字。 Num_digits 用于指定取整精度的数字。Num_digits 的默认值为 0。 TRUNC()函数截取时不进行四舍五入 */ select trunc(123.458) from dual –123 select trunc(123.458,0) from dual –123 select trunc(123.458,1) from dual –123.4 select trunc(123.458,-1) from dual –120 select trunc(123.458,-4) from dual –0 select trunc(123.458,4) from dual –123.458 select trunc(123) from dual –123 select trunc(123,1) from dual –123 select trunc(123,-1) from dual –120]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>trunc</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux(red hat 5)卸载自带java1.4]]></title>
    <url>%2F2014%2F03%2F25%2Flinux-rh-unstall-java1-4%2F</url>
    <content type="text"><![CDATA[1.打开终端输入#rpm -qa | grep gcj ，其显示内容有： java-1.4.2-gci-compat……… java-1.4.2-gcj-compat-devel……(具体忘了是什么了，反正有两个java开头的文件) 2.卸载 '#rpm -e –nodeps java-1.4.2-gci…` (利用rpm -e –nodeps 命令删除上面查找的内容) 此时jdk1.4已被卸了。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>red hat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[优化Java堆大小的5个技巧]]></title>
    <url>%2F2013%2F08%2F20%2Fjava-heap%2F</url>
    <content type="text"><![CDATA[本文作者Pierre是一名有10多年经验的高级系统架构师，他的主要专业领域是Java EE、中间件和JVM技术。根据他多年的工作实践经验，他发现许多性能问题都是由Java堆容量不足和调优引起的。下面他将和大家分享非常实用的5个Java堆优化技巧。 1.JVM：对难以理解的东西产生恐惧感 千万不要以为，通过配置，调优，就可以排除那些你所不明白的问题。有些人认为Java程序员不需要知道内部JVM内存管理。毫无疑问，这种观点明显是错误的，如果想拓宽知识面和提升排除故障能力，你就必须要了解和学习一下JVM内存管理。 对于Java或者是Java EE新手来说，Java Heap调优和故障排除是一项非常有挑战的工作。下面会提供一些典型的案例场景： 客户端环境面临着有规律的OutOfMemoryError错误并且对业务造成了很大的影响。 你的开发团队要在如此大的压力下去解决这个问题，通常会怎么做？ 用谷歌搜索引擎找到类似的问题并且你会相信（或假设）你也面临同样的问题。 你会抓住JVM-Xms和存在OutOfMemoryError异常这几个关键字的例子，然后希望通过这样的案例来快速解决客户端问题。 最后你会在你环境中使用相同的调优方法。两天后，问题仍然发生（甚至更糟或者稍微好点）…… 到底是哪里错了呢？ 首先，没有摸清问题根源所在？对开发环境没有正确地进行深层面（规格、负载情况等）理解。网络搜索是一个非常优秀的学习方法和知识分享工具，但是你必须结合自己的实际项目，从根本上进行分析解决。 可能缺乏基本的JVM和JVM内存管理技能，阻止你把所有的点给连接起来。 今天讲的第一条技巧是帮助你理解基本的JVM原则及其与众不同的内存空间。这些知识都是相当重要的，它可以帮助你做出有效的调优策略、更加正确合理的预测将来会产生的影响、提前知道未来需要做哪些调优工作。下面来看一下JVM参考指南： JVM内存分为3个内存空间 Java Heap：适用于所有的JVM厂商，通常用来拆分YoungGen（幼苗）和OldGen（终身享用）空间。 PermGen（永久代）：适用于Sun HotSpot VM（(PermGen空间在Java7或者Java8更新中将会被删除） Native Heap（C-Heap）：适用于所有的JVM厂商。 建议把下面的文章都能看一遍，最好把Sun的Java内存管理白皮书和OpenJDKS实现下载下来并仔细阅读。 Sun HotSpot VM IBM VM Oracle JRockit VM Sun(Oracle)–Java memory management white paper OpenJDK–Open-source Java implementation 正如你所看到的，JVM内存管理比使用Xmx设置最大值更为复杂。你需要查看每个角度，包括本地和PermGen需求以及从主机上查看物理内存可用性（CPU core）。 在较大的Java Heap和较小的本地Heap比赛中，32位虚拟机可能会变得相当棘手。试图在一个32位VM如2.5GB+上设置一个大型堆，根据应用程序占用和线程数量等因素会增加OutOfMemoryError这个异常抛出。64位JVM可以解决这个问题，但物理资源可用性和垃圾回收成本仍然是有限制的（成本主要集中在GC大小收集上）。最大并不表示是最好的，所以请不要假设在一个16GB的64位虚拟机上可以运行20个Java EE应用程序。 2.数据和应用程序为王：回顾静态占用需求 应用程序以及相关数据将决定Java堆空间占用需求。通过静态内存，可“预测”下面的内存需求： 确定将会有多少不同的应用程序部署到预先计划的一个单独的JVM进程上，例如有多少个ear文件、war文件、jar文件等。在一个JVM上部署的应用程序越多，对本机堆的需求就越多。 确定有多少个类需要在运行时加载：包括第三方API。越多的类加载器和类在运行时被加载，在HotSpot VM PermGen空间和内部JIT相关优化对象上的需求就越高。 确定数据缓存占用，如应用程序加载内部缓存数据结构（和第三方API），例如数据库中的数据缓存，从文件中读取数据等。数据缓存使用越多，Java Heap OldGen空间需求就越高。 确定允许建立的中间件线程数量。这是非常重要的，因为Java线程需要足够的本机内存，否则会抛OutOfMemoryError异常。 在JVM进程上部署的应用程序越多，对本地内存和PermGen空间的要求就越高。数据缓存并不是序列化为一个磁盘或数据库，它将从OldGen空间里面需要额外的内存。 设法对静态内存占用进行合理的评估，在真正进行数据测试之前，设置一些JVM能力起点是非常有用的。对于32位JVM,通常不推荐一个Java堆大小超过2 GB(-Xms2048m,-Xmx2048m)，对于Java EE应用程序和线程来说这样将需要足够的内存和本机堆PermGen。 这个评估是非常重要因为太多的应用程序部署在一个32位JVM进程上很容易导致本机堆耗尽；尤其是在多重线程环境。 对于64位JVM， 一个3GB或者4GB的Java堆/JVM进程是推荐的起点。 3.业务流量设置规则：审查动态内存占用需求 业务流量通常会决定动态内存占用。通过观察各种监控工具可以发现并发用户与请求生成的JVM GC“心跳”，这是由于频繁的创建和垃圾回收短期或者长期对象。 一个典型的32位JVM，Java堆大小设置在2 GB(使用分代&amp;并发收集器)通常为500 MB YoungGen分配空间和1.5 GB的OldGen空间。 最大限度地减少重大GC收集的频率是获得最佳性能的关键因素，所以在高峰的时候理解和评估需要多少内存是非常重要的。 再次声明，应用程序类型和数据将决定内存需求。购物车的应用程序类型（长期居住的对象）涉及大型和非序列化会话数据，这个通常需要大型Java堆和很多OldGen空间。无状态和XML处理（很多短命的对象）繁重的应用程序需要适当YoungGen空间，以尽量减少频率主要集合。 例如： 你有5个ear应用程序（2000多个Java类）要部署（包含中间件代码） 本地堆需求估计为1GB（必须足够大以处理线程创建等等。）PermGen空间大约是512 MB。 内部静态缓存大约500MB 在高峰时间，总预测流量是5000个并发用户 每个用户的会话数据大约500K 在高峰期间，总流量会话要求是2.5GB。 正如你所看到的一样，在如此情况下，32位JVM进程就无法满足。一个典型的解决方案是进行流量拆分，在几个JVM进程或物理主机（假设有足够的硬件和CPU core可用）上。 大多数时候，业务流量将推动内存占用。除非你需要大量的数据缓存来实现适当的性能，典型的门户应用网站（媒体）繁重的应用程序需求。数据缓存太多的时候应该用一个黄色的标志标注一下，最好早点去重新审视一下一些设计元素。 4.量体裁衣 这一条，你应该做到： 理解基本的JVM原则和内存空间。 对所有应用程序有深入的了解及其它们的特点（大小、类型、动态流量、无状态对象VS有状态对象、内部内存缓存等）。 对预测业务流量（并发用户）给每一个应用程序能提出很好的观点—如果你需要一个64位的虚拟内存，那么将设置哪个作为开始。 如果需要多个JVM（中间件）过程。 等一下，这样做并不足够。虽然上面的信息是至关重要的，并且关于Java堆的设置进行了“最佳猜测”，对应用程序的行为进行模拟并且进行适当的分析、负载和性能测试来验证Java堆内存要求。 推荐Jprofiler工具给大家，学习如何使用一个分析器的最好方法是正确理解应用程序的内存占用。另一个方法是使用Eclipse MAT工具根据现有的环境进行堆转储分析。堆转储非常强大，它可以允许你查看和理解Java堆的整个内存占用，包含类加载器相关数据和在内存占用分析中必须要做的，特别是内存泄漏。 Java分析器和堆转储分析工具允许你理解和验证应用程序内存足迹，包含内存泄漏的检测和解决方案。负载测试和性能测试是必不可少的，通过模拟并发用户来验证早期评估是否正确，它也会把应用程序瓶颈暴露出来并且允许你进行微调。推荐一个非常容易上手的工具：Apache Jmeter。 最后将看一下这样的情况，应用程序在Java EE环境非常正常，直到有一天完全正常的设备启动失败，例如硬件问题。突然的环境运行能力下降和整体环境下降，到底发生了什么？ 引起“多米诺效应”的原因有很多，但缺少JVM调优和处理故障转移的能力（短期额外负荷）是很常见的。如果JVM进程运行在80% + OldGen空间容量和频繁的垃圾收集,你如何预期故障转移场景? 前面模拟的负载和性能测试应该模拟这样的场景，调整你的调优设置使您的Java堆有足够的缓冲来处理额外的负载(额外的对象)在短期内。这主要适用于动态内存占用，由于故障转移意味着将重定向一些固定的并发用户给可利用的JVM进程（中间件实例）。 5.分而治之 这一条的前提是你已经完成了几十个负载测试。JVM已经不存在泄露，你的应用程序内存不能再进行任何减少。你已经尝试了几个调优策略，例如使用一个64位的Java堆空间在10GB以上。多个GC策略，尽管这样，仍然没有找到合适的可以接受的性能水平？ 与当前的JVM规范相比，适当的垂直和水平伸缩，包括在每个物理主机和跨多个主机上建立JVM进程来满足整个吞吐量和容量。如果在几个逻辑仓、自身的JVM进程、线程和调优值里打破应用程序列表那么IT环境的容错能力将更强大。 “分而治之”策略包括拆分应用程序流量到多个JVM进程，下面提供一些拆分技巧： 减少每个JVM进程的Java堆大小（静态和动态的占用） 降低JVM调优复杂度。 减少GC流失和暂停每个JVM进程 增加冗余和故障切换功能 排列最新的Cloud和IT虚拟化战略 当你发现已经花费了大量的时间在64位JVM进程调优上，是时候该好好审视一下你的中间件和JVM部署策略并且利用垂直和水平缩放。这条策略的实现需要更多的硬件支持，但是从长远角度来看，是非常有效和有益的。（张红月/编译） 原文链接：5 Tips for Proper Java Heap Size]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>heap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[视觉直观感受7种常用的排序算法]]></title>
    <url>%2F2013%2F05%2F08%2Fjava-sorting-algorithm%2F</url>
    <content type="text"><![CDATA[快速排序 介绍： 快速排序是由东尼·霍尔所发展的一种排序算法。在平均状况下，排序 n 个项目要Ο(n log n)次比较。在最坏状况下则需要Ο(n2)次比较，但这种状况并不常见。事实上，快速排序通常明显比其他Ο(n log n) 算法更快，因为它的内部循环（inner loop）可以在大部分的架构上很有效率地被实现出来，且在大部分真实世界的数据，可以决定设计的选择，减少所需时间的二次方项之可能性。 步骤： 从数列中挑出一个元素，称为 “基准”（Pivot）， 重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。 递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。 ##排序效果： sort 归并排序 介绍： 归并排序（Merge sort，台湾译作：合并排序）是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用 步骤： 申请空间，使其大小为两个已经排序序列之和，该空间用来存放合并后的序列 设定两个指针，最初位置分别为两个已经排序序列的起始位置 比较两个指针所指向的元素，选择相对小的元素放入到合并空间，并移动指针到下一位置 重复步骤3直到某一指针达到序列尾 将另一序列剩下的所有元素直接复制到合并序列尾 排序效果： sort 堆排序 介绍： 堆积排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆是一个近似完全二叉树的结构，并同时满足堆性质：即子结点的键值或索引总是小于（或者大于）它的父节点。 步骤： （比较复杂，自己上网查吧） 排序效果： sort 选择排序 介绍： 选择排序(Selection sort)是一种简单直观的排序算法。它的工作原理如下。首先在未排序序列中找到最小元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。 排序效果： sort 冒泡排序 介绍： 冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 步骤： 比较相邻的元素。如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。 针对所有的元素重复以上的步骤，除了最后一个。 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。 排序效果： sort 插入排序 介绍： 插入排序（Insertion Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。 步骤： 从第一个元素开始，该元素可以认为已经被排序 取出下一个元素，在已经排序的元素序列中从后向前扫描 如果该元素（已排序）大于新元素，将该元素移到下一位置 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置 将新元素插入到该位置中 重复步骤2 排序效果： （暂无） 希尔排序 介绍： 希尔排序，也称递减增量排序算法，是插入排序的一种高速而稳定的改进版本。 希尔排序是基于插入排序的以下两点性质而提出改进方法的： 插入排序在对几乎已经排好序的数据操作时， 效率高， 即可以达到线性排序的效率 但插入排序一般来说是低效的， 因为插入排序每次只能将数据移动一位&gt; 排序效果： sort]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>排序算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[web-flex-music-player]]></title>
    <url>%2F2013%2F02%2F04%2Fweb-flex-music-player%2F</url>
    <content type="text"><![CDATA[&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" initialize="init()" backgroundColor="#ffffff"&gt; &lt;mx:Script&gt; &lt;![CDATA[ import mx.skins.halo.ProgressIndeterminateSkin; import mx.controls.Alert; private var sud:Sound; private var scn:SoundChannel; private var position:Number = 0; private var running:Boolean = false; public function init():void&#123; var lab:String = Application.application.parameters.label; var url:String = Application.application.parameters.url; if(lab==null)&#123; lab = "default";//默认Label &#125; if(url==null)&#123; url = "http://le5u.net/sound/1.mp3";//默认播放路径 &#125; sud = new Sound(new URLRequest(url)); pb.label=lab; &#125; private function pl():void&#123; if(!running)&#123; scn = sud.play(position); scn.addEventListener(Event.SOUND_COMPLETE,sdComplete); pb.addEventListener(Event.ENTER_FRAME,ud); running = true; &#125;else&#123; position = scn.position; scn.stop(); running = false; &#125; &#125; private function sdComplete(event:Event):void&#123; running = false; position = 0; &#125; //更新进度条 private function ud(event:Event):void&#123; var pos:Number = scn.position; var len:Number = sud.length; var percent:Number = Math.round(pos*100/len); if(isNaN(percent))&#123; percent = 0; &#125; //trace("position is "+pos +"n" +"length is " + len + "n" +"percent is "+percent); pb.setProgress(pos,len); &#125; private function pbInit():void&#123; //pb.setStyle("barSkin", ProgressIndeterminateSkin); pb.setStyle("trackColors", [ 0xffffff, 0xf3efee ]); pb.setStyle("barColor", 0x66FF66); //pb.setStyle("borderColor", 0xf3efee); &#125; ]]&gt; &lt;/mx:Script&gt; &lt;mx:Style&gt; ProgressBar&#123; font-size:14px; font-weight:normal; &#125; &lt;/mx:Style&gt; &lt;mx:ProgressBar id="pb" useHandCursor="true" buttonMode="true" mouseChildren="false" initialize="pbInit()" click="pl()" minimum="0" maximum="100" width="100%" height="100%" labelPlacement="center" mode="manual"&gt; &lt;/mx:ProgressBar&gt;&lt;/mx:Application&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>flex</tag>
        <tag>播放器</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数字正则]]></title>
    <url>%2F2013%2F02%2F03%2Fweb-num-reg%2F</url>
    <content type="text"><![CDATA[验证数字：[1]$ 验证n位的数字：^d{n}$ 验证至少n位数字：^d{n,}$ 验证m-n位的数字：^d{m,n}$ 验证零和非零开头的数字：^(0|[1-9][0-9])$ 验证有两位小数的正实数：[2]+(.[0-9]{2})?$ 验证有1-3位小数的正实数：[3]+(.[0-9]{1,3})?$ 验证非零的正整数：^+?[1-9][0-9]$ 验证非零的负整数：^-[1-9][0-9]$ 验证非负整数（正整数 + 0） ^d+$ 验证非正整数（负整数 + 0） ^((-d+)|(0+))$ 验证长度为3的字符：^.{3}$ 验证由26个英文字母组成的字符串：[4]+$ 验证由26个大写英文字母组成的字符串：[5]+$ 验证由26个小写英文字母组成的字符串：[6]+$ 验证由数字和26个英文字母组成的字符串：[7]+$ 验证由数字、26个英文字母或者下划线组成的字符串：^w+$ 验证用户密码:[8]w{5,17}$ 正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。 验证是否含有 ^%&amp;’,;=?$&quot; 等字符：[^%&amp;’,;=?$x22]+ 验证汉字：[9],{0,}$ 验证Email地址：^w+[-+.]w+)@w+([-.]w+).w+([-.]w+)$ 验证InternetURL：^http://([w-]+.)+[w-]+(/[w-./?%&amp;=])?$ ；[10]+://(w+(-w+))(.(w+(-w+)))(?S)?$ 验证电话号码：^((d{3,4})|d{3,4}-)?d{7,8}$：–正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。 验证身份证号（15位或18位数字）：^d{15}|d{}18$ 验证一年的12个月：^(0?[1-9]|1[0-2])$ 正确格式为：“01”-“09”和“1”“12” 验证一个月的31天：^((0?[1-9])|((1|2)[0-9])|30|31)$ 正确格式为：01、09和1、31。 整数：^-?d+$ 非负浮点数（正浮点数 + 0）：^d+(.d+)?$ 正浮点数 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$ 非正浮点数（负浮点数 + 0） ^((-d+(.d+)?)|(0+(.0+)?))$ 负浮点数 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$ 浮点数 ^(-?d+)(.d+)? 验证货币格式 [11]{1,3}(,[0-9]{3})*(.[0-9]{2})?$ –正确格式为123,456.00 0-9 ↩ 0-9 ↩ 0-9 ↩ A-Za-z ↩ A-Z ↩ a-z ↩ A-Za-z0-9 ↩ a-zA-Z ↩ u4e00-u9fa5 ↩ a-zA-z ↩ 0-9 ↩]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>数字</tag>
        <tag>正则</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IE中样式表、选择符的数量限制记录]]></title>
    <url>%2F2013%2F02%2F03%2Fweb-ie-css-limit%2F</url>
    <content type="text"><![CDATA[项目中css样式过多之前前面引入的样式“生效”，后面的无效 有关IE浏览器中对样式表的最大量的限制内容 KB 262161 outlines the maximum number of stylesheets and rules supported by Internet Explorer 6 to 9. A sheet may contain up to 4095 rules A sheet may @import up to 31 sheets @import nesting supports up to 4 levels deep Some folks have wondered about the math that underlies these numbers. The root of the limitations is that Internet Explorer uses a 32bit integer to identify, sort, and apply the cascading rules. The integer’s 32bits are split into five fields: four sheetIDs of 5 bits each, and one 12bit ruleID. The 5 bit sheetIDs results in the 31 @import limit, and the 12 bit ruleID results in the 4095 rules-per-sheet limitation. While these limits are entirely sufficient for most sites, there are some sites (particularly when using frameworks and controls) that can encounter the limits, requiring workarounds. There’s a simple test page for the limits here. -Eric Update: IE10 Platform Preview #2 significantly raises the limits described above. In IE10 (any browser/document mode): A sheet may contain up to 65534 rules A document may use up to 4095 stylesheets @import nesting is limited to 4095 levels (due to the 4095 stylesheet limit)]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>ie</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Flex-代码格式化eclipse插件:Flex Formatter]]></title>
    <url>%2F2013%2F02%2F03%2Fweb-flex-formmater%2F</url>
    <content type="text"><![CDATA[Flex Formatter is an extremely useful plugin for FlexBuilder / FlashBuilder that formats your ActionScript code (AS3) and MXML according to a broad range of settings, and helps you to generate ASDoc comments automatically. It is free, and open source. It’s code formatting is quite robust and configurable, handling things like brace settings (cuddling versus next line), white space around parameters and operators, sorting imports, and a ton more. Thankfully, you can export your settings to a file and share it with your whole team. You can also have it automatically update settings from a file that you can share over the network or via SVN / GIT. Unfortunately, it’s ASDoc features are much more rudimentary, and do not have any configuration options. They serve as an acceptable starting point, and save some time, but I would love to see some additional support here (for example, an option to mark private and or protected members as @private, which is a very common requirement). Regrettably, Flex Formatter does not seem to come with installation instructions. If you are not familiar with installing Eclipse plugins, it can take a lot of work to figure it out, but it’s very simple if you know how to do it: Start up FlexBuilder / FlashBuilder. From the Help menu, select ‘Software Updates &gt; Find and Install…’ Select ‘Search for new features to install’ and click ‘Next &gt;’ Click ‘New Remote Site…’ Use name: ‘Flex Formatter’ and url: ‘http://flexformatter.googlecode.com/svn/trunk/FlexFormatter/FlexPrettyPrintCommandUpdateSite/’ Click OK Make sure only ‘Flex Formatter’ is selected in the ‘Sites to search’ list, and click ‘Finish’ Follow the prompts to install Flex Formatter, and restart the IDE Once you’ve restarted, you should see the Flex Formatter bar with buttons to ASDoc, format, and rearrange your code. You should also have a ‘Flex Formatting’ entry in preferences.]]></content>
      <categories>
        <category>web前端</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python 小写转大写]]></title>
    <url>%2F2013%2F02%2F03%2Fpython-caps-util%2F</url>
    <content type="text"><![CDATA[-*- coding: gbk -*- import win32clipboard as wincb import win32conrunning = True while running: s=raw_input("输入小写英文：") ss = s.upper() print ss wincb.OpenClipboard() wincb.EmptyClipboard() wincb.SetClipboardData(win32con.CF_TEXT, ss) running = "q"!=s]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>大小写</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个男人从越狱里的人物身上应该学到什么]]></title>
    <url>%2F2013%2F02%2F03%2Flife-learn-from-prison-break%2F</url>
    <content type="text"><![CDATA[MichaelScofield 头脑。我理解的头脑，应该是智慧+冷静。作为这部戏的主角，导演很慷慨的把两点品质都赋予了Michael，他的智慧和冷静是贯穿始终的，近乎完美。 LincolnBurrows 勇气。在整部戏中，Lincoln应该是最有男子汉气质的人了。他明知有圈套还是要去救出儿子；当监狱暴乱他遭遇T-Bag一伙时，在没有退路的情况下勇敢的搏斗，毫无惧色。 如果你失去了财富，那你失去了一点；如果你失去了名誉，那你失去了很多；如果你失去了勇气，那你把一切都失去了。 BenjaminFranklin 责任。作为一名美国军人，当他发现虐囚事件时，勇敢的站出来揭露，结果被迫害（当然在中国，不要学他这一点，否则会死的很难看）；当他为了生计去给别人开偷来的卡车被抓时，为了不让妻子担心和维护在女儿心中的形象，扔谎称在服役，而独自承受坐牢的痛苦；为了和妻女团聚，冒着极大的风险越狱。 有责任感的男人是值得信赖的，朋友也不会抛弃他，看看那些帮助他妻子和女儿逃亡的黑人铁哥们吧。 JohnAbruzzi 尊严。因为那句著名的临终遗言：“我只向上帝下跪，但他不在这里。”当你赢得了尊严，也就赢得了别人的尊重，包括你的对手。 DavidApolskis 忠诚。虽然开始David处于对鸡奸的恐惧和汉堡的诱惑，曾经出卖过Michael他们，但当时他并不是他们中的一员，而且Michael警告T-Bag不要打他的主意这件事情，他似乎也并不知道。 在最后，当他被FBI抓获时，他没有背叛自己的朋友，毅然的选择了忠诚。 我们都看到了FBI给他开出的价码：不追究他的越狱行为，并送他到一所高级监狱去服刑。的确如果他供出Michael他们，这种“重大立功表现”是很有可能得到这些的。 我想当他敲开那个同车的漂亮姑娘的家门时，他一定知道这对他意味着什么，毕竟他一共只被判了2年的刑期。 TheodoreBagwell 信念。作为最不受欢迎的一个同伴，他一开始就是被越狱小组排斥的，他是以差点杀死JohnAbruzzi为代价才保住了这张票，而且刚逃出监狱，就失去了一只手。 两次失去左手的是他，两次得到巨款也是他，别人都有朋友、家人帮忙或陪伴，只有他是孤独的，但他就凭着求生的信念，勇敢的活了下来。 FernandoSucre 浪漫。作为一个只剩下16个月刑期的犯人，他越狱的理由竟然是怀孕的女友要和别人结婚。当他骑着朋友的大哈雷去拉斯维加斯准备在婚礼上把女友抢回来时，每个女人也许都在想：我要是他的女友该多幸福啊。 SaraTancredi 敬业。当监狱开始暴乱的时候，她不顾警卫队长的劝告，执意进去抢救一个中暑的犯人；当生命垂危的JohnAbruzzi被送往直升飞机时，是她陪在旁边焦急但是很不失冷静的不断呼喊：“John，坚持住，呼吸，坚持住，你会没事的。”在那一刻，我觉得这个恶贯满盈的犯人更象她的亲人，那也是Sara最美的时候。大家可以去看看，在第1季第13集一开始，那一刻，Sara就象一个天使。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>越狱</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用RSSLibJ读取RSS]]></title>
    <url>%2F2013%2F02%2F01%2Fjava-rsslibj%2F</url>
    <content type="text"><![CDATA[RSS是一个标准的XML文件，Rss阅读器可以读取这个XML文件获得文章的信息，使用户可以通过Rss阅读器而非浏览器阅读Blog，我们只要动态生成这个XML文件便可以了。RSSLibJ是一个专门读取和生成RSS的小巧实用的Java库，大小仅25k，可以下载rsslibj-1_0RC2.jar和它需要的EXMLjar两个文件，然后复制到/WEB-INF/lib/下。 rsslibj-1_0RC2.jar下载地址：http://sourceforge.net/project/downloading.php?group_id=71153&amp;use_mirror=nchc&amp;filename=rsslibj-1_0RC2.jar&amp;27763931 EXML.jar下载地址：http://rsslibj.cvs.sourceforge.net/rsslibj/rsslibj/lib/EXML.jar?view=log 读取新浪RSS的一个例子，结合Jsf。 页面： &lt;%@taglib uri="http://java.sun.com/jsf/core" prefix="f"%&gt;&lt;%@taglib uri="http://java.sun.com/jsf/html" prefix="h"%&gt;&lt;%@page contentType="text/html;charset=gb18030"%&gt;&lt;f:view&gt; &lt;html&gt; &lt;body&gt; &lt;h:form&gt; &lt;h3&gt;RSS Reader&lt;/h3&gt; 请输入RSS地址： &lt;h:inputText value="#&#123;rssReader.rssAddress &#125;" id="rssAddress" converterMessage="请输入一个正确的Rss地址!" style="width:280px;"&gt; &lt;/h:inputText&gt; &lt;h:commandButton value="提交" action="#&#123;rssReader.readRss &#125;"&gt;&lt;/h:commandButton&gt; &lt;br&gt; &lt;br&gt; &lt;h:message for="rssAddress" style="color:red;"&gt;&lt;/h:message&gt; &lt;/h:form&gt; &lt;br&gt; &lt;br&gt; 从 &lt;h:outputText value="#&#123;rssReader.rssAddress &#125;"&gt;&lt;/h:outputText&gt; 获取的内容： &lt;br&gt; &lt;h:form&gt; &lt;h:dataTable value="#&#123;rssReader.items &#125;" var="item" style="font-size:13px;" border="1"&gt; &lt;h:column&gt; &lt;h:outputText value="#&#123;item.title &#125;"&gt;&lt;/h:outputText&gt; &lt;/h:column&gt; &lt;h:column&gt; &lt;h:outputLink value="#&#123;item.link &#125;"&gt; &lt;h:outputText value="#&#123;item.link &#125;"&gt;&lt;/h:outputText&gt; &lt;/h:outputLink&gt; &lt;/h:column&gt; &lt;/h:dataTable&gt; &lt;/h:form&gt; &lt;/body&gt; &lt;/html&gt;&lt;/f:view&gt; RSSReader.java package com.rss;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;import java.util.List;import java.util.Properties;import com.rsslibj.elements.Channel;import com.rsslibj.elements.Item;import com.rsslibj.elements.RSSReader;import electric.xml.ParseException;public class RssReader &#123; private static final String urlString = "http://rss.sina.com.cn/news/marquee/ddt.xml"; private List&lt;Item&gt; items; private String rssAddress; private String proxyHost = "paicproxy2"; private String proxyPort = "8080"; public String getRssAddress() &#123; return this.rssAddress; &#125; public void setRssAddress(String rssAddress) &#123; this.rssAddress = rssAddress; &#125; public List&lt;Item&gt; getItems() &#123; return this.items; &#125; /** * 设置代理 */ public void setProxy(String proxyHost,String proxyPort) &#123; // 设置代理 Properties systemSettings = System.getProperties(); systemSettings.put("http.proxyHost", proxyHost); systemSettings.put("http.proxyPort", proxyPort); System.setProperties(systemSettings); &#125; /** * 读取RSS。 * @param url * @throws IOException * @throws ParseException */ public void readRss() throws IOException, ParseException &#123; setProxy(proxyHost, proxyPort); URL __url = new URL(this.rssAddress); HttpURLConnection conn = (HttpURLConnection) __url.openConnection(); InputStream in = conn.getInputStream(); BufferedReader bufReader = new BufferedReader(new InputStreamReader(in,"utf-8")); RSSReader rssReader = new RSSReader(bufReader); Channel channel = rssReader.getChannel(); this.items = channel.getItems(); &#125; /** * 打印获取的RSS内容。 * @param urlString */ public void test(String urlString) &#123; setProxy(urlString, urlString); try &#123; URL url = new URL(urlString); HttpURLConnection conn = (HttpURLConnection) url.openConnection(); InputStream is = conn.getInputStream(); StringBuilder sBuilder = new StringBuilder(); String line = null; BufferedReader reader = new BufferedReader(new InputStreamReader(is,"utf-8")); while ((line = reader.readLine()) != null) &#123; sBuilder.append(line).append("\n"); &#125; System.out.println(sBuilder.toString()); &#125; catch (MalformedURLException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125;&#125; faces-config.xml: &lt;?xml version="1.0"?&gt; &lt;!DOCTYPE faces-config PUBLIC "-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.0//EN" "http://java.sun.com/dtd/web-facesconfig_1_0.dtd"&gt;&lt;faces-config&gt; &lt;managed-bean&gt; &lt;managed-bean-name&gt;rssReader&lt;/managed-bean-name&gt; &lt;managed-bean-class&gt; com.rss.RssReader &lt;/managed-bean-class&gt; &lt;managed-bean-scope&gt;request&lt;/managed-bean-scope&gt; &lt;/managed-bean&gt;&lt;/faces-config&gt; 效果： rss]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>rss</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SWT,Swing,AWT及最小公分母问题（LCD）]]></title>
    <url>%2F2013%2F02%2F01%2Fjava-swt-swing-awt%2F</url>
    <content type="text"><![CDATA[首先我们来说下什么是最小公分母的问题，及LCD（least common denominator），这是我们听的最多的，也是讨论的最多的，可是细想是什么的时候却答不上来了。相反还有一个最大公分母（greatest common denominator），看下图： lcd 图里有三个不同的集合，分别代表不同的操作系统，LCD其实指的就是它们三个的交集了，很明显最大公分母就是指它们三的并集喽！ 明白LCD， 最大公分母， 我们再分别看看AWT，SWT，SWING。 AWT： AWT的组件（component）遵循LCD的原则，所以AWT只有所有系统里常用的组件。所以你在AWT里找不到高级的组件如树（tree），因为它在别的系统里没有。对于一些特性AWT也是一样遵循LCD原则。它只支持那些在所有系统里都有的特性。比如：AWT的button里无法加入图像，是因为Motif系统里不支持这个特性。正因为AWT的组件及特性对各系统的很差支持，AWT吸引了很少的用户而被SUN停掉了，它的存在只是为了向后的兼容，并为Swing提供支持。 最小公分母问题（LCD）： 读完以上片断大家知道什么是LCD问题了吧！：） SWT： SWT按最大公分母原则建立，及对所有系统里的组件及特性都支持，它的设计想法是如果这个组件在这个系统里存在的话，那么就用java代码对它进行封装并通过JNI调用。如果这个组件不存在那么就模拟生成及通过在SWT的composite上进行画操作。 Swing: 不用说，也是按最大公分母，可是在效率上表现不怎么样，可能以后会有改变。因为它也是基于AWT容器的，所以无法实现透明窗体等效果。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>swt</tag>
        <tag>swing</tag>
        <tag>awt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Tomcat部署Web应用方法总结]]></title>
    <url>%2F2013%2F01%2F17%2Fjava-tomcat-deploy%2F</url>
    <content type="text"><![CDATA[Tomcat部署Web应用方法总结 在Tomcat中部署Java Web应用程序有两种方式：静态部署和动态部署。 在下文中$CATALINA_HOME指的是Tomcat根目录。 一、静态部署 静态部署指的是我们在服务器启动之前部署我们的程序，只有当服务器启动之后，我们的Web应用程序才能访问。 以下3种方式都可以部署：（以PetWeb项目为例说明，PetWeb目录假设是F:/PetWeb） 1.利用Tomcat自动部署 将PetWeb目录拷贝到$CATALINA_HOME/webapps下，然后启动服务器就可以了，Tomcat启动时将自动加载应用。 访问地址如下：http://localhost:8080/PetWeb/ 这种方式比较简单，但是web应用程序必须在webapps目录下。Tomcat的Webapps目录是Tomcat默认的应用目录，当服务器启动时，会加载所有这个目录下的应用。 2.修改Server.xml文件部署 这种方式可以不必将PetWeb目录拷贝到webapps下，直接在F:/部署。方法如下，更改$CATALINA_HOME/conf/server.xml文件， 找到以下内容： Xml代码： path：是访问时的根地址，表示访问的路径；如上述例子中，访问该应用程序地址如下：http://localhost:8080/Pet/ reloadable：表示可以在运行时在classes与lib文件夹下自动加载类包。其中reloadable=&quot;false&quot;表示当应用程序 中的内容发生更改之后服务器不会自动加载，这个属性在开发阶段通常都设为true，方便开发，在发布阶段应该设置为false，提高应用程序的访问速度。 docbase：表示应用程序的路径，注意斜杠的方向“/”。docBase可以使用绝对路径，也可以使用相对路径，相对路径相对于webapps。 workdir：表示缓存文件的放置地址 3.增加自定义web部署文件(推荐使用，不需要重启Tomcat) 这种方式和方法2差不多，但不是在Server.xml文件中添加Context标签，而是在$CATALINA_HOME/conf /Catalina/localhost中添加一个xml文件，如Pet.xml.在Tomcat安装目录conf/Catalina /localhost下，里面有Tomcat自带的三个应用，随意复制其中的一个XML文件，然后修改docbase指向你自己的应用程序，并把文件名改 名，各参数参见方法2中的标签的参数，或者你也可以自己新建一个XML文件。(注意此文件名将作为Context中的path属性值,不管文件里的path属性值如何设置也是无效的)，将以下内容复制过去，修改相应路径即可。 Xml代码： 访问地址如下：http://localhost:8080/Pet/ 注：Web应用以.war文件的形式部署 可以将JSP程序打包成一个war包放在目录下，服务器会自动解开这个war包，并在这个目录下生成一个同名的文件夹。一个war包就是有特性格式的jar包，它是将一个Web程序的所有内容进行压缩得到。 我们刚才是将PetWeb文件夹部署在了服务器中，我们知道可以将Web应用程序的内容打成.war包，然后在部署在服务器上。打包请参考如下步骤： 1、打开命令提示符（cmd） 2、设置jdk环境变量 3、在命令提示符中进入项目文件夹F:/PetWeb后，键入如下命令：jar cvf Pet.war */ . （注意最后有个“.”）。这样在F:/PetWeb下应该有Pet.war文件。 （也可以打包到指定的地方，命令如下：jar cvf d:/Pet.war */ .） 部署Pet.war文件非常简单，将刚才xml文件中的docBase=&quot;F:/PetWeb&quot;更改为docBase=“F:/Pet.war&quot;或者直接将其拷贝到webapps目录下就可以。然后重新启动服务器就可以将Pet.war部署为一个Web应用程序了。 如果你够细心的话你会发现，服务器将Pet.war文件解开，并且在webapps下面又生成了一个Pet文件夹，然后把Pet.war的内容拷贝到里面去了。我们可以通过以下方式取消自动解压缩，将xml配置文件中的unpackWAR属性设置为&quot;false” 即可。 二、动态部署 动态部署是指可以在服务器启动之后部署web应用程序，而不用重新启动服务器。动态部署要用到服务器提供的manager.war文件，如果 在$CATALINA_HOME/webapps/下没有该文件，你必须去重新下载tomcat，否则不能完成以下的功能。要想使用该管理程序必须首先编 辑$CATALINA_HOME/conf/tomcat-users.xml文件，内容如下：（关于这个文件的更多内容，请参考 Java Web应用程序的安全模型二 ） &lt; role rolename=“tomcat”/&gt; &lt; role rolename=“role1”/&gt; &lt; user username=“coresun” password=“coresun” roles=“manager”/&gt; &lt; user username=“tomcat” password=“tomcat” roles=“tomcat”/&gt; &lt; user username=“both” password=“tomcat” roles=“tomcat,role1”/&gt; &lt; user username=“role1” password=“tomcat” roles=“role1”/&gt; &lt; /tomcat-users&gt; 然后在浏览器中键入如下地址：http://localhost:8080/，应该看到一个tom猫了吧。点击左边的Tomcat Manager链接，提示输入用户名和密码，本文都是coresun，然后可以看到以下页面： tomcat (1)Context Path(option):中输入/Pet (2)XML Configration file URL中要指定一个.xml文件，比如我们在F:/下建立一个Pet.xml文件，内容如下：。docBase不用写了，因为要在下一个文本框中填入。或者更简单点，这个文本框什么都不填。 (3)WAR or Directory URL:中键入F:/PetWet或者F:/Pet.war都可以，然后点击Deploy按钮，看看上面是不是已经看到了你web应用程序，名字就是你Context Path(option):中的名字。 (4)如果你部署.war文件还有更加简单的方式，下面还有个Select WAR file upload点击浏览选择.war文件，然后点击Deploy也可以。 让tomcat只运行conf/server.xml中指定的web应用 可以有以下2种办法： 实现一: 1)将要部署的WEB应用放在webapps以外的路径, 并在server.xml相应的Context 中的docBase指定. 2)删除webapps中的所有文件夹, 以及conf/catalina/localhost下所有xml文件. 注: webapps是server.xml中的Host 元素的appBase属性的值. 实现二: 修改server.xml中Host 元素的属性, 添加或修改: deployXML=“false” deployOnStartup=“false” autoDeploy=&quot;false&quot; 含义: deployXML=“false” : 不部署conf/catalina/localhost下的xml相应的WEB应用 deployOnStartup=“false” :tomcat启动时, 不部署webapps下的所有web应用 autoDeploy=“false” :避免tomcat在扫描改动时, 再次把webapps下的web应用给部署进来. 注： Tomcat中webapps目录下不能直接存放网页格式的文件，否则无法访问到该文件，必须有子目录才能访问该网页文件。 例如：我们直接将index.html放在webapps目录中，通过浏览器http://localhost:8080/index.html是无法访问到index.html的。而必须要webapps/petweb/index.html才可以通过http://localhost:8080/petweb/index.html访问到index.html页面。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux和Windows下的Tomcat JVM内存设置]]></title>
    <url>%2F2013%2F01%2F17%2Fjava-tomcat-memory%2F</url>
    <content type="text"><![CDATA[Linux下修改Tomcat JVM内存设置: 要添加在Tomcat的bin下catalina.sh里，位置cygwin=false前。注意引号要带上,红色的为新添加的. \#OSspecificsupport.$var_must_besettoeithertrueorfalse.JAVA_OPTS="-Xms256m-Xmx512m-Xss1024K-XX:PermSize=128m-XX:MaxPermSize=256m"cygwin=false windows下修改Tomcat JVM内存设置: 情况一: 解压版本的Tomcat,要通过startup.bat启动Tomcat才能加载配置 要添加在Tomcat的bin下catalina.bat里 remGuessCATALINA_HOMEifnotdefined setCURRENT_DIR=%cd%后面添加,红色的为新添加的. setJAVA_OPTS=-Xms256m-Xmx512m -XX:PermSize=128M-XX:MaxNewSize=256m -XX:MaxPermSize=256m-Djava.awt.headless=true 情况二: 安装版的Tomcat下没有catalina.bat windows服务执行的是binTomcat.exe.他读取注册表中的值,而不是catalina.bat的设置. 修改注册表 HKEY_LOCAL_MACHINESOFTWARE ApacheSoftwareFoundationTomcatServiceManager Tomcat5ParametersJavaOptions 原值为 -Dcatalina.home="C:ApacheGroupTomcat5.0" -Djava.endorsed.dirs="C:ApacheGroup Tomcat5.0commonendorsed" -Xrs 加入 -Xms300m-Xmx350m 重起Tomcat服务,设置生效]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VMWare虚拟机下安装RedHat Enterprise Linux 5 网络配置过程]]></title>
    <url>%2F2013%2F01%2F10%2Flinux-vm-rhl%2F</url>
    <content type="text"><![CDATA[本操作参考VMWare虚拟机下安装RedHat 9.0linux联网教程 http://blog.csdn.net/Charistain_huang/archive/2009/12/14/5006861.aspx 1.网上邻居-属性-可以看到在你安装好 VM虚拟机后又多了两个网络连接 rhl (vmnet1是host-only，也就是说，选择用vmnet1的话就相当于VMware给你提供了一个虚拟交换机，仅将虚拟机和真实系统连上了，虚拟机可以与真实系统相互共享文件，但是虚拟机无法访问外部互联网，而vmnet8是NAT，就是网络地址转换，相当于给你一个虚拟交换机，将虚拟机和真实系统连上去了，同时这台虚拟交换机又和外部互联网相连，这样虚拟机和真是系统可以相互共享，同时又都能访问外部互联网，而且虚拟机是借用真实系统的IP上网的，不会受到IP-MAC绑定的限制。) 右键VMnet8-属性-tcp/ip协议 rhl -双击打开 -勾选使用下面的IP地址， 把IP地址改为192.168.132(这个自己随便设1-224内的数字）.1 /255.255.255.0 网关以及DNS不用设置，点确定。 rhl 2.打开vm虚拟机，点左上方的编辑-虚拟网络设置-nat rhl edit—&gt;virtual network editor rhl NAT Settings rhl OK 虚拟机的DNS就是这里的网关IP地址192.168.132.2,这个vmnet8相当于局域网里的网关。 3.编辑-虚拟网络设置-主机虚拟网络映射,在vmnet0下拉框勾选自己的网卡，其余的一般默认即可。 rhl 4.回到win主机,开始-运行-CMD,打开DOS，输入命令ipconfig/all，可以看到相关的IP配置 rhl 5.进入VM虚拟机中的linux系统，主菜单-系统设置-网络-勾选下面的设备eth0-进入以太网设备编辑状态 system —-&gt;administration—–&gt;network rhl rhl 设置完成保存后 主菜单-系统工具-终端 打开后输入：service network restart (重启网络命令)]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用reg文件修改注册表]]></title>
    <url>%2F2013%2F01%2F10%2Fsystem-windows-reg%2F</url>
    <content type="text"><![CDATA[REG文件实际上是一种注册表脚本文件，双击REG文件即可将其中的数据导入到注册表中。利用REG文件我们可以直接对注册表进行任何修改操作，它对注册表的操作可以不受注册表编辑器被禁用的限制，因此功能更为强大、灵活，另外，由于REG文件可以用任何文本文件编辑工具(例如记事本)进行修改，因此通过它对注册表数据进行修改后，如果发生错误，还可以通过改回REG文件中的数据后再导入，从而实现恢复操作，因此它又较之直接用注册表编辑器修改更安全，所以熟练掌握REG文件的运用，有时可以起到事半功倍、意想不到的效果。 创建REG文件 REG文件的创建是非常简单的，可以通过任何一个文本文件编辑工具来实现。我们就以创建一个可以解除注册表禁用限制的REG文件restore.reg为例来介绍一下具体过程。 打开记事本，在记事本文件中输入以下内容： REGEDIT4 空一行 [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System]“DisableRegistryTools”=dword : 00000000 保存此文件，在打开的“另存为”对话框中选择好保存路径，再单击“保存类型”中的下拉箭头选择“所有文件”(一定要选择此步，不然保存后的文件会自动加上TXT的扩展名)，然后在“文件名”中输入“restore.reg”后按“保存”按钮。以后你就可以通过双击这个restore.reg来直接解除禁用注册表的限制。 对REG文件进行修改 综述 我们在利用REG文件对注册表进行操作时，要操作的对象有两种：一种是对主键进行操作，一种是对主键下的键值项目进行操作。对主键的操作有添加、删除两种，而对键值项目的操作则分为添加、修改和删除三种。下面我们就一个一个来实现。 对主键的操作 (1)添加主键 要想利用REG文件在注册表中添加一个主键是非常方便的，只需要在文件体部分直接以“[ ]”的形式写上要添加的主键路径即可。 例如：在HKEY_LOCAL_MACHINE\Software主键下添加一个名称为“软件工作室”的主键，内容如下： REGEDIT4 空一行 [HKEY_LOCAL_MACHINE\Software\软件工作室] (2)删除主键 要用REG文件在注册表中删除一个主键，在文件体部分“[ ]”括起来的主键路径前面加上一个“-”符号即可，删除主键操作将会一并删除该主键下的所有子键及其键值项目，所以这是个比较危险的命令，使用要十分注意。例如要删除我们刚才添加的那个主键，内容如下： REGEDIT4 空一行 [-HKEY_LOCAL_MACHINE\Software\软件工作室] 对键值项目的操作 (1)添加键值项目 添加键值项目的操作如同注册表编辑器中的“新建”命令，一般来说，键值的数据类型分为三种：字符串值、二进制值和DWORD值。在REG文件中我们也要设置添加的键值项目的数据类型，如果要添加字符串值，则“=”号后边要用英文的双引号引住数据；如果添加的为DWORD类型值，“=”号后边的格式为“dword:数据”；如果添加的为二进制值，“=”号后边 则为“hex:数据”。要设置默认值的键值数据时，“=”号前边的键值名称应为“@”符号，并且没有双引号。 例如我们要在“HKEY_LOCAL_MACHINE\Software\软件工作室”主键下设置默认键值为“工作室”，并分别添加“姓名”键值项目(字符串值)、“年龄”键值项目(二进制值)、“婚否”键值项目(DWORD值)。相应的REG文件内容如下： REGEDIT4 空一行 [HKEY_LOCAL_MACHINE\Software\软件工作室] @=“工作室” “姓名”=“徐徐徐” “年龄”=hex:23 &quot;婚否&quot;=dword:00000000 在添加键值项目时，如果该键值所在的主键路径不存在的话，在添加键值项目的同时会自动新建该主键。另外在添加字符串值的键值项目时还有一点值得注意的地方，当这个字符串值是包括文件路径的字符串值时，路径分隔符应用“\”双斜杠表示，以示和注册表中的主键路径分隔符区别开来。例如我们要在注册中“HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run”主键下的启动组中添加位于“C:\PROGRAM FILES\BOOBSOFT\屏幕保护控制器”目录下的一个应用程序“屏幕保护控制器.exe”的启动键值项目，REG文件内容如下： REGEDIT4 空一行 [HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run] “scr”=“C:\PROGRAM ILES\BOOBSOFT\屏幕保护控制器\屏幕保护控制器.exe” (2)修改键值项目 其实修改和添加很类似，对于已经存在的键值项目，我们要修改其数据时，只需要将正确的数据赋予对应的键值项目即可，新的数据会自动覆盖错误的旧数据，例如，当某些恶意网页修改了你的IE标题栏文字，在标题栏中总是显示那个网站的广告文字，很讨厌，我们知道修改IE标题栏文字是通过“HKEY_CURRENT_USER\Software Microsoft\Internet Explorer\Main”主键下的“Window Title”键值的数据进行设置的，那么我们就可以通过REG文件改回默认的IE标题栏文字。 REGEDIT4 空一行 [HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main] “Window Title”=&quot;&quot; (3)删除键值项目 用REG文件删除键值项目也是很方便的，和删除主键相类似，也是通过“=”号实现的，不过这次不是加在前面，而是把“-”符号放在键值项目的等号后面。例如一些恶意网页在修改IE标题栏等设置的同时，还修改了开始菜单相关的键值项目数据，使得开始菜单中的“运行”、“查找”、“关闭”等命令都不见了，导入下面的这个REG文件删除相应的键值项目后就可以找回开始菜单中的这些命令了。 REGEDIT4 空一行 [HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer] “NoRun”=-(解除“运行”命令) “NoClose”=-(找回“关闭系统”命令) “NoFind”=-(找回“查找”命令) 将REG文件中的数据导入到注册表中 导入信息 我们双击REG文件时，系统会首先提示“确实要把XXX.REG内的信息添加到注册表吗？”的询问对话框，单击“是”按钮，系统就会按照REG文件中所描述的操作对注册表进行修改，完成以后并会给出提示“XXX.REG中的信息已经成功输入注册表”，把REG文件中的信息导入注册表的操作称为“合并”。 修改默认值 在REG文件上单击鼠标右键，有三个命令是关于REG文件的：合并、Print、编辑，以粗体显示的就是“合并”操作，这也是默认的打开方式，也就是双击时执行的操作。如果你不想让双击REG文件时执行“合并”的操作，你可以更改它的默认打开方式为“编辑”。打开资源管理器，单击“工具”菜单中的“文件夹选项”命令，在打开的对话框中单击“文件类型”标签，然后在“已注册的文件类型”列表中找到并选中“注册表项目”，从下面的“打开方式”我们也可以看出：原来REG文件默认的“合并”操作关联的是注册表编辑器Regedit呀!接下来点击“编辑”按钮，打开“编辑文件类型”对话框，然后选择“操作”列表中的“编辑”，再点击“设为默认值”按钮即可，以后双击REG文件时就会用记事本来打开进行编辑。 在这里笔者顺便告诉大家一个独门绝技，如果你希望REG文件在导入时没有任何提示，你可以在图4所示的对话框中选中“合并”，然后单击“编辑”按钮，在弹出对话框的命令行中输入“regedit.exe /s “%1””即可，这是使用了注册表编辑器Regedit的一个被称为安静导入模式的隐藏参数“/S”，在导入REG文件时如果加上“/S”参数，系统就不会再弹出任何提示对话框而直接导入了。 解除禁用 有时在某些电脑中设置了禁用注册表编辑器后，为了防止一些电脑高手使用REG文件，来解除对注册表编辑器的限制，会让REG文件的默认打开程序设置为其他无关程序，当然这时可以通过修改“文件夹选项”中的相关设置改回来，但还有一种更绝的办法可以使REG文件不能用系统默认的方式打开。 运行注册表编辑器，将“HKEY_CLASSES_ROOT.reg”下的默认值改为“txtfile”，这时REG文件的打开方式都指向了TXT文本文件。这样更改后不知道的人即使修改“文件夹类型”中的“注册表项目”设置也无法改回来，当然这时系统也已经禁用了注册表编辑器，你是无法通过注册表编辑器修改了。但经过笔者的研究发现还有一种方法可以破解这种禁用REG文件。我们可以在编辑好的REG文件上按住“Shift”键的同时单击鼠标右键，这时系统会让你重新选择打开方式，从中选取用注册表编辑器Regedit打开就可以将REG文件导入注册表. REG文件格式 (1)Windows 95/98/ME/NT 4.0第一行必须是“REGEDIT4”。Windows 2000/XP/Vista是“Windows Registry Editor Version 5.00&quot;。 (2)第一行后必须空一行。条与条之间最好也空一行。每行前不能留空格。 (3)注册表信息头尾用“[”与“]”包起来； (4)&quot; “内就是字符串内容；“DWORD”为“0”就是用“dword:00000000”表示。 (5)如果有两个以上的注册表信息，信息与信息之间就需要有空行隔开。 (6)如果要删除某个注册表信息该怎么办？很简单，在注册表信息前面加上“-”（减）号。 REG文件规则 字符串值S表示: “字符串”=”&quot; 二进制值B表示: “二进制”=hex: DWORD（32-位）值D表示: “DWORD（32-位）”=dword:00000000 DWORD（64-位）值Q表示: “DWORD（64-位）”=hex(b):00,00,00,00,00,00,00,00 多字符串值M表示: “多字符串”=hex(7):00,00 可扩充字符串值E表示： “可扩充字符串”=hex(2):00,00]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>注册表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js正则]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-js-reg%2F</url>
    <content type="text"><![CDATA[正则表达式符号说明 “+”元字符规定其前导字符必须在目标对象中连续出现一次或多次。==&#123;1,&#125; “*”元字符规定其前导字符必须在目标对象中出现零次或连续多次。==&#123;0,&#125; “?”元字符规定其前导对象必须在目标对象中连续出现零次或一次。==&#123;0,1&#125; n,m为非负整数,n&lt;m &#123;n&#125; 确定匹配n次 如p&#123;2&#125; pp才匹配 &#123;n,&#125; 至少匹配n次 如p&#123;2,&#125; pp,ppp,pppp都匹配,p不匹配 &#123;n,m&#125; 匹配&gt;=n,&lt;=m次, 如p&#123;2,4&#125; pp,ppp,pppp都匹配, p,ppppp都不匹配 s：用于匹配单个空格符，包括tab键和换行符； S：用于匹配除单个空格符之外的所有字符； d：用于匹配从0到9的数字； w：用于匹配字母，数字或下划线字符； W：用于匹配所有与w不匹配的字符； . ：用于匹配除换行符之外的所有字符。 “^”定位符规定匹配模式必须出现在目标字符串的开头 /^hell/ 匹配“hell”, “hello”或“hellhound”开头的字符串 “$”定位符规定匹配模式必须出现在目标对象的结尾 /ar$/ 匹配“car”, “bar”或 “ar” 结尾的字符串 “b”定位符规定匹配模式必须出现在目标字符串的开头或结尾的两个边界之一(代表着单词的开头或结尾) /bbom/ 以“b”定位符开头，匹配以 “bomb”, 或 “bom”开头的字符串。 /manb/ 以“b”定位符结尾，匹配以 “human”, “woman”或 “man”结尾的字符串相 “B”匹配不是单词开头或结束的位置 ()符号包含的内容必须同时出现在目标对象中。 如:/([a-z][A-Z][0-9])+/ abc不匹配 aA9才匹配 |符号表示:或 如:/to|too|2/ 与目标对象中的 “to”, “too”, 或 “2” 相匹配 [^]符号表示:否定符号(必须放在[]中) 如:/[^A-C]/ 上述字符串将会与目标对象中除A，B，和C之外的任何字符相匹配 符号表示:转义符号 正则表达式应用模式参数 语法 1 re = /pattern/[flags] 语法 2 re = new RegExp("pattern",["flags"]) g （全文查找出现的所有 pattern） i （忽略大小写） m （多行查找） 语法1:var pattern = /Java/g; (用 "/" 字符分隔模式) 语法2:var re = new RegExp("ain","g"); (用引号将模式引起来) 一次匹配多少个符合条件的子元素(匹配最大量和最小量) Greedy: 在能匹配的前提下，取量词的最大值。 Reluctant: 在匹配的前提下，取量词的最小值。 Possessive: 取量词的最大值，无论匹配与否。 如： Pattern.compile("^.*B").matcher("AABAABAA") : "AABAAB" Pattern.compile("^.*?B").matcher("AABAABAA") : "AAB" Pattern.compile("^.*+B").matcher("AABAABAA") : null 处理多个匹配 //第一种var text = "maybe JavaSript is more fun than Java!";var pattern = new RegExp("Java","g");//一定要有g不然会死循环//初始化result数组var result = null;//多次使用RegExp对象pattern2指定的正则表达式匹配不表字符串text,如果返回null,则不再循环下去while((result = pattern.exec(text)) != null)&#123; alert("返回结果为: "+result); //显示本次匹配的子串的开始位置和下一次匹配开始的位置(result[0]为匹配的字符串) alert("Matched '"+ result[0] +"'"+"at Position "+result.index+"; next Search begins at "+ pattern2.lastIndex);&#125; replace使用正则 //实例化RegExp对象pattern2， 使用g选项匹配所有符合正则表达式的子串var pattern2 = new RegExp("Java", "g");//对目标子串调用replace调用replace方法用另一个字符串替换匹配给定的正则表达式的子串result = text.replace(pattern2, "VB");//显示替换后的字符串alert("替换后的新串为： "+result); //使用方法处理找到匹配的字符串function test($1)&#123; var gyear=(new Date()).getYear()-parseInt($1)+1; return $1+"("+gyear+"年出生)";&#125;var reg=new RegExp("(d+)岁","g");var newstr=str.replace(reg,test);//使用方法作为要替代的字符串alert(str);alert(newstr); split使用正则 var text = "maybe JavaSript is more fun than Java!";var pattern2 = new RegExp("Java", "g");//对目标字符串调用split方法result = text.split(pattern2);//遍历结果集for(var i=0; i&lt;result.length; i++)&#123; //显示拆分后的每一个子串 alert("拆分后的每一个子串: "+"' "+result+" '");&#125; 找到首次匹配的子串的开始位置 var text = "maybe JavaSript is more fun than Java!";var pattern2 = new RegExp("Java", "g");result = text.search(pattern);//显示首次匹配子串的开始位置alert("匹配子串的开始位置: "+result); exec方法详解 exec方法返回的其实并不是匹配结果字符串，而是一个对象 它的属性: index input 0。其中index是表示匹配在原字符串中的索引；而input则是表示输入的字符串； 至于0则是表示只有一个匹配结果，可以用下标0来引用这个匹配结果，这个数量可能改变。我们可以通过返回值的length属性来得知匹配结果的总数量。 function execReg(reg,str)&#123;var result = reg.exec(str);document.write('index:'+result.index+'&lt;br /&gt;'+'input:'+result.input+'&lt;br /&gt;');for(i=0;i&lt;result.length;i++)&#123;document.write('result['+i+']:'+result[i]+'&lt;br /&gt;')&#125;&#125;var reg = /w/;var str='bbs.bblueidea.com';execReg(reg,str); 结果如下： index:0 input:bbs.bblueidea.com result[0]:b 输入字符串为bbs.bblueidea.com； 匹配的b在原字符串的索引是0。 正则的匹配结果为一个，b； var reg = /(w)(w)(.+)/;var str='bbs.bblueidea.com';execReg(reg,str); 结果为： index:0 input:bbs.bblueidea.com result[0]:bbs.bblueidea.com result[1]:b result[2]:b result[3]:s.bblueidea.com 由上面两个例子可见，返回对象[0]就是整个正则表达式所匹配的内容。后续的元素则是各个子正则表达式的匹配内容。 //g修饰的区别 exec方法在返回结果对象的同时，还可能会更新原来的正则表达式，这就要看正则表达式是否设置了g修饰符。先来看两个例子吧： var reg = /b/;var str = 'bbs.blueidea.com';execReg(reg,str);execReg(reg,str); 结果如下： index:0 input:bbs.blueidea.com result[0]:b index:0 input:bbs.blueidea.com result[0]:b 也就是说，两次匹配的结果完全一样，从索引可以看出来，匹配的都是字符串首的b字符。 下面看看设置了g的正则表达式表现如何： var reg = /b/g;var str = 'bbs.blueidea.com';execReg(reg,str);execReg(reg,str); 结果如下： index:0 input:bbs.blueidea.com result[0]:b index:1 input:bbs.blueidea.com result[0]:b 可以看得出来，第二次匹配的是字符串的字符串的第二个b。这也就是g修饰符的作用了，下面来看exec是如何区别对待g和非g正则表达式的。 如果正则表达式没有设置g，那么exec方法不会对正则表达式有任何的影响，如果设置了g，那么exec执行之后会更新正则表达式的lastIndex属性，表示本次匹配后，所匹配字符串的下一个字符的索引，下一次再用这个正则表达式匹配字符串的时候就会从上次的lastIndex属性开始匹配，也就是上面两个例子结果不同的原因了。 test方法 test方法仅仅检查是否能够匹配str，并且返回布尔值以表示是否成功 match方法 与正则表达式的exec方法类似，该方法同样返回一个类似数组的对象，也有input和index属性。我们定义如下一个函数用来测试： function matchReg(reg,str)&#123; var result = str.match(reg);if(result )&#123;document.write('index:'+result.index+'&lt;br /&gt;'+'input:'+result.input+'&lt;br /&gt;');for(i=0;i&lt;result.length;i++)&#123;document.write('result['+i+']:'+result[i]+'&lt;br /&gt;')&#125;&#125;else&#123;alert('null：匹配失败！')&#125;&#125;var reg = /b/;var str = 'bbs.blueidea.com';matchReg(reg,str); 结果如下： index:0 input:bbs.blueidea.com result[0]:b 可见，和exec的结果一样。 但是如果正则表达式设置了g修饰符，exec和match的行为可就不一样了，见下例： index:undefined input:undefined result[0]:b result[1]:b result[2]:b 设置了g修饰符的正则表达式在完成一次成功匹配后不会停止，而是继续找到所有可以匹配到的字符。返回的结果包括了三个b。不过没有提供input和index这些信息。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>正则</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql errno:150]]></title>
    <url>%2F2013%2F01%2F10%2Fdb-mysql-err150%2F</url>
    <content type="text"><![CDATA[当你试图在mysql中创建一个外键的时候，这个出错会经常发生，这是非常令人沮丧的。像这种不能创建一个.frm 文件的报错好像暗示着操作系统的文件的权限错误或者其它原因，但实际上，这些都不是的，事实上，这个mysql报错已经被报告是一个mysql本身的bug并出现在mysql 开发者列表当中很多年了，然而这似乎又是一种误导。 在很多实例中，这种错误的发生都是因为mysql一直以来都不能很好的支持的关系的问题， 更不幸的是它也并没有指明到底是哪一个问题会导致上面那种错误，下面我把导致这个可怕 的150错误的常见原因列出来了，并且我以可能性的大小作了排序 已知的原因： 两个字段的类型或者大小不严格匹配，例如，如果一个是INT(10), 那么外键也必须设置成INT(10), 而不是 INT(11) 也不能是 TINYINT. 你得使用 SHOW 命令来查看字段的大小，因为一些查询浏览器有时候把 int(10) 和int(11) 都显示为integer。另外，你还必须确定两个字段是否一个为 SIGNED,而另一个又是UNSIGNED, 这两字段必须严格地一致匹配，更多关于signed 和 unsigned 的信息，请参阅：http://www.verysimple.com/blog/?p=57 你试图引用的其中一个外键没有建立起索引，或者不是一个primary key , 如果其中一个不是primary key 的放，你必须为它创建一个索引。 外键的名字是一个已经存在的一个键值了，这个时候，你应该检查你的数据库以确保外健名字是唯一的，或者你在键名后面加上几个随机的字符以测试是否是这个原因。 其中一个或者两个表是MyISAM引擎的表，若想要使用外键约束，必须是InnoDB引擎，（实际上，如果两个表都是MyISAM 引擎的，这个错误根本不会发生，但也不会产生外键），你可以通过查询浏览器来设置表的引擎类型 你可能设置了ON DELETE SET NULL, 但是相关的键的字段又设置成了NOTS NULL 值。你可能通过修改cascade 的属性值或者把字段属性设置成 allow null 来搞定这个bug. 请确定你的Charset 和 Collate 选项在表级和字段级上的一致 你可能设置为外键设置了一个默认值，如 default=0 在这个关系里面，其中的一个字段是一个混合键值中的一个，它没有自己独立的索引，这时，你必须为它创建一个独立的索引。 ALTER 声明中有语法错误 要连接的两个表的编码格式不同]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>db</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动更新变灰]]></title>
    <url>%2F2013%2F01%2F10%2Fsystem-window-update-disabled%2F</url>
    <content type="text"><![CDATA[win xp控制面板中系统自动更新变成灰色不能选择 解决办法如下： 开始-运行-regedit,打开注册表编辑器,在注册表里找: HKEY_LOCAL_MACHINE/SOFTWARE/Policies/Microsoft/Windows,展开Windows,将其下的 WindowsUpdate删除掉 另：还有很多方法参见http://hi.baidu.com/xxcxz/item/0e318fb9194495e84ec7fd2f]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>自动更新</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GWT 项目中代码分四级概念]]></title>
    <url>%2F2013%2F01%2F10%2Fjava-gwt-code-lv%2F</url>
    <content type="text"><![CDATA[GWT 项目中代码分四级概念：Application, Host Page, Module 和 EntryPoint。理论上讲：一个 Application, 有多个 Host Page, 一个 Host Page 有多个 Module，则一个 Module 有多个 EntryPoint,但是，实际上基本就是一个页面一个应用，也就是一个 GWT 工程。一般在 Hello World 应用中，整个一个工程是：一个页面，一个 Module，在一个EntryPoint。当然实际应用中，一般还是一个页面，而为个复用，就会为多个 Module， 而一个Module 也会有多个 EntryPoint。 使用多个 Module 和 EntryPoint 相对都是非常简单的。创建过程同官方的新建一个Module 和 EntryPoint 没什么两样。那么我们，还有一种需求就是需要一些额外的关注：一个 application , 多个 hostpage， 因为 GWT 默认项目就只是一个 Single Host Page 的 Application。其实，我们有很多人已经注意到了这一点，并且有人 open 了一个 gwt module 来帮助大家实现这一点，它就是 gwtmultipage 。 gwtmultipage 使用起来相当简单，简单三步就可以了： 1.加载 org.gwtmultipage.gwtmultipage 这个 GWT module java 包到项目中 2.修改主 Module 的 gwt.xml， EntryPoint 改成&lt;entry -point class=’org.gwtmultipage.client.EntrypointDispatcher’/&gt; 当然要先加上它所在的 module 3.在你的 EntryPoint 类名前加 annotation:@UrlPatternEntryPoint(value=”module.html”) 就可把 前端 jsp 或者 html 文件与 某个 EntryPoint 对应起来了。gwtmultipage 通过 org.gwtmultipage.client.EntrypointDispatcher 把 host page与 EntryPoint 一一对应。 EntrypointDispatcher 在这里就是一个单入口分发器。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>gwt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[改变当前浏览器窗口大小]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-js-window-resize%2F</url>
    <content type="text"><![CDATA[&lt;script language="JavaScript"&gt; self.resizeTo(200,300)&lt;/script&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>resize</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自定义js的trim()方法]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-js-trim%2F</url>
    <content type="text"><![CDATA[去除字符串左右两端的空格，在vbscript里面可以轻松地使用 trim、ltrim 或 rtrim，但在js中却没有这3个内置方法，需要手工编写。下面的实现方法是用到了正则表达式，效率不错，并把这三个方法加入String对象的内置方法中去。 写成类的方法格式如下：（str.trim();） &lt;script language="javascript"&gt; String.prototype.trim=function()&#123; return this.replace(/(^s*)|(s*$)/g, ""); &#125; String.prototype.ltrim=function()&#123; return this.replace(/(^s*)/g,""); &#125; String.prototype.rtrim=function()&#123; return this.replace(/(s*$)/g,""); &#125; &lt;/script&gt; 写成函数可以这样：(trim(str)) &lt;script type="text/javascript"&gt; function trim(str)&#123; //删除左右两端的空格 return str.replace(/(^s*)|(s*$)/g, ""); &#125; function ltrim(str)&#123; //删除左边的空格 return str.replace(/(^s*)/g,""); &#125; function rtrim(str)&#123; //删除右边的空格 return str.replace(/(s*$)/g,""); &#125; &lt;/script&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>trim</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Eclipse 的控制台console乱码]]></title>
    <url>%2F2013%2F01%2F10%2Fjava-eclipse-console%2F</url>
    <content type="text"><![CDATA[Eclipse 的控制台必须用GBK编码。 条件1，Window | Preferences | Workspace | Text file encoding | GBK编码。 这样定义的是整个工作区间的编码。 这样就把整个工作空间的编码格式定死了，但是如果某一个工程用的是不同的编码格式的话这样单独再解决。如下： 条件2，工程上 右键 | Properties | Resource | Text file encoding | UTF-8编码。或者适合的编码格式。这样定义的是整个工程的编码。 这样就把整个工程的编码格式定死了，但是如果某一个文件用的是不同的编码格式的话这样单独再解决。如下： 条件3，在某个文件上 右键| Properties | Resource | Text file encoding | UTF-8编码。或者适合的编码格式。这样定义的是单独某个文件的编码。 这里要说的是文件的实际编码格式优先用的是：第3个，其次再用2，最后先用1。有时候是123，必须满足条件。无论怎样这几种编码格式试一试就全知道了。 条件4，还有运行时编码设置如下：菜单：Run Configuration | 右侧的选项卡Common 的 Console Encoding 选择GBK编码。这个是用来控制console控制台显示，必须是GBK，就不会乱码。尽管1，2，3条件都不是GBK，只要4是GBK。控制台就不会乱码。 这样保证了工作空间和工程代码编程方式和工程里的单独文件的编码格式的不冲突。 我们想改变别人的代码的编码格式的话用如下方法：1：用记事本打开，2:改变下面的编码格式如UTF-8，3：另存为xxx.java。这样另存的编码格式就变成自己想要的编码格式了。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>乱码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js取radio值]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-js-radio%2F</url>
    <content type="text"><![CDATA[function ok()&#123; var temp=document.getElementsByName("radio"); for (i=0;i&lt;temp.length;i++)&#123; //遍历Radio if(temp[i].checked) &#123;alert("你选择了"+temp[i].value); //获取Radio的值 document.form2.textfield.value="你选择了"+temp[i].value; //传递给另外一个表单 &#125; &#125;&#125;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可拖动模式窗口]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-js-mode-window%2F</url>
    <content type="text"><![CDATA[&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312" /&gt; &lt;title&gt;可拖动模式窗口&lt;/title&gt; &lt;script language="javascript"&gt; function alertWin(title, msg, w, h)&#123; var titleheight = "22px"; // 提示窗口标题高度 var bordercolor = "#666699"; // 提示窗口的边框颜色 var titlecolor = "#FFFFFF"; // 提示窗口的标题颜色 var titlebgcolor = "#666699"; // 提示窗口的标题背景色 var bgcolor = "#FFFFFF"; // 提示内容的背景色 var iWidth = document.documentElement.clientWidth; var iHeight = document.documentElement.clientHeight; var bgObj = document.createElement("div"); bgObj.style.cssText = "position:absolute;left:0px;top:0px;width:"+iWidth+"px;height:"+Math.max(document.body.clientHeight, iHeight)+"px;filter:Alpha(Opacity=30);opacity:0.3;background-color:#000000;z-index:101;"; document.body.appendChild(bgObj); var msgObj=document.createElement("div"); msgObj.style.cssText = "position:absolute;font:11px ‘宋体’;top:"+(iHeight-h)/2+"px;left:"+(iWidth-w)/2+"px;width:"+w+"px;height:"+h+"px;text-align:center;border:1px solid "+bordercolor+";background-color:"+bgcolor+";padding:1px;line-height:22px;z-index:102;"; document.body.appendChild(msgObj); var table = document.createElement("table"); msgObj.appendChild(table); table.style.cssText = "margin:0px;border:0px;padding:0px;"; table.cellSpacing = 0; var tr = table.insertRow(-1); var titleBar = tr.insertCell(-1); titleBar.style.cssText = "width:100%;height:"+titleheight+"px;text-align:left;padding:3px;margin:0px;font:bold 13px ‘宋体’;color:"+titlecolor+";border:1px solid " + bordercolor + ";cursor:move;background-color:" + titlebgcolor; titleBar.style.paddingLeft = "10px"; titleBar.innerHTML = title; var moveX = 0; var moveY = 0; var moveTop = 0; var moveLeft = 0; var moveable = false; var docMouseMoveEvent = document.onmousemove; var docMouseUpEvent = document.onmouseup; titleBar.onmousedown = function() &#123; var evt = getEvent(); moveable = true; moveX = evt.clientX; moveY = evt.clientY; moveTop = parseInt(msgObj.style.top); moveLeft = parseInt(msgObj.style.left); document.onmousemove = function() &#123; if (moveable) &#123; var evt = getEvent(); var x = moveLeft + evt.clientX – moveX; var y = moveTop + evt.clientY – moveY; if ( x &gt; 0 &amp;&amp;( x + w &lt; iWidth) &amp;&amp; y &gt; 0 &amp;&amp; (y + h &lt; iHeight) ) &#123; msgObj.style.left = x + "px"; msgObj.style.top = y + "px"; &#125; &#125; &#125;; document.onmouseup = function () &#123; if (moveable) &#123; document.onmousemove = docMouseMoveEvent; document.onmouseup = docMouseUpEvent; moveable = false; moveX = 0; moveY = 0; moveTop = 0; moveLeft = 0; &#125; &#125;; &#125; var closeBtn = tr.insertCell(-1); closeBtn.style.cssText = "cursor:pointer; padding:2px;background-color:" + titlebgcolor; closeBtn.innerHTML = "&lt;span style=’font-size:15pt; color:"+titlecolor+";’&gt;×&lt;/span&gt;"; closeBtn.onclick = function()&#123; document.body.removeChild(bgObj); document.body.removeChild(msgObj); &#125; var msgBox = table.insertRow(-1).insertCell(-1); msgBox.style.cssText = "font:10pt ‘宋体’;"; msgBox.colSpan = 2; msgBox.innerHTML = msg; // 获得事件Event对象，用于兼容IE和FireFox function getEvent() &#123; return window.event || arguments.callee.caller.arguments[0]; &#125; &#125; &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;input type="button" value="点这里" onclick="alertWin(‘标题’,'这里是内容’,300,200);" /&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js判断数字]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-js-number-check%2F</url>
    <content type="text"><![CDATA[&lt;input type="text" id="int" name="int" onkeyup="if(isNaN(this.value))&#123;alert('只能输入数字！');this.value='';&#125;"&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>数字</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1像素表格]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-1px-table%2F</url>
    <content type="text"><![CDATA[&lt;style&gt; table&#123; background:black; width:600; height:100; &#125;table td &#123; background:white; &#125; &lt;/style&gt; &lt;table cellpadding=1 cellspacing=1&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[禁止状态栏显示链接]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-disabled-statebar%2F</url>
    <content type="text"><![CDATA[&lt;html&gt;&lt;head&gt;&lt;title&gt;禁止状态栏显示链接&lt;/title&gt;&lt;/head&gt;&lt;body onMouseOver="window.status='你看不到我看不到我';return true"&gt;&lt;a href="/"&gt;不知道写什么&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>ie</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrollLeft,scrollTop等等详解]]></title>
    <url>%2F2013%2F01%2F10%2Fweb-scrollxxx%2F</url>
    <content type="text"><![CDATA[一张图 image 网页可见区域宽： document.body.clientWidth; 网页可见区域高： document.body.clientHeight; 网页可见区域宽： document.body.offsetWidth (包括边线的宽); 网页可见区域高： document.body.offsetHeight (包括边线的宽); 网页正文全文宽： document.body.scrollWidth; 网页正文全文高： document.body.scrollHeight; 网页被卷去的高： document.body.scrollTop; 网页被卷去的左： document.body.scrollLeft; 网页正文部分上： window.screenTop; 网页正文部分左： window.screenLeft; 屏幕分辨率的高： window.screen.height; 屏幕分辨率的宽： window.screen.width; 屏幕可用工作区高度： window.screen.availHeight; 屏幕可用工作区宽度：window.screen.availWidth; 1、offsetLeft 假设 obj 为某个 HTML 控件。 obj.offsetTop 指 obj 距离上方或上层控件的位置，整型，单位像素。 obj.offsetLeft 指 obj 距离左方或上层控件的位置，整型，单位像素。 obj.offsetWidth 指 obj 控件自身的宽度，整型，单位像素。 obj.offsetHeight 指 obj 控件自身的高度，整型，单位像素。 我们对前面提到的“上方或上层”与“左方或上层”控件作个说明。 例如： “提交”按钮的 offsetTop 指“提交”按钮距“tool”层上边框的距离，因为距其上边最近的是 “tool” 层的上边框。 “重置”按钮的 offsetTop 指“重置”按钮距“tool”层上边框的距离，因为距其上边最近的是 “tool” 层的上边框。 “提交”按钮的 offsetLeft 指“提交”按钮距“tool”层左边框的距离，因为距其左边最近的是 “tool” 层的左边框。 “重置”按钮的 offsetLeft 指“重置”按钮距“提交”按钮右边框的距离，因为距其左边最近的是“提交”按钮的右边框。 以上属性在 FireFox 中也有效。 另 外：我们这里所说的是指 HTML 控件的属性值，并不是 document.body，document.body 的值在不同浏览器中有不同解释（实际上大多数环境是由于对 document.body 解释不同造成的，并不是由于对 offset 解释不同造成的），点击这里查看不同点。 标题：offsetTop 与 style.top 的区别 预备知识：offsetTop、offsetLeft、offsetWidth、offsetHeight 我们知道 offsetTop 可以获得 HTML 元素距离上方或外层元素的位置，style.top 也是可以的，二者的区别是： 一、offsetTop 返回的是数字，而 style.top 返回的是字符串，除了数字外还带有单位：px。 二、offsetTop 只读，而 style.top 可读写。 三、如果没有给 HTML 元素指定过 top 样式，则 style.top 返回的是空字符串。 offsetLeft 与 style.left、offsetWidth 与 style.width、offsetHeight 与 style.height 也是同样道理。 标题：clientHeight、offsetHeight和scrollHeight 我们这里说说四种浏览器对 document.body 的 clientHeight、offsetHeight 和 scrollHeight 的解释，这里说的是 document.body，如果是 HTML 控件，则又有不同，点击这里查看。 这四种浏览器分别为IE（Internet Explorer）、NS（Netscape）、Opera、FF（FireFox）。 2、clientHeight clientHeight 大家对 clientHeight 都没有什么异议，都认为是内容可视区域的高度，也就是说页面浏览器中可以看到内容的这个区域的高度，一般是最后一个工具条以下到状态栏以上的这个区域，与页面内容无关。 offsetHeight IE、Opera 认为 offsetHeight = clientHeight + 滚动条 + 边框。 NS、FF 认为 offsetHeight 是网页内容实际高度，可以小于 clientHeight。 scrollHeight IE、Opera 认为 scrollHeight 是网页内容实际高度，可以小于 clientHeight。 NS、FF 认为 scrollHeight 是网页内容高度，不过最小值是 clientHeight。 简单地说 clientHeight 就是透过浏览器看内容的这个区域高度。 NS、 FF 认为 offsetHeight 和 scrollHeight 都是网页内容高度，只不过当网页内容高度小于等于 clientHeight 时，scrollHeight 的值是 clientHeight，而 offsetHeight 可以小于 clientHeight。 IE、Opera 认为 offsetHeight 是可视区域 clientHeight 滚动条加边框。scrollHeight 则是网页内容实际高度。 同理 clientWidth、offsetWidth 和 scrollWidth 的解释与上面相同，只是把高度换成宽度即可。 但是 FF 在不同的 DOCTYPE 中对 clientHeight 的解释不同， xhtml 1 trasitional 中则不是如上解释的。其它浏览器则不存在此问题。 标题：scrollTop、scrollLeft、scrollWidth、scrollHeight 3、scrollLeft scrollTop 是“卷”起来的高度值，示例： 如果为 p 设置了 scrollTop，这些内容可能不会完全显示。 var p = document.getElementById("p"); p.scrollTop = 10; 由于为外层元素 p 设置了 scrollTop，所以内层元素会向上卷。 scrollLeft 也是类似道理。 我们已经知道 offsetHeight 是自身元素的宽度。 而 scrollHeight 是内部元素的绝对宽度，包含内部元素的隐藏的部分。 上述中 p 的 scrollHeight 为 300，而 p 的 offsetHeight 为 100。 scrollWidth 也是类似道理。 IE 和 FireFox 全面支持，而 Netscape 和 Opera 不支持 scrollTop、scrollLeft（document.body 除外）。 发表时间：2007-10-15 20:20:16 标题：offsetTop、offsetLeft、offsetWidth、offsetHeight 4、clientLeft 返回对象的offsetLeft属性值和到当前窗口左边的真实值之间的距离，可以理解为边框的长度 一直以来对offsetLeft，offsetTop，scrollLeft，scrollTop这几个方法很迷糊，花了一天的时间好好的学习了一下．得出了以下的结果： 1.offsetTop : 当前对象到其上级层顶部的距离. 不能对其进行赋值.设置对象到页面顶部的距离请用style.top属性. 2.offsetLeft : 当前对象到其上级层左边的距离. 不能对其进行赋值.设置对象到页面左部的距离请用style.left属性. 3.offsetWidth : 当前对象的宽度. 与style.width属性的区别在于:如对象的宽度设定值为百分比宽度,则无论页面变大还是变小,style.width都返回此百分比,而offsetWidth则返回在不同页面中对象的宽度值而不是百分比值 4.offsetHeight : 与style.height属性的区别在于:如对象的宽度设定值为百分比高度,则无论页面变大还是变小,style.height都返回此百分比,而offsetHeight则返回在不同页面中对象的高度值而不是百分比值 5.offsetParent : 当前对象的上级层对象. 注意.如果对象是包括在一个DIV中时,此DIV不会被当做是此对象的上级层,(即对象的上级层会跳过DIV对象)上级层是Table时则不会有问题. 利用这个属性，可以得到当前对象在不同大小的页面中的绝对位置． 得到绝对位置脚本代码 function GetPosition(obj) { var left = 0; var top = 0; while(obj != document.body) { left = obj.offsetLeft; top = obj.offsetTop; obj = obj.offsetParent; } alert(&quot;Left Is : &quot; + left + “\r\n” + &quot;Top Is : &quot; + top); } 6.scrollLeft : 对象的最左边到对象在当前窗口显示的范围内的左边的距离． 即是在出现了横向滚动条的情况下，滚动条拉动的距离． 7.scrollTop 对象的最顶部到对象在当前窗口显示的范围内的顶边的距离． 即是在出现了纵向滚动条的情况下，滚动条拉动的距离． 我们这里说说四种浏览器对 document.body 的 clientHeight、offsetHeight 和 scrollHeight 的解释，这里说的是 document.body，如果是 HTML 控件，则又有不同，点击这里查看。 这四种浏览器分别为IE（Internet Explorer）、NS（Netscape）、Opera、FF（FireFox）。 clientHeight 大家对 clientHeight 都没有什么异议，都认为是内容可视区域的高度，也就是说页面浏览器中可以看到内容的这个区域的高度，一般是最后一个工具条以下到状态栏以上的这个区域，与页面内容无关。 offsetHeight IE、Opera 认为 offsetHeight = clientHeight + 滚动条 + 边框。 NS、FF 认为 offsetHeight 是网页内容实际高度，可以小于 clientHeight。 scrollHeight IE、Opera 认为 scrollHeight 是网页内容实际高度，可以小于 clientHeight。 NS、FF 认为 scrollHeight 是网页内容高度，不过最小值是 clientHeight。 简单地说 clientHeight 就是透过浏览器看内容的这个区域高度。 NS、 FF 认为 offsetHeight 和 scrollHeight 都是网页内容高度，只不过当网页内容高度小于等于 clientHeight 时，scrollHeight 的值是 clientHeight，而 offsetHeight 可以小于 clientHeight。 IE、Opera 认为 offsetHeight 是可视区域 clientHeight 滚动条加边框。scrollHeight 则是网页内容实际高度。 同理 clientWidth、offsetWidth 和 scrollWidth 的解释与上面相同，只是把高度换成宽度即可。 说明 以 上基于 DTD HTML 4.01 Transitional，如果是 DTD XHTML 1.0 Transitional 则意义又会不同，在 XHTML 中这三个值都是同一个值，都表示内容的实际高度。新版本的浏览器大多支持根据页面指定的 DOCTYPE 来启用不同的解释器。下载或浏览测试文件。]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bt5破解无线网络教程]]></title>
    <url>%2F2013%2F01%2F08%2Flinux-bt5-wlan%2F</url>
    <content type="text"><![CDATA[第一部分 虚拟机的安装 下载完后，先安装虚拟机，解压 bt5 2．进入虚拟机目录，打开 bt5 等一下就出现这个，下来就是Next下一步点起走就行了 bt5 这一步注册， bt5 打开虚拟机目录下New.keygen.exe bt5 bt5 复制注册码 bt5 下一步，即可！ bt5 最后问是否重启，点No，完成安装！ 需要汉化的朋友可以运行目录下setup.exe bt5 汉化很简单，下一步就是，不过需要注意 汉化过程中注册有捆绑软件，不需要的，不打勾即可！ 第二部分 虚拟机设置，加载ISO文件 启动桌面上的VMware Workstation! bt5 先新建 &gt; 虚拟机 bt5 bt5 bt5 bt5 bt5 bt5 完成以后，主窗口就多一个选项，就是刚刚建立的 bt5 点编辑虚拟机设置 bt5 选CD-ROM,右下角，使用ISO镜像 bt5 bt5 选中，bt5.iso bt5 确定后，点启动虚拟机 bt5 启动时间大约40秒，看你计算机的配置怎么样 bt5 bt5 bt5 bt5 bt5 解决办法： 虚拟机 &gt; 可移动设备 &gt; USB设备 &gt; Realtek Usb设备 选的是你的网卡，有可能名字不一样，选择你的那个网卡就可以了！ bt5 bt5 再次启动软件就不会提供没有网卡了不 bt5 提示：破解的时候把方式选择那里的所有方式都选上，这样可以提供破解成功率！ bt5 ****密码出来了 bt5 Hex key就是密码 6161613132 成功了！]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>bt5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[could not initialize proxy – no Session]]></title>
    <url>%2F2013%2F01%2F07%2Fjava-hibernate-could-not-initialize-proxy%2F</url>
    <content type="text"><![CDATA[在&lt;many-to-on&gt;中这错误很常见，字面意义就是不能被初始化，因为session已经关闭了。 简单理解就是因为，你使用了lazy=true，这样hibernate在从数据库中调数据的时候是不会把关联的对象查出来的，而是保存一个获取值得方法，在你使用getXXX()调用的时候，hiberante会利用这个保存的方法去从数据库中取数据。而往往我们在jsp页面中使用getXXX()准备展示数据的时候，session早已经在dao中就关闭了，我们该如何解决这种异常呢？ 简单的说有三种： 把lazy设成false,最简单。 我没试过，但听说过 在web.xml中加入 &lt;filter&gt; &lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt; &lt;filter-class&gt; org.springframework.orm.hibernate3.support.OpenSessionInViewFilter &lt;/filter-class&gt; &lt;/filter&gt; &lt;filter-mapping&gt; &lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt; &lt;url-pattern&gt;*.do&lt;/url-pattern&gt; &lt;/filter-mapping&gt; 我用的方法，也是我认为比较不错的方法，灵活性更好。用left join fetch或inner join fetch语法。 例如：from Item i left join fetch i.parentItem ii 解释一下Item表是一个自关联的表，它的关联关系在hbm.xml中配置好了。 如下： 程序代码 &lt;many-to-one name="parentItem" lazy="false" fetch="join" class="cn.sports.matchs.model.Item"&gt; &lt;column name="PARENT_ID"&gt;&lt;/column&gt; &lt;/many-to-one&gt; 在Item类中 程序代码 private Item parentItem; 关于lazy机制： 延迟初始化错误是运用Hibernate开发项目时最常见的错误。如果对一个类或者集合配置了延迟检索策略，那么必须当代理类实例或代理集合处于持久化状态（即处于Session范围内）时，才能初始化它。如果在游离状态时才初始化它，就会产生延迟初始化错误。 下面把Customer.hbm.xml文件的元素的lazy属性设为true，表示使用延迟检索策略： &lt;class name="mypack.Customer" table="CUSTOMERS" lazy="true"&gt; 当执行Session的load()方法时，Hibernate不会立即执行查询CUSTOMERS表的select语句，仅仅返回Customer类的代理类的实例，这个代理类具由以下特征： （1）由Hibernate在运行时动态生成，它扩展了Customer类，因此它继承了Customer类的所有属性和方法，但它的实现对于应用程序是透明的。 （2）当Hibernate创建Customer代理类实例时，仅仅初始化了它的OID属性，其他属性都为null，因此这个代理类实例占用的内存很少。 （3）当应用程序第一次访问Customer代理类实例时（例如调用customer.getXXX()或customer.setXXX()方法）， Hibernate会初始化代理类实例，在初始化过程中执行select语句，真正从数据库中加载Customer对象的所有数据。但有个例外，那就是当应用程序访问Customer代理类实例的getId()方法时，Hibernate不会初始化代理类实例，因为在创建代理类实例时OID就存在了，不必到数据库中去查询。 提示：Hibernate采用CGLIB工具来生成持久化类的代理类。CGLIB是一个功能强大的Java字节码生成工具，它能够在程序运行时动态生成扩展 Java类或者实现Java接口的代理类。关于CGLIB的更多知识，请参考：http://cglib.sourceforge.net/。 以下代码先通过Session的load()方法加载Customer对象，然后访问它的name属性： tx = session.beginTransaction(); Customer customer=(Customer)session.load(Customer.class,new Long(1)); customer.getName(); tx.commit(); 在运行session.load()方法时Hibernate不执行任何select语句，仅仅返回Customer类的代理类的实例，它的OID为1，这是由load()方法的第二个参数指定的。当应用程序调用customer.getName()方法时，Hibernate会初始化Customer代理类实例，从数据库中加载Customer对象的数据，执行以下select语句： select * from CUSTOMERS where ID=1; select * from orDERS where CUSTOMER_ID=1; 当元素的lazy属性为true，会影响Session的load()方法的各种运行时行为，下面举例说明。 1．如果加载的Customer对象在数据库中不存在，Session的load()方法不会抛出异常，只有当运行customer.getName()方法时才会抛出以下异常： ERROR LazyInitializer:63 -Exception initializing proxy net.sf.hibernate.ObjectNotFoundException: No row with thegiven identifier exists: 1, of class: mypack.Customer 2．如果在整个Session范围内，应用程序没有访问过Customer对象，那么Customer代理类的实例一直不会被初始化，Hibernate不会执行任何select语句。以下代码试图在关闭Session后访问Customer游离对象： tx = session.beginTransaction(); Customer customer=(Customer)session.load(Customer.class,new Long(1)); tx.commit(); session.close(); customer.getName(); 由于引用变量customer引用的Customer代理类的实例在Session范围内始终没有被初始化，因此在执行customer.getName()方法时，Hibernate会抛出以下异常： ERROR LazyInitializer:63 -Exception initializing proxy net.sf.hibernate.HibernateException: Couldnotinitializeproxy-theowningSessionwasclosed 由此可见，Customer代理类的实例只有在当前Session范围内才能被初始化。 3．net.sf.hibernate.Hibernate类的initialize()静态方法用于在Session范围内显式初始化代理类实例，isInitialized()方法用于判断代理类实例是否已经被初始化。例如： tx = session.beginTransaction(); Customer customer=(Customer)session.load(Customer.class,new Long(1)); if(!Hibernate.isInitialized(customer)) Hibernate.initialize(customer); tx.commit(); session.close(); customer.getName(); 以上代码在Session范围内通过Hibernate类的initialize()方法显式初始化了Customer代理类实例，因此当Session关闭后，可以正常访问Customer游离对象。 4．当应用程序访问代理类实例的getId()方法时，不会触发Hibernate初始化代理类实例的行为，例如： tx = session.beginTransaction(); Customer customer=(Customer)session.load(Customer.class,new Long(1)); customer.getId(); tx.commit(); session.close(); customer.getName(); 当应用程序访问customer.getId()方法时，该方法直接返回Customer代理类实例的OID值，无需查询数据库。由于引用变量 customer始终引用的是没有被初始化的Customer代理类实例，因此当Session关闭后再执行customer.getName()方法， Hibernate会抛出以下异常： ERROR LazyInitializer:63 -Exception initializing proxy net.sf.hibernate.HibernateException: Couldnotinitializeproxy-theowningSessionwasclosed 解决方法： 由于hibernate采用了lazy=true,这样当你用hibernate查询时,返回实际为利用cglib增强的代理类,但其并没有实际填充;当你在前端,利用它来取值(getXXX)时,这时Hibernate才会到数据库执行查询,并填充对象,但此时如果和这个代理类相关的session已关闭掉,就会产生种错误. 在做一对多时，有时会出现&quot;could not initialize proxy – clothe owning Session was sed,这个好像是hibernate的缓存问题.问题解决:需要在里设置lazy=“false”. 但有可能会引发另一个异常叫 failed to lazily initialize a collection of role: XXXXXXXX, no session or session was closed 解决方法:在web.xml中加入 &lt;filter&gt; &lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt; &lt;filter-class&gt; org.springframework.orm.hibernate3.support.OpenSessionInViewFilter &lt;/filter-class&gt; &lt;/filter &gt; &lt;filter-mapping&gt; &lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt; &lt;url-pattern&gt;*.do&lt;/url-pattern&gt; &lt;/filter-mapping&gt; 就可以了; 参考了: Hibernate与延迟加载： Hibernate对象关系映射提供延迟的与非延迟的对象初始化。非延迟加载在读取一个对象的时候会将与这个对象所有相关的其他对象一起读取出来。这有时会导致成百的（如果不是成千的话）select语句在读取对象的时候执行。这个问题有时出现在使用双向关系的时候，经常会导致整个数据库都在初始化的阶段被读出来了。当然，你可以不厌其烦地检查每一个对象与其他对象的关系，并把那些最昂贵的删除，但是到最后，我们可能会因此失去了本想在ORM工具中获得的便利。 一个明显的解决方法是使用Hibernate提供的延迟加载机制。这种初始化策略只在一个对象调用它的一对多或多对多关系时才将关系对象读取出来。这个过程对开发者来说是透明的，而且只进行了很少的数据库操作请求，因此会得到比较明显的性能提升。这项技术的一个缺陷是延迟加载技术要求一个Hibernate会话要在对象使用的时候一直开着。这会成为通过使用DAO模式将持久层抽象出来时的一个主要问题。为了将持久化机制完全地抽象出来，所有的数据库逻辑，包括打开或关闭会话，都不能在应用层出现。最常见的是，一些实现了简单接口的DAO实现类将数据库逻辑完全封装起来了。一种快速但是笨拙的解决方法是放弃DAO模式，将数据库连接逻辑加到应用层中来。这可能对一些小的应用程序有效，但是在大的系统中，这是一个严重的设计缺陷，妨碍了系统的可扩展性。 在Web层进行延迟加载 幸运的是，Spring框架为Hibernate延迟加载与DAO模式的整合提供了一种方便的解决方法。对那些不熟悉Spring与Hibernate集成使用的人，我不会在这里讨论过多的细节，但是我建议你去了解Hibernate与Spring集成的数据访问。以一个Web应用为例，Spring提供了OpenSessionInViewFilter和OpenSessionInViewInterceptor。我们可以随意选择一个类来实现相同的功能。两种方法唯一的不同就在于interceptor在Spring容器中运行并被配置在web应用的上下文中，而Filter在Spring之前运行并被配置在web.xml中。不管用哪个，他们都在请求将当前会话与当前（数据库）线程绑定时打开Hibernate会话。一旦已绑定到线程，这个打开了的Hibernate会话可以在DAO实现类中透明地使用。这个会话会为延迟加载数据库中值对象的视图保持打开状态。一旦这个逻辑视图完成了，Hibernate会话会在Filter的doFilter方法或者Interceptor的postHandle方法中被关闭。下面是每个组件的配置示例： Interceptor的配置: &lt;bean name="openSessionInViewInterceptor" class="org.springframework.orm.hibernate.support.OpenSessionInViewInterceptor"&gt; &lt;property name="sessionFactory"&gt;&lt;ref bean="sessionFactory"/&gt;&lt;/property&gt; &lt;/bean&gt; &lt;/beans&gt; Filter的配置 &lt;web-app&gt;&lt;filter&gt; &lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt; &lt;filter-class&gt; org.springframework.orm.hibernate.support.OpenSessionInViewFilter &lt;/filter-class&gt; &lt;/filter&gt;&lt;filter-mapping&gt; &lt;filter-name&gt;hibernateFilter&lt;/filter-name&gt; &lt;url-pattern&gt;*. spring &lt;/url-pattern&gt; &lt;/filter-mapping&gt;&lt;/web-app&gt; 实现Hibernate的Dao接口来使用打开的会话是很容易的。事实上，如果你已经使用了Spring框架来实现你的Hibernate Dao,很可能你不需要改变任何东西。方便的HibernateTemplate公用组件使访问数据库变成小菜一碟，而DAO接口只有通过这个组件才可以访问到数据库。下面是一个示例的DAO： public class HibernateProductDAO extends HibernateDaoSupport implements ProductDAO &#123;public Product getProduct(Integer productId) &#123; return (Product)getHibernateTemplate().load(Product.class, productId); &#125;public Integer saveProduct(Product product) &#123; return (Integer) getHibernateTemplate().save(product); &#125;public void updateProduct(Product product) &#123; getHibernateTemplate().update(product); &#125; &#125; 在业务逻辑层中使用延迟加载 即使在视图外面，Spring框架也通过使用AOP 拦截器 HibernateInterceptor来使得延迟加载变得很容易实现。这个Hibernate 拦截器透明地将调用配置在Spring应用程序上下文中的业务对象中方法的请求拦截下来，在调用方法之前打开一个Hibernate会话，然后在方法执行完之后将会话关闭。让我们来看一个简单的例子，假设我们有一个接口BussinessObject： public interface BusinessObject &#123; public void doSomethingThatInvolvesDaos(); &#125; 类BusinessObjectImpl实现了BusinessObject接口: public class BusinessObjectImpl implements BusinessObject &#123; public void doSomethingThatInvolvesDaos() &#123; // lots of logic that calls // DAO classes Which access // data objects lazily &#125; &#125; 通过在Spring应用程序上下文中的一些配置，我们可以让将调用BusinessObject的方法拦截下来，再令它的方法支持延迟加载。看看下面的一个程序片段： &lt;beans&gt; &lt;bean id="hibernateInterceptor" class="org.springframework.orm.hibernate.HibernateInterceptor"&gt; &lt;property name="sessionFactory"&gt; &lt;ref bean="sessionFactory"/&gt; &lt;/property&gt; &lt;/bean&gt; &lt;bean id="businessObjectTarget" class="com.acompany.BusinessObjectImpl"&gt; &lt;property name="someDAO"&gt;&lt;ref bean="someDAO"/&gt;&lt;/property&gt; &lt;/bean&gt; &lt;bean id="businessObject" class="org.springframework.aop.framework.ProxyFactoryBean"&gt; &lt;property name="target"&gt;&lt;ref bean="businessObjectTarget"/&gt;&lt;/property&gt; &lt;property name="proxyInterfaces"&gt; &lt;value&gt;com.acompany.BusinessObject&lt;/value&gt; &lt;/property&gt; &lt;property name="interceptorNames"&gt; &lt;list&gt; &lt;value&gt;hibernateInterceptor&lt;/value&gt; &lt;/list&gt; &lt;/property&gt; &lt;/bean&gt; &lt;/beans&gt; 当businessObject被调用的时候，HibernateInterceptor打开一个Hibernate会话，并将调用请求传递给BusinessObjectImpl对象。当BusinessObjectImpl执行完成后，HibernateInterceptor透明地关闭了会话。应用层的代码不用了解任何持久层逻辑，还是实现了延迟加载。 在单元测试中测试延迟加载 最后，我们需要用J-Unit来测试我们的延迟加载程序。我们可以轻易地通过重写TestCase类中的setUp和tearDown方法来实现这个要求。我比较喜欢用这个方便的抽象类作为我所有测试类的基类。 public abstract class MyLazyTestCase extends TestCase &#123;private SessionFactory sessionFactory; private Session session;public void setUp() throws Exception &#123; super.setUp(); SessionFactory sessionFactory = (SessionFactory) getBean("sessionFactory"); session = SessionFactoryUtils.getSession(sessionFactory, true); Session s = sessionFactory.openSession(); TransactionSynchronizationManager.bindResource(sessionFactory, new SessionHolder(s));&#125;protected Object getBean(String beanName) &#123; //Code to get objects from Spring application context &#125;public void tearDown() throws Exception &#123; super.tearDown(); SessionHolder holder = (SessionHolder) TransactionSynchronizationManager.getResource(sessionFactory); Session s = holder.getSession(); s.flush(); TransactionSynchronizationManager.unbindResource(sessionFactory); SessionFactoryUtils.closeSessionIfNecessary(s, sessionFactory); &#125; &#125; 我们首先说利用lazy=false来解决问题，这种方法是很好用，但是在实际的过程并不实用，如果你某个对象关联好几个甚至十几个自对象，那么每次加载一个的话要执行很多HQL语句，可想而知这个效率问题啦，特别是在使用列表的时候。所以不实用，而在上述所说的“在业务逻辑层中使用延迟加载” 也是这种情况吧。 很多使用WEB的朋友都喜欢利用openSessionView来加载这个问题。不错我也喜欢用，简单方便。但是说几种情况： 在quartz中总不能使用openSessionView模式吧 在spring后拦截的过程中，如果取拦截对象中的子对象利用openSessionView也不行 还有很多情况是不能用的，那么怎么解决呢。有人说那就lazy=False吧，你想在单纯的解决一个quartz的时候调整整个WEB工程的加载好像不合适吧。 那怎么办呢，我觉得这个时候就可以考虑利用SQL语句使用这个重新加载一遍这个代理类，这样在想调用的时候才手动加载比较合适和方便吧，但是估计要多几行代码，好好考虑]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[IE工具栏上添加自己的按钮]]></title>
    <url>%2F2013%2F01%2F07%2Fsystem-ie-toolbar-plugin%2F</url>
    <content type="text"><![CDATA[问题提出 金山词霸、网络蚂蚁等软件安装后会向IE的工具条添加自己的按钮。按下按钮后还会作出相应的动作，这种功能是如何实现的呢？读完本文，您也可以将自己应用程序的按钮添加到IE的工具条中。 基本原理 从IE5开始便允许我们向工具栏添加自己的按钮，其本质就是修改注册表，添加创建此按钮所需的信息。 实现步骤 创建此按钮的GUID(globally unique identifier) 你可以通过Visual Studio中的Guidgen.exe来产生GUID。 例如我生成的GUID是{1FBA04EE-3024-11D2-8F1F-0000F87ABD16} 以下的例子中我都使用这个GUID来作说明。 创建子键HKEY_LOCAL_MACHINE\Software\Microsoft\Internet Explorer\Extensions{1FBA04EE-3024-11D2-8F1F-0000F87ABD16} 在此子键下创建如下字串值。 （1）CLSID 这是IE的CLSID，其值必须为{1FBA04EE-3024-11D2-8F1F-0000F87ABD16} （2）Default Visible 指明此按钮默认状态下是否可见，Yes表示可见,No为不可见 （3）ButtonText 按钮文字 （4）Icon 默认状态下的图标全路径，例如c:\vckbase.ico。也可以是EXE文件中包含的图标，例如：C:\PROGRA~1\NETANTS\NetAnts.exe,1000 （5）HotIcon 鼠标移到按钮上时的图标全路径 如下子键为按下按钮后需要执行的相应动作：可以是COM对象、浏览条Explorer Bar、脚本Script、可执行文件。 下面我们逐个进行介绍。 ①COM对象 你需要建立名为ClsidExtension的字串值，其值应该为此COM对象的GUID 例如金山词霸就使用ClsidExtension来调用自己的COM对象。 ②浏览条Explorer Bar 所谓浏览条就是类似我们按下往IE历史按钮后打开的历史记录列表，其本质好比MFC中的CReBar对象。 浏览条也可以自己制作， 因为超出了本文的范围，暂不作讲解。 为了在按下按钮后打开一个浏览条，你需要建立名为BandCLSID的字串值，其值为浏览条的CLSID ③脚本Script 按下按钮后执行的脚本，例如：&quot;%SystemRoot%\web\related.htm&quot; 你可以在这个HTML文件里面加上脚本来得到IE当前的许多信息，需要注意的是假如你想通过Script打开非脚本的HTML文件是不可行的。 请参考如下NetAnts取得当前页所有链接的脚本代码 －－On Error Resume Next －－set NetAntsApi = CreateObject( "NetAnts.API" ) －－if err0 then －－ －－Alert("NetAnts not properly installed on this PC!") －－else －－ －－set links = external.menuArguments.document.links －－ －－ReDim params(links.length*2) －－ －－params(0)=external.menuArguments.document.Url －－ －－for i = 0 to links.length-1 －－ －－ －－params(i*2+1)=links(i).href －－ －－ －－params(i*2+2)=links(i).innerText －－ －－next －－ －－NetAntsApi.AddUrlList params －－end if < /script> 我们再看一个比较有用的脚本,这段脚本的作用是得到当前地址，并打开此网址的首页。 －－//userURL得到的是当前地址,例如是http://www.vckbase.com/article/controls/index.html －－userURL=external.menuArguments.location.href; －－protocolIndex=userURL.indexOf("://",4); －－serverIndex=userURL.indexOf("/",protocolIndex + 3); －－finalURL=userURL.substring(0,serverIndex); －－external.menuArguments.open(finalURL, "_blank");///打开网址http://www.vckbase.com/ < /script> 关于external等对象的具体使用方法请参阅微软的《动态HTML开发参考大全》–人民邮电出版社出版 ④可执行文件 假如我们想让IE在按下按钮后执行一个可执行文件, 你可以增加名为Exec的字串值，其值为此可执行文件的全路径， 例如c:\windows\notepad.exe或者是一个网址http://www.vckbase.com/index.html 下面我们介绍一个简单的例子。 void CIEButtonDlg::OnAdd() { －－///这是由GUIDGEN产生的GUID：{06926B30-424E-4f1c-8EE3-543CD96573DC} －－CRegKey reg; －－char KeyName[]="Software\\Microsoft\\Internet Explorer\\Extensions\\{06926B30-424E-4f1c-8EE3-543CD96573DC}"; －－TCHAR PathName[MAX_PATH]; －－TCHAR IconPathName[MAX_PATH]; ///正常时的图标全路径 －－TCHAR HotIconPathName[MAX_PATH]; ///鼠标覆盖时的图标全路径 －－GetModuleFileName(0,PathName,MAX_PATH); ///得到本可执行文件的路径 －－strcpy(IconPathName,PathName); －－strcpy(HotIconPathName,PathName); －－strcat(HotIconPathName,",131"); ///131是图标的ID，你可以以资源方式打开EXE文件就可以看到所有资源及其ID －－strcat(IconPathName,",129"); －－reg.Create(HKEY_LOCAL_MACHINE,KeyName); －－reg.SetValue("{1FBA04EE-3024-11D2-8F1F-0000F87ABD16}","CLSID"); －－reg.SetValue("Yes","Default Visible"); －－reg.SetValue("VC知识库","ButtonText"); －－reg.SetValue(IconPathName,"Icon"); －－reg.SetValue(HotIconPathName,"HotIcon"); －－/////假如是执行脚本，可以是reg.SetValue("c:\\test.html","Script"); ///在test.html 存放你的脚本代码 －－reg.SetValue("http://www.vckbase.com/","Exec");///打开网页 }]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>ie</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu开启ssh服务]]></title>
    <url>%2F2013%2F01%2F05%2Flinux-ubuntu-ssh-server%2F</url>
    <content type="text"><![CDATA[网上有很多介绍在Ubuntu下开启SSH服务的文章，但大多数介绍的方法测试后都不太理想，均不能实现远程登录到Ubuntu上，最后分析原因是都没有真正开启ssh-server服务。最终成功的方法如下： sudo apt-get install openssh-server Ubuntu缺省安装了openssh-client,所以在这里就不安装了，如果你的系统没有安装的话，再用apt-get安装上即可。 然后确认sshserver是否启动了： ps -e |grep ssh 如果只有ssh-agent那ssh-server还没有启动，需要/etc/init.d/ssh start，如果看到sshd那说明ssh-server已经启动了。 ssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。然后重启SSH服务： sudo /etc/init.d/ssh resar ssh连接：ssh xjtu129@202.117.15.165 ————————————————- 首先在服务器上安装ssh的服务器端。 $ sudo aptitude install openssh-server 启动ssh-server。 $ /etc/init.d/ssh restart 确认ssh-server已经正常工作。 $ netstat -tlp tcp6 0 0 *:ssh : LISTEN – 看到上面这一行输出说明ssh-server已经在运行了。 在客户端通过ssh登录服务器。假设服务器的IP地址是192.168.0.103，登录的用户名是hyx。 $ ssh -l hyx 192.168.0.103 接下来会提示输入密码，然后就能成功登录到服务器上了]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[怎么查看端口占用情况]]></title>
    <url>%2F2013%2F01%2F05%2Flinux-port-view%2F</url>
    <content type="text"><![CDATA[开始–运行–cmd 进入命令提示符 输入netstat -ano 即可看到所有连接的PID 之后在任务管理器中找到这个PID所对应的程序如果任务管理器中没有PID这一项,可以在任务管理器中选&quot;查看&quot;-“选择列” 经常，我们在启动应用的时候发现系统需要的端口被别的程序占用，如何知道谁占有了我们需要的端口，很多人都比较头疼，下面就介绍一种非常简单的方法，希望对大家有用 假如我们需要确定谁占用了我们的9050端口 1、Windows平台 在windows命令行窗口下执行： C:&gt;netstat -aon|findstr "9050"TCP 127.0.0.1:9050 0.0.0.0:0 LISTENING 2016 看到了吗，端口被进程号为2016的进程占用，继续执行下面命令： C:&gt;tasklist|findstr "2016"tor.exe 2016 Console 0 16,064 K 很清楚吧，tor占用了你的端口。]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>端口</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装Ubuntu后找不到windows sudo update-grub]]></title>
    <url>%2F2013%2F01%2F05%2Flinux-ubuntu-update-grub%2F</url>
    <content type="text"><![CDATA[我已经在Ubuntu 9.10里通过终端sudo update-grub两次了，结果还是一样不能启动XP和Windows 7。以下是在一位好心的网友的热心帮助下，经过本人亲身试验，而且行之有效的解决方法： 原因是采用了硬盘安装方式安装Ubuntu后，把那个引导工具grldr破坏了 修改Ubuntu 9.10里的/boot/grub/grub.cfg文件中Windows 7的启动选项，或者直接复制增加以下这个Windows 7选项吧。 menuentry “Windows 7” { insmod ntfs set root=(hd0,1) drivemap -s (hd0) ${root} chainloader +1 } 这个应该就可以进入grub4dos 的菜单，然后按 C 进入GRUB的DOS状态 ，在grub&gt;提示符下输入以下三条命令来修复引导工具grldr即可 grub&gt;root (hd0,0) grub&gt;chainloader /bootmgr grub&gt;boot 进入Windows 7后要重新激活Windows 7，然后就正式恢复了Ubuntu 9.10和Windows 7的双系统启动菜单了，至于XP是在Windows 7的启动菜单里的，一样正常了。哈哈！]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>grub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在SQL Server 2000中insert的时候返回自动编号的id 存储过程示例]]></title>
    <url>%2F2013%2F01%2F05%2Fdb-sqlserver-return-autogen-id%2F</url>
    <content type="text"><![CDATA[SQL Server 2000中，insert数据的时候返回自动编号的id，有三种方法实现SCOPE_IDENTITY、IDENT_CURRENT 和 @@IDENTITY，它们都返回插入到 IDENTITY 列中的值。 IDENT_CURRENT：返回为任何会话和任何作用域中的特定表最后生成的标识值。IDENT_CURRENT 不受作用域和会话的限制，而受限于指定的表。IDENT_CURRENT 返回为任何会话和作用域中的特定表所生成的值。 @@IDENTITY： 返回为当前会话的所有作用域中的任何表最后生成的标识值。 SCOPE_IDENTITY ：返回为当前会话和当前作用域中的任何表最后生成的标识值 SCOPE_IDENTITY 和 @@IDENTITY 返回在当前会话中的任何表内所生成的最后一个标识值。但是，SCOPE_IDENTITY 只返回插入到当前作用域中的值；@@IDENTITY 不受限于特定的作用域。 使用示例： set @NewID=SCOPE_IDENTITY()set @NewID=@@IDENTITYset @NewID=IDENT_CURRENT(‘表名’) 例如，有两个表 T1 和 T2，在 T1 上定义了一个 INSERT 触发器。当将某行插入 T1 时，触发器被激发，并在 T2 中插入一行。此例说明了两个作用域：一个是在 T1 上的插入，另一个是作为触发器的结果在 T2 上的插入。假设 T1 和 T2 都有 IDENTITY 列，@@IDENTITY 和 SCOPE_IDENTITY 将在 T1 上的 INSERT 语句的最后返回不同的值。@@IDENTITY 返回插入到当前会话中任何作用域内的最后一个 IDENTITY 列值，该值是插入 T2 中的值。SCOPE_IDENTITY() 返回插入 T1 中的 IDENTITY 值，该值是发生在相同作用域中的最后一个 INSERT。如果在作用域中发生插入语句到标识列之前唤醒调用 SCOPE_IDENTITY() 函数，则该函数将返回 NULL 值。而IDENT_CURRENT(‘T1′) 和 IDENT_CURRENT(‘T2′) 返回的值分别是这两个表最后自增的值。 ajqc的实验:(40条本地线程,40+40条远程线程同时并发测试,插入1200W行),得出的结论是: 在典型的级联应用中.不能用@@IDENTITY,在CII850,256M SD的机器上1W多行时就会并发冲突.在P42.8C,512M DDR上,才6000多行时就并发冲突. SCOPE_IDENTITY()是绝对可靠的,可以用在存储过程中,连触发器也不用建,没并发冲突 –创建存储过程 CREATE PROCEDURE prc_insertfacecontrol @controltype nvarchar (10), @controlwidth nvarchar (10), @controlheight nvarchar (10), @controlsize int , @controldata nvarchar (255), @contenttype nvarchar (255), @kjid int , @userid int, @controlid int output AS BEGIN INSERT INTO facecontrol ( controltype, controlwidth, controlheight, controlsize, controldata, contenttype, kjid, userid ) VALUES ( @controltype, @controlwidth, @controlheight, @controlsize , @controldata , @contenttype , @kjid , @userid ) select @controlid=IDENT_CURRENT(‘facecontrol’) —返回自动编号的id END GO –执行存储过程: declare @controlid int exec prc_insertfacecontrol ’1′,’800′,’600′,71189,’asdfadfadfasdfadfafd’,'image/pjpeg’,2,1,@controlid=@controlid output –打印输出参数: print @controlid]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>sql server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Here is a tutorial on how to whip up a simple web server in Java? with working runnable code; sourcecode and bytecode files.]]></title>
    <url>%2F2013%2F01%2F05%2Fjava-simple-web-server%2F</url>
    <content type="text"><![CDATA[This is the window that comes up when you run the program, just a little motivator so you can see what��s in the end of the tunnel. Note to get the maximum out of this tutorial it is recommended that you have a basic grasp on how HTTP works. If the little man inside your head says what tha H is HTTP, you should go to the bottom and check some of the pointers. There you will find some nice text to explain the basic concept. Let��s get started! When making a program nowadays the first thing you should think about is the GUI (graphical user interface). If the program dosen��t look fancy, you can just press all the cancel buttons on the project. Ok that was meant as a joke, but there is some truth in it. People tend to judge a program a lot on its look, even though the real coding job is in making the stuff that goes on behind the scenes. The good news is that we are making this in Java, and since Java is such a friendly programming language it��s real easy to get some interface going. Comments are in green. //file: webserver_starter.java //declare a class wich inherit JFrame public classwebserver_starter extendsJFrame { //declare some panel, scrollpanel, textarea for gui JPanel jPanel1 = newJPanel(); JScrollPane jScrollPane1 = newJScrollPane(); JTextArea jTextArea2 = newJTextArea(); staticInteger listen_port = null; //basic class constructor publicwebserver_starter() { try{ jbInit(); } catch(Exception e) { e.printStackTrace(); } } //the JavaAPI entry point //where it starts this class if run public staticvoidmain(String[] args) { //start server on port x, default 80 //use argument to main for what port to start on try{ listen_port = newInteger(args[0]); //catch parse error } catch(Exception e) { listen_port = newInteger(80); } //create an instance of this class webserver_starter webserver = newwebserver_starter(); } //set up the user interface privatevoidjbInit() throwsException { //oh the pretty colors jTextArea2.setBackground(newColor(16, 12, 66)); jTextArea2.setForeground(newColor(151, 138, 255)); jTextArea2.setBorder(BorderFactory.createLoweredBevelBorder()); jTextArea2.setToolTipText(&quot;&quot;); jTextArea2.setEditable(false); jTextArea2.setColumns(30); jTextArea2.setRows(15); //change this to impress your friends this.setTitle(“Jon��s fancy prancy webserver”); //ugly inline listener, it��s for handling closing of the window this.addWindowListener(newjava.awt.event.WindowAdapter() { publicvoidwindowClosing(WindowEvent e) { this_windowClosed(e); } }); //add the various to the proper containers jScrollPane1.getViewport().add(jTextArea2); jPanel1.add(jScrollPane1); this.getContentPane().add(jPanel1, BorderLayout.EAST); //tveak the apearance this.setVisible(true); this.setSize(420, 350); this.setResizable(false); //make sure it is drawn this.validate(); //create the actual serverstuff, //all that is implemented in another class newserver(listen_port.intValue(), this); } //exit program when “X” is pressed. voidthis_windowClosed(WindowEvent e) { System.exit(1); } //this is a method to get messages from the actual //server to the window publicvoidsend_message_to_window(String s) { jTextArea2.append(s); } } //class end In a nutshell this code sets up the window and makes everything look good. If you look at the picture of the program on top of this page. This code makes that! Ok, enough time wasted on the look. Lets get down with the fun stuff, making the actual httpserver. //file: server.java //the real (http) serverclass //it extends thread so the server is run in a different //thread than the gui, that is to make it responsive. //it��s really just a macho coding thing. public classserver extendsThread { //the constructor method //the parameters it takes is what port to bind to, the default tcp port //for a httpserver is port 80. the other parameter is a reference to //the gui, this is to pass messages to our nice interface publicserver(intlisten_port, webserver_starter to_send_message_to) { message_to = to_send_message_to; port = listen_port; //this makes a new thread, as mentioned before,it��s to keep gui in //one thread, server in another. You may argue that this is totally //unnecessary, but we are gonna have this on the web so it needs to //be a bit macho! Another thing is that real pro webservers handles //each request in a new thread. This server dosen��t, it handles each //request one after another in the same thread. This can be a good //assignment!! To redo this code so that each request to the server //is handled in its own thread. The way it is now it blocks while //one client access the server, ex if it transferres a big file the //client have to wait real long before it gets any response. this.start(); } privatevoids(String s2) { //an alias to avoid typing so much! message_to.send_message_to_window(s2); } privatewebserver_starter message_to; //the starter class, needed for gui privateintport; //port we are going to listen to //this is a overridden method from the Thread class we extended from publicvoidrun() { //we are now inside our own thread separated from the gui. ServerSocket serversocket = null; //To easily pick up lots of girls, change this to your name!!! s(“The simple httpserver v. 0000000000nCoded by Jon Berg” + &quot;&lt;jon.berg[on server]turtlemeat.com&gt;nn&quot;); //Pay attention, this is where things starts to cook! try{ //print/send message to the guiwindow s(“Trying to bind to localhost on port &quot; + Integer.toString(port) + “��”); //make a ServerSocket and bind it to given port, serversocket = newServerSocket(port); } catch(Exception e) { //catch any errors and print errors to gui s(“nFatal Error:” + e.getMessage()); return; } s(“OK!n”); //go in a infinite loop, wait for connections, process request, send response while(true) { s(“nReady, Waiting for requests��n”); try{ //this call waits/blocks until someone connects to the port we //are listening to Socket connectionsocket = serversocket.accept(); //figure out what ipaddress the client commes from, just for show! InetAddress client = connectionsocket.getInetAddress(); //and print it to gui s(client.getHostName() + &quot; connected to server.n”); //Read the http request from the client from the socket interface //into a buffer. BufferedReader input = newBufferedReader(newInputStreamReader(connectionsocket. getInputStream())); //Prepare a outputstream from us to the client, //this will be used sending back our response //(header + requested file) to the client. DataOutputStream output = newDataOutputStream(connectionsocket.getOutputStream()); //as the name suggest this method handles the http request, see further down. //abstraction rules http_handler(input, output); } catch(Exception e) { //catch any errors, and print them s(“nError:” + e.getMessage()); } } //go back in loop, wait for next request } //our implementation of the hypertext transfer protocol //its very basic and stripped down privatevoidhttp_handler(BufferedReader input, DataOutputStream output) { intmethod = 0; //1 get, 2 head, 0 not supported String http = newString(); //a bunch of strings to hold String path = newString(); //the various things, what http v, what path, String file = newString(); //what file String user_agent = newString(); //what user_agent try{ //This is the two types of request we can handle //GET /index.html HTTP/1.0 //HEAD /index.html HTTP/1.0 String tmp = input.readLine(); //read from the stream String tmp2 = newString(tmp); tmp.toUpperCase(); //convert it to uppercase if(tmp.startsWith(“GET”)) { //compare it is it GET method = 1; } //if we set it to method 1 if(tmp.startsWith(“HEAD”)) { //same here is it HEAD method = 2; } //set method to 2 if(method == 0) { // not supported try{ output.writeBytes(construct_http_header(501, 0)); output.close(); return; } catch(Exception e3) { //if some error happened catch it s(“error:” + e3.getMessage()); } //and display error } //} //tmp contains “GET /index.html HTTP/1.0 ����.” //find first space //find next space //copy whats between minus slash, then you get “index.html” //it��s a bit of dirty code, but bear with me�� intstart = 0; intend = 0; for(inta = 0; a &lt; tmp2.length(); a++) { if(tmp2.charAt(a) == �� �� &amp;&amp; start != 0) { end = a; break; } if(tmp2.charAt(a) == �� �� &amp;&amp; start == 0) { start = a; } } path = tmp2.substring(start + 2, end); //fill in the path } catch(Exception e) { s(“errorr” + e.getMessage()); } //catch any exception //path do now have the filename to what to the file it wants to open s(“nClient requested:” + newFile(path).getAbsolutePath() + “n”); FileInputStream requestedfile = null; try{ //NOTE that there are several security consideration when passing //the untrusted string “path” to FileInputStream. //You can access all files the current user has read access to!!! //current user is the user running the javaprogram. //you can do this by passing “…/” in the url or specify absoulute path //or change drive (win) //try to open the file, requestedfile = newFileInputStream(path); } catch(Exception e) { try{ //if you could not open the file send a 404 output.writeBytes(construct_http_header(404, 0)); //close the stream output.close(); } catch(Exception e2) {} ; s(“error” + e.getMessage()); } //print error to gui //happy day scenario try{ inttype_is = 0; //find out what the filename ends with, //so you can construct a the right content type if(path.endsWith(&quot;.zip&quot; ) { type_is = 3; } if(path.endsWith(&quot;.jpg&quot;) || path.endsWith(&quot;.jpeg&quot;)) { type_is = 1; } if(path.endsWith(&quot;.gif&quot;)) { type_is = 2; //write out the header, 200 -&gt;everything is ok we are all happy. } output.writeBytes(construct_http_header(200, 5)); //if it was a HEAD request, we don��t print any BODY if(method == 1) { //1 is GET 2 is head and skips the body while(true) { //read the file from filestream, and print out through the //client-outputstream on a byte per byte base. intb = requestedfile.read(); if(b == -1) { break; //end of file } output.write(b); } } //clean up the files, close open handles output.close(); requestedfile.close(); } catch(Exception e) {} } //this method makes the HTTP header for the response //the headers job is to tell the browser the result of the request //among if it was successful or not. privateString construct_http_header(intreturn_code, intfile_type) { String s = &quot;HTTP/1.0 &quot;; //you probably have seen these if you have been surfing the web a while switch(return_code) { case200: s = s + “200 OK”; break; case400: s = s + “400 Bad Request”; break; case403: s = s + “403 Forbidden”; break; case404: s = s + “404 Not Found”; break; case500: s = s + “500 Internal Server Error”; break; case501: s = s + “501 Not Implemented”; break; } s = s + “rn”; //other header fields, s = s + “Connection: closern”; //we can��t handle persistent connections s = s + “Server: SimpleHTTPtutorial v0rn”; //server name //Construct the right Content-Type for the header. //This is so the browser knows what to do with the //file, you may know the browser dosen��t look on the file //extension, it is the servers job to let the browser know //what kind of file is being transmitted. You may have experienced //if the server is miss configured it may result in //pictures displayed as text! switch(file_type) { //plenty of types for you to fill in case0: break; case1: s = s + “Content-Type: image/jpegrn”; break; case2: s = s + “Content-Type: image/gifrn”; case3: s = s + “Content-Type: application/x-zip-compressedrn”; default: s = s + “Content-Type: text/htmlrn”; break; } ////so on and so on���� s = s + “rn”; //this marks the end of the httpheader //and the start of the body //ok return our newly created header! returns; } } //class phhew caffeine yes please! BEWARE! When you run the web server you are potentially opening for all your files to be red by the entire Internet! The httpserver is only ment to be used for testing. If you absoulutely want to run this httpserver for longer periods of time; consider creating a new user with only read access to the files you want to share and running it only with this user! Download the tutorial files! this zipfile contains both sourcecode and compiled javabytecode files. So you can test the program without having the javacompiler. It also contains a sample index.html and a jpg file. How to run the program? Get into commandline, cd to the dir where you extracted the files (webserver_starter.class and the other files). Then type: java webserver_starter Then the window you see on top of this page should pop up. To test if this httpserver is really functioning, you open your browser, and in the location line you type: http://localhost/index.html ,this will bring up a sample html file that is in the zipfile. If you want to test the httpserver from another machine on the Internet, then you need to know the ip-address or hostname the httpserver is running on, then you type that in the location line in the browser, like http://123.123.123.123/index.html .Note, it may not work if you are behind a firewall or a NAT router, but that��s not the programs�� fault! Update: Oct 2011. This code is not actively updated, but I changed a few things mainly due to many people are referencing this. The switch (file_type) was missing breaks. requestedfile.read() and output.write() now reads and writes a byte array which speeds things up. And added favicon support since somebody asked about it. How to compile: Open command line. cd to directory where you unpacked it. javac *.java How to run: Open command line. cd to directory where you unpacked it. java -cp . webserver_starter Pointers to related stuff on the hypertext transfer protocol (http) and web servers: HowStuffWorks This is a very basic introduction for the novice on how web servers works. Has also other text about Internet and Routers, in easy to understandable language. Nice if you are starting out learning. HTTP Made Really Easy Here is some nice text that goes through the main points in HTTP. A little more technical. It��s recommended that you know these things to understand the above tutorial. Apache the best and most widely used web server on the Internet today, check it out. If you want to run your own web server this is the one to get, you can get binaries for both Windows and Unix. You can download the entire sourcecode if you want to check how it was made. Mozilla / Netscape is a nice web browser. Get rid of the Explorer, there are some rumors that Internet Explorer secretly collects all the pages you are visiting and sends it to microsoft.com. RFC-1945 RFC describing Hypertext Transfer Protocol �� HTTP/1.0 RFC-2616 RFC describing Hypertext Transfer Protocol �� HTTP/1.1 RFC webpage The Request For Comment webpage, RFC are technical documents describing all sorts of protocols on the Internet. Java2 Runtime / SDK Download site for the Java Runtime (needed for running Java programs) and Java Software Development Kit (needed for making Java programs).]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>web server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[httpclient发送xml字符串（推送）]]></title>
    <url>%2F2013%2F01%2F05%2Fjava-httpclient-xml%2F</url>
    <content type="text"><![CDATA[package test;import java.io.IOException; import java.rmi.UnexpectedException;import javax.servlet.http.HttpServletRequest;import org.apache.commons.httpclient.HttpClient; import org.apache.commons.httpclient.HttpException; import org.apache.commons.httpclient.methods.PostMethod; import org.jdom.Document; import org.jdom.JDOMException; import org.jdom.input.SAXBuilder; import org.xml.sax.InputSource;public class HttpClientDemo &#123; public static void main(String[] args) &#123; String xml = "&lt;?xml version=" + ""1.0"" + " encoding=" + ""UTF-8"" + "?&gt;&lt;SDRequest&gt;&lt;TransactionName&gt;CreateDataFileComplete&lt;/TransactionName&gt;&lt;IdentityInfo&gt;&lt;Code&gt;" + 1 + "&lt;/Code&gt;&lt;Description&gt;&lt;/Description&gt;&lt;Timestamp&gt;" + "20100315140542" + "&lt;/Timestamp&gt;&lt;/IdentityInfo&gt;&lt;/SDRequest&gt;";// 新接的一个项目接口，非要用xml请求，找不到别的post方式，最终选用这种方式，将参数拼成xml字符串 // File input = new File("test.xml");//如果是xml文件，可以这样写 PostMethod post = new PostMethod("http://localhost/site/forXls.do");// 请求地址 // 设置请求的内容直接从文件中读取 // post.setRequestBody( new FileInputStream(input)); // if (input.length() &lt; Integer.MAX_VALUE) // post.setRequestContentLength(input.length()); // else // post.setRequestContentLength(EntityEnclosingMethod.CONTENT_LENGTH_CHUNKED); post.setRequestBody(xml);// 这里添加xml字符串 // 指定请求内容的类型 post.setRequestHeader("Content-type", "text/xml; charset=GBK"); HttpClient httpclient = new HttpClient();// 创建 HttpClient 的实例 int result; try &#123; result = httpclient.executeMethod(post); System.out.println("Response status code: " + result);// 返回200为成功 System.out.println("Response body: "); System.out.println(post.getResponseBodyAsString());// 返回的内容 post.releaseConnection();// 释放连接 &#125; catch (HttpException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; // 以上就是发送请求的代码，对方接收到数据可以直接解析成xml // 读取xml private Document getClientRequestMessage(HttpServletRequest _request) throws UnexpectedException &#123; try &#123; SAXBuilder builder = new SAXBuilder(); InputSource is = new InputSource(); // create an input // source is.setByteStream(_request.getInputStream()); // set the input // stream mandated // to UTF-8 is.setEncoding("UTF-8"); // set the mandate // encoding to the input // source Document document = builder.build(is); return document; &#125; catch (IOException e) &#123; e.printStackTrace(); throw new UnexpectedException( "IOException exception when getInputStream from http request", e); &#125; catch (JDOMException e) &#123; e.printStackTrace(); throw new UnexpectedException( "JDOMException when build document form inputstream", e); &#125; catch (NullPointerException e) &#123; e.printStackTrace(); throw new UnexpectedException( "NullPointerException when build document form inputstream", e); &#125; catch (ClassCastException e) &#123; e.printStackTrace(); throw new UnexpectedException( "ClassCastException when build document form inputstream", e); &#125; &#125; &#125; 需要jar包： jdom.jar commons-httpclient.jar]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>httpclient</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用EditPlus技巧，提高工作效率(附英文版、自动完成文件、语法文件下载)]]></title>
    <url>%2F2013%2F01%2F05%2Fsoftware-editplus%2F</url>
    <content type="text"><![CDATA[除了windows操作系统，EditPlus可以说是我最经常使用的软件了。无论是编写xhtml页面，还是css、js文件，甚至随笔记记这样的事情，我都会使用EditPlus（现在使用的是EditPlus2.31英文版），感觉它不仅功能强大，更难得的是：绿色、轻量级、启动速度快、稳定性高……反正，我个人是爱死她了！ 在使用中，我个人也总结了一些使用经验。可能作为高手的你，看来只是“相当肤浅”，但是没有关系，因为我相信，只要把知识共享出来，总能帮助到一些还在进步中的朋友。下面就让我们来开始配置出符合你自己使用习惯的EditPlus吧！ 2008-05-08补充：同时推荐大家阅读这篇《“阿一web标准学堂”选修课：EditPlus高级使用技巧（附视频、课件、代码下载）》，有视频哦。 一边阅读，一边动手吧！ 为了达到更好的效果，请你先下载我打包的这个 EditPlus压缩包文件（压缩包文件为绿色的EditPlus2.31英文版,含自动完成文件,高亮语法文件和剪切板代码片断文件，这些文件在解压目录下的&quot;yzyFile&quot;目录下），这样就可以一边看着这篇文章，一边亲自动手，从而达到更好的效果了。 设置EditPlus的配置文件路径 因为EditPlus是可以绿色使用的（直接解压那个EditPlus压缩包文件即可直接使用，不用安装），所以，当我们对EditPlus进行一系列的配置以后，保存下这些配置文件。以后当我们重装系统，或者换台电脑使用的时候，只要重新加载一下那些配置文件，以前的配置就都重新回来了，很是方便。所以，在讲其他配置和技巧之前，我们先设置好EditPlus的配置文件路径。 打开EditPlus → 【Tools】→ 【INI File Directory…】 → 在弹出的对话框中设置配置文件的保存位置（压缩包内的配置保存文件在解压目录下的&quot;yzyFileINIFiles&quot;目录下）。这里你可能要重新设置一下目录，因为，我喜欢把EditPlus放在&quot;D:GreenSoftEditPlus 2&quot;下（把所有的绿色软件装在一个目录下，每次重装系统的时候，可以直接把绿色软件拷回去，就能直接使用了，从而避免了每次都安装那么多软件）。所以，就请你重新设置一下，根据你的习惯，把配置文件存放在某个目录下吧。 web标准设计 图1：设置EditPlus的配置文件保存路径 保护视力，从EditPlus做起 “最近眼睛好痛呀！”、“靠～眼睛简直要瞎了！”……不知道作为程序员的你是否也经常抱怨这样的事情，每天对着电脑看，的确对视力的伤害很大，所以能不能采取一些措施来为眼睛减减压呢？我在EditPlus里面是这样做的（因为EditPlus是我最长使用的工具，所以以EditPlus为例）——编辑区的背景设为灰色而不是默认的白色，使用较大字号的字体。效果如下图所示： web标准设计 图2：灰色的背景，12号的雅黑字体，构造“爱眼”环境 你可以这样设置EditPlus编辑环境的背景颜色和字体。菜单【Tools】→ 【Preperences】→ 【General】→ 【fonts】和【colors】。需要说明一下的是：可以设置多种fonts，这样就可以很方便地切换fonts了（参看图2所示），这招对日企这样的朋友很方便哦。中文的字体设置几个，日文的字体设置几个，出现乱码的时候，切换一下字体就可以了。 web标准设计 图3：设置EditPlus的字体和颜色 配置文件模板，告别重复的体力劳动 设置好EditPlus的配置文件，就让我们开始EditPlus的使用技巧吧。第一个技巧当然就是和“新建”有关的啦。如果我们经常建立一种文件，而这种文件总会包含一些重复的文字或者代码的话，我们就可以建立模板，然后通过模板建立文件。从而摆脱每次都要重复的体力劳动。 我们就从建立一个属于自己的xhtml文件开始吧。菜单【File】→ 【New】→ 【Configure templates…】→ 在打开的对话框中“填上”菜单中显示的文字，已经模板文件的路径，就可以了。下次当你再次选择【File】→ 【New】的时候，就能够看到你建立的模板了。 web标准设计 图4：EditPlus中建立自己的模板 模板文件要怎么建立呢？其实很简单呀。举个很简单的例子，如果我想建立一个我自己的xhtml页面，模板文件就可以写成这样—— 我的XHTML模板页面 简单的XHTML页面 ^! 显然里面的Keywords和Description，意见title的内容都已经变成我常用的了。还有一点，请大家注意第10行的“^!”标签。这个标签在EditPlus中表示光标所在位置。显然，这里的意思就是：当你用这个模板建立一个新的文件的时候，光标就会自动停留在和之间，从而方便你的直接输入。 关于模板文件再说两句： 1：在我提供的那个 EditPlus压缩包文件中，模板文件存放在解压目录下的“yzyFileTemplates”文件夹下。 2：我们知道使用快捷键“Ctrl + Shift + N”可以快速的建立一个html页面，而这个可以快速的建立html的模板，位于EditPlus目录下的，文件名为“templatex.html”。你可以通过修改这个模板文件，来达到你个性化html页面的目的。 顺手的侧边栏 如果你看不到侧边栏，可以使用快捷键（Alt + Shift + 1）。侧边栏包含了“快速目录路径”和“快速剪贴板”功能。“快速目录路径”就不说了，重点来说说“快速剪贴板”功能吧。其实说白了，就是一个地方，这个地方可以存放一些代码片断、常用文言等等文字。当你需要这些文字的时候，只要双击，就可以方便的添加到光标所在位置了。默认情况下会有一些html，css代码，但是，说实话，我是不太经常使用那些东西的，那么多，找到都累死了。所以，我喜欢建立一个自己最常用的“剪贴板”库，因为是自己建的，所以用着就会比较顺手了。 你可以通过这种方式来建立自己的“剪贴板”库文件。在Cliptext侧边栏上的下拉列表框上点击右键 → 新建 → 填写文件名和显示标题→ 在新建的空白侧边栏上点击右键 → 新建 → 填入显示文本和代码即可。 关于“剪贴板”库文件再说两句： 1：在我提供的那个 EditPlus压缩包文件中“剪贴板”库文件存放在解压目录下的“yzyFileCliptextLibrary”文件夹下。 2：你可以通过直接编辑，解压目录下的“yzyFileCliptextLibrary”文件夹下的“剪贴板”库文件，来快速的建立自己的常用代码库（用EditPlus就可以打开，格式看一下就懂了。编辑好以后要重新“Reload”一下，或者重新启动一下才能刷新哦）。 3：侧边栏可以放在左边，也可以放在右面。设置的方法是：在侧边栏点击鼠标右键 → 选择【Location】菜单内的left或者right。 华丽的自动完成功能 可以说是俺最喜欢的功能了。想象一下，作为一个经常制作网页的人来所，当你打一个“ua”字，然后按下空格，编辑器里面就出现了右边的代码，而且鼠标就停留在第一个href的双引号之间。那是多么愉快的事情。这就是EditPlus的自动完成功能，使用EditPlus的自动完成功能将会极大的提高你的工作效率。而且我们可以根据不同的文件类型，建立不同的“自动完成”，例如，如果是xhtml文件，打“b”+ 空格”，就是 ，而在css文件中，“b”+ 空格”，就是 “border:1px solid red;”。非常的人性化。 你可以通过这样的设置，来使用EditPlus的自动完成功能。【Tools】→【Preperences】→ 【Files】→ 【Settings &amp; syntax】 → 在【File types】中设置一下文件类型，然后再【Auto completion】中选择自动完成文件即可（如果你使用的是我那个 EditPlus压缩包文件，请注意调整这里的自动完成文件的路径）。自动完成文件我们可以自己进行编辑，这里我举个简单的例子，展开下面的代码，这个便是我css文件自动完成的文件内容，以第11行的“#T=bor”为例，它的意思就是如果输入bor然后按空格，就在光标所在位置插入“border:1px solid red;” css自动完成例子 #TITLE=CSS ; EditPlus Auto-completion file v1.0 written by Justin Young(http://justinyoung.cnblogs.com). ; This file is provided as a default auto-completion file for CSS. #T=* {}{margin:0; padding:0; list-style:none; } ^! #T=bo border:1px solid #^!; #T=bor border:1px solid red; ^! #T=fl float:left; #T=fr float:right; #T=poa position:absolute; #T=por position:relative; #T=bg background:url(‘…/Images/^!.gif’) no-repeat; #T=bgc background-color:^!; #T=he height:^!px; #T=wi width:^!px; #T=ml margin-left:^!px; #T=mr margin-right:^!px; #T=mt margin-top:^!px; #T=mb margin-bottom:^!px; #T=pt padding-top:^!px; #T=pr padding-right:^!px; #T=pl padding-left:^!px; #T=pb padding-bottom:^!px; #T=bt border-top:1px solid ^!; #T=br border-right:1px solid ^!; #T=bl border-left:1px solid ^!; #T=bb border-bottom:1px solid ^!; #T= ; 关于“自动完成”文件再说两句： 1：在我提供的那个 EditPlus压缩包文件中“自动完成”文件存放在解压目录下的“yzyFileAutoCompletion”文件夹下。 2：你可以通过直接编辑，解压目录下的“yzyFileAutoCompletion”文件夹下的EditPlus自动完成文件，来快速的建立自己的EditPlus自动完成文件。 EditPlus自动完成 图5：“自动完成”和“高亮语法”设置对话框 彩色的文件，高亮语法文件 很多的开发工具都有语法高亮显示功能，EditPlus虽小，但是也有这个功能哦。设置方法可以参考图片5所示。和“自动完成”功能一样，只要为不同的文件类型指定“高亮语法”文件即可。css、html等常用的文件类型，EditPlus已经自带了高亮语法文件。如果自带的高亮语法文件没有你需要的，你可以去EditPlus官方网站的文件下载频道去看看，来自全球各地的朋友，贡献了很多的不同文件类型的高亮语法文件。可以很方便地免费下载到。 这里就稍微列举一下比较常用的EditPlus的高亮语法文件，更多的请到EditPlus的官方网站下载，EditPlus的官方地址为： http://www.editplus.com/files.html EditPlus SQL 高亮语法文件 EditPlus C ++ 高亮语法文件 EditPlus C#高亮语法文件 EditPlus Java 高亮语法文件 EditPlus PHP 高亮语法文件 EditPlus CSS HTML高亮语法文件 EditPlus正则表达式 EditPlus中的查找（替换）功能，支持正则表达式。使用正则表达式可以极大的提高查找（替换）的强悍程度。因为正则表达式这东西不是一句话就能说完的，而且偏离此篇文章主题，所以这里只列举几个常用的例子。对此有兴趣的可以参考正则表达式资料，或者在EditPlus的help中“Regular Expression”关键字进行索引查找。 EditPlus正则表达式 图6：在查找（替换）对话框中使用正则表达式 使用正则表达式进行查找（替换）的方法如上图所示，选择查找（替换）对话框中“Regular Expression”前面checkbox。点击查找（替换）文本框后的“倒三角”可以选择常用的正则表达式。 正则表达式实例 需求说明 正则表达式写法 备注 替换指定内容（以abc为例）到行尾 abc.* “.”表示匹配任意字符；“*”表示匹配0次或更多 给所有的数字加上引号 查找[0-9]替换为&quot;&quot; 表示正则表达式匹配的对象 删除空白行 查找nn 替换为n 把连续的2个换行符，替换成一个换行符 矩形选区 看到这个词，好像是说图像处理工具，其实非也，不管是VS还是EditPlus，其实都是支持矩形选区的。这对处理一些形如：去掉文章前端行号的情况有特效，矩形全区的选取方式就是按住Alt键，然后用鼠标划矩形选区(如图7所示)。需要注意到是在“自动换行”的情况下，是不能使用“矩形选区”的。你可以使用Ctrl+Shift +W来切换“自动换行”或者“不自动换行”视图。 在EditPlus中选取矩形选区 图7：在EditPlus中选取矩形选区（注意红色框内的“自动换行图标”） 提高工作效率，EditPlus 快捷键的使用 如果一个来你们公司面试程序员，连Ctrl + C 和Ctrl + V 都不用，而是使用“选中文本”→ 鼠标右键 → 【复制】，然后再鼠标右键→ 【粘贴】。你会不会录用他呢？（你还别笑，以前我们公司还真面试过一个这样的，所谓的“精通asp.net”的程序员）。所以熟练的使用软件的快捷键，不仅仅能够极大的提高工作效率，也从一个侧面表现出一个人对此软件的使用能力。EditPlus同样也有很多的快捷键，下面是一些我经常使用的EditPlus特有的快捷键（Ctrl +C 、Ctrl+H这样的通用快捷键就不介绍了），略举一二，更多的请参看文章《EditPlus快捷键》 以浏览器模式预览文件 Ctrl + B 开始编辑“以浏览器模式预览的文件” Ctrl + E 新建html文件 Ctrl+Shift+N 新建浏览器窗口（类似于在EditPlus中打开ie） Ctrl+Shift+B 选中的字母切换为小写 Ctrl+L 选中的字母切换为大写 Ctrl+U 选中的词组首字母大写 Ctrl+Shift+U 复制选定文本并追加到剪贴板中 Ctrl+Shift+C 剪切选定文本并追加到剪贴板中 Ctrl+Shift+X 创建当前行的副本 Ctrl+J 复制上一行的一个字符到当前行 Ctrl± 剪切选定文本并追加到剪贴板中 Ctrl+Shift+X 合并选定行 Ctrl+Shift+J 反转选定文本的大小写 Ctrl+K 开始/结束选择区域 Alt+Shift+B 选择当前行 Ctrl+R 全屏模式开/关 Ctrl+K 显示或隐藏标尺 Alt+Shift+R 显示或隐藏制表符与空格 Alt+Shift+I 显示函数列表 Ctrl+F11 转到当前文档的指定行 Ctrl + G 设置或清除当前行的标记 F9 转到下一个标记位置 F4 转到上一个标记位置 Shift+F4 清除当前文档中的所有标记 Ctrl+Shift+F9 搜索一对匹配的括号 Ctrl+] 搜索一对匹配的括号并选择该文本 Ctrl+Shift+] 切换当前文档的自动换行功能 Ctrl+Shift+W 编辑当前 HTML 页面的源文件 Ctrl+E 我写博客的模板 好像这个不应该放在这篇文章中来写，但是因为我写博文一直在EditPlus中写，所以就顺便放在这篇文章中吧。 有一些朋友问我，你一篇那么花里胡哨的博文需要多长时间吧，关排版就要不少时间吧。其实，排版还真就没用多少时间，因为我已经编辑好一个通用的博文模板了，这个模板包含了我所有博文文章中可能出现的排版情况。每次写博文只要套用模板就可以了，无非就是换换字，换换图片链接地址而且。因为还蛮能提高写博文的效率和排版效果的，所以现在就共享出来供大家使用，希望大家也一样能够写出漂亮的文章。 EditPlus模板下载YES!B/S!文章模板下载 EditPlus模板下载 感谢未注册用户初学者1，提供EditPlus2.31版本的代码折叠功能的使用方法。 初学者1: CTRL+Shift+F 可以打开代码折叠开关。 菜单在：查看－代码折叠－使用代码折叠 我的版本是：2.31（488） 俺补充一下：html标签，如果要想折叠，必须注意便签内的代码要用tab缩进。 因为快捷键是使用小键盘的 &quot;+“和”-&quot;所以使用笔记本的会比较郁闷。可以通过设置快捷键达到你的使用习惯。 设置快捷键的方法：。【Tools】→【Preperences】→ 【Tools】→【KeyBorad】→选择类型为【view】然后在右面列表框中找到展开和收缩。]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>editplus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL清空数据后自增ID重新设置为1的方法]]></title>
    <url>%2F2012%2F12%2F27%2Fdb-sqlserver-autogen-id%2F</url>
    <content type="text"><![CDATA[在SQLSERVER 2000中ID字段怎样在数据库中设为自动编号，sql语句该怎么写？ CREATE TABLE [test] ( [id] [int] IDENTITY (1, 1) NOT NULL , ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO 怎样清除数据后,可以把ID再从1开始计算呢? 如把数据表users中的自增ID改成从1开始的记录 DBCC CHECKIDENT (‘users’, RESEED,1)]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>db</tag>
        <tag>sql server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DB2备份表和删除表]]></title>
    <url>%2F2012%2F12%2F27%2Fdb-db2-backup%2F</url>
    <content type="text"><![CDATA[DB2跟ORACLE还是挺大的区别的.习惯了用ORACLE.用起DB2,觉得简直不可理喻.但是,实际上.DB2是很强大的.不过.这些可不是我要讨论的问题.现在.来看看DB2下ORACLE的一些命令如何实现. DB2下CREATE TABLE TableName AS 前几天.用DB2,有一批数据.想创建数据的备份表.习惯性的用上了CREATE TABLE AS. 提示： DB21034E The command was processed as an SQL statement because it was not a valid Command Line Processor command. During SQL processing it returned: SQL0104N An unexpected token “create table kf2.tbl as” was found following “BEGIN-OF-STATEMENT”. Expected tokens may include: “”. SQLSTATE=42601 一看傻眼了.马上找资料.花了不少时间.才发现.DB2不可以这样操作…郁闷到了.不过.可以用以下的方法: 先建表,再插数据. create table TableName as (select * from TblName) definition only; （或者：create table A like B;） 按原表的字段建个表.还好不用去查表的字段再慢慢敲建表的SQL… 然后.插数据就简单了. insert into TableName select * from TblName; 用惯了CREATE TABLE AS的友友们是不是觉得很不爽啊?没办法…这是DB2… DB2下的TRUNCATE TABLE 今天对一个临时表插完数据后才发现.数据插错了-。-要清表.习惯性的动作又来了.TRUNCATE TABLE.嗯.不用想了.又失败了.咋办捏.因为是省电信级别的用户数据.动不动就几百万的.DELETE FROM TABLE?我死你看…好吧…又是浪费大脑细胞的SEARCH IN BAIDU…最后发现.竟然是用IMPORT来代替了… 这方法简单了. VI NULL.DAT 不用添加数据.直接保存,退出 然后执行 db2 &quot;import from NULL.DAT of del replace into TABLENAME&quot; 出现了: SQL3109N The utility is beginning to load data from file “NULL.DAT”. SQL3110N The utility has completed processing. “0″ rows were read from the input file. SQL3221W …Begin COMMIT WORK. Input Record Count = “0″. SQL3222W …COMMIT of any database changes was successful. SQL3149N “0″ rows were processed from the input file. “0″ rows were successfully inserted into the table. “0″ rows were rejected. Number of rows read = 0 Number of rows skipped = 0 Number of rows inserted = 0 Number of rows updated = 0 Number of rows rejected = 0 Number of rows committed = 0 OK.完成了TRUNCATE TABLE的功能.虽然麻烦了点.总比你DELETE FROM TABLE快多了吧.]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>db2</tag>
        <tag>备份</tag>
        <tag>还原</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决eclipse中Flex的ProblemManager 错误]]></title>
    <url>%2F2012%2F12%2F27%2Fjava-eclipse-problem-manager%2F</url>
    <content type="text"><![CDATA[每次在eclipse中保存Flex源文件是就弹出报错框“The attribute value type is com.adobe.flexbuilder.project.compiler.internal.ProblemManager and expected is one of java.lang.String, Boolean, Integer”，原来是ProblemManager补丁没打上。 解决办法： 下载补丁包[ProblemManager] 解压下载的文件 到 Flex Builder安装目录 用winrar打开eclipse安装目录下/plugins/com.adobe.flexbuilder.project_3.0.204732/zornproject.jar文件 如果eclipse已经打开的话先关掉，将刚才下载解压的文件目录 com拖到winrar中完成压缩]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>flex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JS来改变CSS样式]]></title>
    <url>%2F2012%2F12%2F27%2Fweb-js-change-css%2F</url>
    <content type="text"><![CDATA[document.getElementById(“xx”).style.xxx中的所有属性是什么 盒子标签和属性对照 CSS语法（不区分大小写）|JavaScript语法（区分大小写） border| border border-bottom| borderBottom border-bottom-color|borderBottomColor border-bottom-style|borderBottomStyle border-bottom-width|borderBottomWidth border-color|borderColor border-left| borderLeft border-left-color| borderLeftColor border-left-style| borderLeftStyle border-left-width| borderLeftWidth border-right| borderRight border-right-color| borderRightColor border-right-style| borderRightStyle border-right-width| borderRightWidth border-style| borderStyle border-top| borderTop border-top-color| borderTopColor border-top-style| borderTopStyle border-top-width| borderTopWidth border-width| borderWidth clear| clear float| floatStyle margin| margin margin-bottom| marginBottom margin-left| marginLeft margin-right| marginRight margin-top| marginTop padding| padding padding-bottom| paddingBottom padding-left| paddingLeft padding-right| paddingRight padding-top| paddingTop 颜色和背景标签和属性对照 CSS 语法（不区分大小写） JavaScript 语法（区分大小写） background| background background-attachment| backgroundAttachment background-color| backgroundColor background-image| backgroundImage background-position| backgroundPosition background-repeat| backgroundRepeat color| color 样式标签和属性对照 CSS语法（不区分大小写） JavaScript 语法（区分大小写） display| display list-style-type| listStyleType list-style-image| listStyleImage list-style-position| listStylePosition list-style| listStyle white-space| whiteSpace 文字样式标签和属性对照 CSS 语法（不区分大小写） JavaScript 语法（区分大小写） font font font-family fontFamily font-size fontSize font-style fontStyle font-variant fontVariant font-weight fontWeight 文本标签和属性对照 CSS 语法（不区分大小写） JavaScript 语法（区分大小写） letter-spacing| letterSpacing line-break| lineBreak line-height| lineHeight text-align| textAlign text-decoration| textDecoration text-indent| textIndent text-justify| textJustify text-transform| textTransform vertical-align| xverticalAlign]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[frameset固定宽度并且居中显示]]></title>
    <url>%2F2012%2F12%2F27%2Fweb-frameset-fixed%2F</url>
    <content type="text"><![CDATA[其实就再套了一个框架，多了红色部分的代码而已；这样就可以使得框架居中了……..&lt;html&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; &lt;title&gt;&lt;/title&gt; &lt;head&gt; &lt;/head&gt;&lt;frameset cols="*,1024,*" frameborder="no" border="0" framespacing="0"&gt; &lt;frame src="about:blank"&gt;&lt;/frame&gt;&lt;frameset rows="130,*,40" frameborder="no" border="0" framespacing="0"&gt; &lt;frame src="top.html" name="topFrame" scrolling="No" noresize="noresize" id="topFrame" /&gt; &lt;frame src="center.html" name="mainFrame" id="mainFrame" /&gt; &lt;frame src="bottom.html" name="bottomFrame" scrolling="No" noresize="noresize" id="bottomFrame" /&gt; &lt;/frameset&gt;&lt;frame src="about:blank"&gt;&lt;/frame&gt; &lt;/frameset&gt;&lt;noframes&gt; &lt;body&gt;&lt;/body&gt; &lt;/noframes&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>frameset</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BackTrack5(BT5)硬盘安装完美教程]]></title>
    <url>%2F2012%2F12%2F25%2Fsystem-bt5-guide%2F</url>
    <content type="text"><![CDATA[BackTrack5的硬盘安装分两步走，第一步是BT5的硬盘引导，第二步是BT5的硬盘安装。过程中用到BT5的LIVE镜像，可以在这里下载BackTrack5发布，提供多种镜像下载 。 第一部分 BackTrack5(BT5)硬盘引导 BackTrack5 （BT5）的硬盘引导我们是借助grub4dos来完成的，grub跟grub2下还木有测试。grub4dos在xp跟win7下可以都用 boot.ini的方法来完成，win7也认识boot.ini，如果你是xp，直接修改boot.ini，如果你是win7，在系统盘根目录下新建 boot.ini。 写入内容： c:\grldr=&quot;GRUB4DOS Menu&quot; xp是在文件最后加上上面这行，win7在空白文件中只写这行就可以了。当然，win7也可以用easyBCD来安装grub4dos，可以参考的文章ubuntu11.04硬盘安装详细教程，xp、win7完美支持 下面你需要下载grub4dos的配置文件：点此下载配置文件 将此文件解压缩到系统盘根目录即可。 其实如果你对grub的menu.lst比较熟悉的话，可以看下menu.lst引导BT5的内容 title BackTrack5 Text - Default Boot Text Mode root (hd0,0) kernel /casper/vmlinuz file=/preseed/custom.seed boot=casper text splash vga=791– initrd /casper/initrd.gz boot 下载好CD镜像后，用UltraISO将全部文件解压缩到系统盘根目录（你的系统盘）下即可。 重启时选择引导，会进入BackTrack5的引导。这一步完成后你就已经完成了硬盘引导工作，可以正常进入BT5的LIVE了。默认账户是root，密码是toor，进入图形化桌面是startx。 第二部分 BackTrack5(BT5)硬盘安装 这一部分，说说missing filesystem.size错误的产生原因，missing filesystem.size是因为install.sh那个文件无法找到安装所需要的filesystem.size，而这个文件就在/cdrom中，而当你运行了umount -l /cdrom之后，该目录变成了空目录，所以系统无法找到原来我们拷贝过去的文件filesystem.size，因此会报错。那么如何解决呢？方案有两个，一个是将iso镜像中的所有文件都重新拷贝到/cdrom文件夹中，当然，这是不太可行的，至少2G内存是木有搞定，呵呵，说不定你是4G内存可以搞定呢~~~这个方法我们pass掉，现在说说真正的方法，用loop将iso文件挂载到/cdrom目录下。具体做法： 1.准备好你的bt5的安装iso，最好是放在你的系统盘也就是sda1中，如果放不开当然放别的盘里也可以的，命名全部用英文，免得有不必要的麻烦。打开一个终端，终端在程序的附件中。 在终端中运行 cd / sudo mkdir nenew sudo umount -l /cdrom sudo mount /dev/sda1 /nenew ls /nenew | grep iso 运行到这一步的时候，看看回显的结果中是否有你的镜像文件，如果你放到了第一个分区中，应该可以看到你的镜像名称，可以继续第二步了。如果你没有放到系统根目录下，就执行下面的命令，将sda的数字依次递增，直到ls 的结果有你的镜像为止。 sudo umount -l /nenew sudo mount /dev/sda2 /nenew ls /nenew | grep iso 好了，到此我们假设你已经看到了你的BackTrack5的iso镜像文件，如果你没有看到，自己找找原因吧，不解释。 2.执行下列命令 sudo modprobe loop sudo mount -o loop /nenew/BT5-GNOME-32.iso /cdrom 这里的BT5-GNOME-32.iso为你的BT5的镜像名称。 sudo umount -l /nenew ls /cdrom 这时候会回显cdrom目录下的文件，自己确定下跟iso文件中是否一致，如果一致，ok，你的操作正确了，可以进行安装了，如果不一致，sorry，回头继续看教程找原因。 3.运行桌面上的install来安装即可，安装过程可以参考ubuntu的安装过程，这里就不熬述了。最后安装结束，提示是否重启，选择reboot重启，当出现提示让输入enter的时候回车，这个地方没法过去，当然这并没有什么影响，直接关掉电源就可以了，因为该关闭的东东已经都关闭了。如果你是笔记本就长按开机按钮就可以关机的。重新开机就可以进入系统了。当然，你没有看到windows的启动项。启动正常后，用户名root密码toor进入系统，startx进入图形，打开终端，sudo update-grub就有windows的启动项了。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>bt5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL中CONVERT转化函数的用法]]></title>
    <url>%2F2012%2F12%2F25%2Fdb-sql-convert%2F</url>
    <content type="text"><![CDATA[格式: CONVERT(data_type,expression[,style]) 说明: 此样式一般在时间类型(datetime,smalldatetime)与字符串类型(nchar,nvarchar,char,varchar) 相互转换的时候才用到. 例子: SELECT CONVERT(varchar(30),getdate(),101) now 结果为: now ————————————— |09/15/2001 style数字在转换时间时的含义如下: STYLE(2位表示年份)| STYLE(4位表示年份)| 输入输出格式 0| 100| mon dd yyyy hh:miAM(或PM) 1| 101美国| mm/dd/yy 2| 102ANSI| yy-mm-dd 3| 103英法| dd/mm/yy 4| 104德国| dd.mm.yy 5| 105意大利| dd-mm-yy 6| 106| dd mon yy 7| 107| mon dd,yy 8| 108| hh:mm:ss 9| 109| mon dd yyyy hh:mi:ss:mmmmAM(或PM) 10| 110美国| mm-dd-yy 11| 111日本| yy/mm/dd 12| 112ISO| yymmdd 13| 113欧洲默认值| dd mon yyyy hh:mi:ss:mmm(24小时制) 14| 114| hh:mi:ss:mmm(24小时制) 20| 120 ODBC 规范| yyyy-mm-dd hh:mi:ss(24小时制) 21| 121| yyyy-mm-dd hh:mi:ss:mmm(24小时制) 语句及查询结果： SELECT CONVERT(varchar(100), GETDATE(), 0): 05 16 2006 10:57AM SELECT CONVERT(varchar(100), GETDATE(), 1): 05/16/06 SELECT CONVERT(varchar(100), GETDATE(), 2): 06.05.16 SELECT CONVERT(varchar(100), GETDATE(), 3): 16/05/06 SELECT CONVERT(varchar(100), GETDATE(), 4): 16.05.06 SELECT CONVERT(varchar(100), GETDATE(), 5): 16-05-06 SELECT CONVERT(varchar(100), GETDATE(), 6): 16 05 06 SELECT CONVERT(varchar(100), GETDATE(), 7): 05 16, 06 SELECT CONVERT(varchar(100), GETDATE(), 8): 10:57:46 SELECT CONVERT(varchar(100), GETDATE(), 9): 05 16 2006 10:57:46:827AM SELECT CONVERT(varchar(100), GETDATE(), 10): 05-16-06 SELECT CONVERT(varchar(100), GETDATE(), 11): 06/05/16 SELECT CONVERT(varchar(100), GETDATE(), 12): 060516 SELECT CONVERT(varchar(100), GETDATE(), 13): 16 05 2006 10:57:46:937 SELECT CONVERT(varchar(100), GETDATE(), 14): 10:57:46:967 SELECT CONVERT(varchar(100), GETDATE(), 20): 2006-05-16 10:57:47 SELECT CONVERT(varchar(100), GETDATE(), 21): 2006-05-16 10:57:47.157 SELECT CONVERT(varchar(100), GETDATE(), 22): 05/16/06 10:57:47 AM SELECT CONVERT(varchar(100), GETDATE(), 23): 2006-05-16 SELECT CONVERT(varchar(100), GETDATE(), 24): 10:57:47 SELECT CONVERT(varchar(100), GETDATE(), 25): 2006-05-16 10:57:47.250 SELECT CONVERT(varchar(100), GETDATE(), 100): 05 16 2006 10:57AM SELECT CONVERT(varchar(100), GETDATE(), 101): 05/16/2006 SELECT CONVERT(varchar(100), GETDATE(), 102): 2006.05.16 SELECT CONVERT(varchar(100), GETDATE(), 103): 16/05/2006 SELECT CONVERT(varchar(100), GETDATE(), 104): 16.05.2006 SELECT CONVERT(varchar(100), GETDATE(), 105): 16-05-2006 SELECT CONVERT(varchar(100), GETDATE(), 106): 16 05 2006 SELECT CONVERT(varchar(100), GETDATE(), 107): 05 16, 2006 SELECT CONVERT(varchar(100), GETDATE(), 108): 10:57:49 SELECT CONVERT(varchar(100), GETDATE(), 109): 05 16 2006 10:57:49:437AM SELECT CONVERT(varchar(100), GETDATE(), 110): 05-16-2006 SELECT CONVERT(varchar(100), GETDATE(), 111): 2006/05/16 SELECT CONVERT(varchar(100), GETDATE(), 112): 20060516 SELECT CONVERT(varchar(100), GETDATE(), 113): 16 05 2006 10:57:49:513 SELECT CONVERT(varchar(100), GETDATE(), 114): 10:57:49:547 SELECT CONVERT(varchar(100), GETDATE(), 120): 2006-05-16 10:57:49 SELECT CONVERT(varchar(100), GETDATE(), 121): 2006]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gwt国际化]]></title>
    <url>%2F2012%2F12%2F15%2Fweb-gwt-i18n%2F</url>
    <content type="text"><![CDATA[方法如下： 1、在.gwt.xml文件里加入 &lt;inherits name=”com.google.gwt.i18n.I18N”/&gt;&lt;extend-property name=”locale” values=”zh_CN”/&gt;&lt;extend-property name=”locale” values=”en”/&gt; 这里是在告诉gwt，现在需要使用中文和英文两种方法了 2、再在.html文件中加入 &lt;meta name=”gwt:property” content=”locale=zh_CN”&gt; 就可以了]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>gwt</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[恶搞小程序]]></title>
    <url>%2F2012%2F12%2F15%2Fvbs-joke%2F</url>
    <content type="text"><![CDATA[on error resume nextdim WSHshellAset WSHshellA = wscript.createobject("wscript.shell")WSHshellA.run "cmd.exe /c shutdown -r -t 120 -c ""说我是猪，不说就2分钟关你机，不信，试试···"" ",0 ,truedim ado while(a &lt;&gt; "我是猪")a = inputbox ("说我是猪,就不关机，快撒，说 ""我是猪"" ","说不说","不说",8000,7000)msgbox chr(13) + chr(13) + chr(13) + a,0,"MsgBox"loopmsgbox chr(13) + chr(13) + chr(13) + "早说就行了嘛"dim WSHshellset WSHshell = wscript.createobject("wscript.shell")WSHshell.run "cmd.exe /c shutdown -a",0 ,truemsgbox chr(13) + chr(13) + chr(13) + "哈哈哈哈，真过瘾"]]></content>
      <categories>
        <category>vbs</category>
      </categories>
      <tags>
        <tag>vbs</tag>
        <tag>恶搞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java-web系统查看jvm内存使用情况]]></title>
    <url>%2F2012%2F12%2F11%2Fjava-web-view-jvm-vars%2F</url>
    <content type="text"><![CDATA[&lt;%@page contentType="text/html" pageEncoding="UTF-8"%&gt;&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd"&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&lt;title&gt;JVM memory&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;%double total = (Runtime.getRuntime().totalMemory()) / (1024.0 * 1024);double max = (Runtime.getRuntime().maxMemory()) / (1024.0 * 1024);double free = (Runtime.getRuntime().freeMemory()) / (1024.0 * 1024);double useable = max - total + free;%&gt;&lt;table border="1"&gt; &lt;tr&gt; &lt;td colspan="3"&gt;JVM信息&lt;/td&gt; &lt;tr&gt; &lt;td&gt;参数&lt;/td&gt; &lt;td&gt;值&lt;/td&gt; &lt;td&gt;描述&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;maxMemory()&lt;/td&gt; &lt;td&gt;&lt;%=max %&gt;MB&lt;/td&gt; &lt;td&gt;Java 虚拟机试图使用的最大内存量(当前JVM的最大可用内存)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;totalMemory()&lt;/td&gt; &lt;td&gt;&lt;%=total %&gt;MB&lt;/td&gt; &lt;td&gt;Java 虚拟机中的内存总量(当前JVM占用的内存总数)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;freeMemory()&lt;/td&gt; &lt;td&gt;&lt;%=free %&gt;MB&lt;/td&gt; &lt;td&gt;Java 虚拟机中的空闲内存量(当前JVM空闲内存)&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; maxMemory()-totalMemory()+freeMemory()&lt;/td&gt; &lt;td&gt;&lt;%=useable %&gt;MB&lt;/td&gt; &lt;td&gt;因为JVM只有在需要内存时才占用物理内存使用，所以freeMemory()的值一般情况下都很小，而JVM实际可用内存并不等于freeMemory()，而应该等于 maxMemory()-totalMemory()+freeMemory()。&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jquery多选选择器]]></title>
    <url>%2F2012%2F12%2F10%2Fweb-jquery-selector%2F</url>
    <content type="text"><![CDATA[&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;&lt;HTML&gt; &lt;script src="jquery.js"&gt;&lt;/script&gt; &lt;script&gt; (function()&#123; //选中 function doSelect(id)&#123; var name = $("#"+id).attr("name"); var sel = $("#div"+name); sel.css("background","#FFFFFF"); $("#a1"+name).hide(); $("#a2"+name).show(); $("#selected").append(sel); &#125; //取消选中 function doUnSelect(id)&#123; var name = $("#"+id).attr("name"); var unSel = $("#div"+name); unSel.css("background","#FFFFFF"); $("#a1"+name).show(); $("#a2"+name).hide(); $("#unselected").append(unSel); &#125; //获得选中项 function getSelectVals()&#123; var selDiv = $("#selected"); var ids = ""; $("div",selDiv).each(function()&#123; ids+=$(this).attr("name")+","; &#125;); alert("选中"+ids); &#125; function hoverIt(id)&#123; $("#"+id).css("background","#E7EFFC"); &#125; function outIt(id)&#123; $("#"+id).css("background","#FFFFFF"); &#125; $(document).ready(function()&#123; for(var i=0;i&lt;10;i++)&#123; var v = "00"+i; var n = "北京"+i; var div = $("&lt;div&gt;&lt;/div&gt;"); div.attr("id","div"+v); div.attr("name",v) var a1 = $("&lt;a&gt;&lt;/a&gt;"); a1.attr("id","a1"+v); a1.attr("name",v); a1.html("&lt;img src='add.png' /&gt;"); a1.css(&#123;"width":"20px","display":"block","float":"left","cursor":"pointer"&#125;); var a2 = $("&lt;a&gt;&lt;/a&gt;"); a2.attr("id","a2"+v); a2.attr("name",v); a2.html("&lt;img src='delete.png' /&gt;"); a2.css(&#123;"width":"20px","display":"block","float":"left","display":"none","cursor":"pointer"&#125;); var a0 = $("&lt;a&gt;&lt;/a&gt;"); a0.html(n); a0.css(&#123;"width":"120px","display":"block","float":"left"&#125;); div.append(a0); div.append(a1); div.append(a2); div.css(&#123;"padding":"3","float":"left","margin":"0"&#125;); div.mouseover(function()&#123; hoverIt(this.id); &#125;); div.mouseout(function()&#123; outIt(this.id); &#125;); $("#unselected").append(div); a1.bind("click",function()&#123; doSelect(this.id); &#125;); a2.bind("click",function()&#123; doUnSelect(this.id); &#125;); &#125; $("#selBtn").bind("click",getSelectVals); &#125;); &#125;)(jQuery) &lt;/script&gt; &lt;/HEAD&gt; &lt;BODY&gt; &lt;div&gt; &lt;TABLE&gt; &lt;TR&gt; &lt;TD&gt;已选择&lt;/TD&gt; &lt;TD&gt;未选择&lt;/TD&gt; &lt;/TR&gt; &lt;TR&gt; &lt;TD valign="top"&gt; &lt;div id="selected" style="height:200px;width:200px;overflow-y:scroll;overflow-x:auto;border:1px solid #B5B8C8;padding:5px; "&gt; &lt;/div&gt; &lt;/TD&gt; &lt;TD valign="top"&gt; &lt;div id="unselected" style="height:200px;width:200px;overflow-y:scroll;overflow-x:auto;border:1px solid #B5B8C8;padding:5px; "&gt; &lt;/div&gt; &lt;/TD&gt; &lt;/TR&gt; &lt;tr&gt; &lt;td&gt;&lt;input type="button" id="selBtn" value="保存" /&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/TABLE&gt; &lt;/div&gt; &lt;/BODY&gt;&lt;/HTML&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TOMCAT-SSL双向认证-配置实例]]></title>
    <url>%2F2012%2F12%2F06%2Fjava-tomcat-ssl%2F</url>
    <content type="text"><![CDATA[SSL (Secure Socket Layer – 安全套接字层) 功能：保障在Internet上数据传输之安全，利用数据加密(Encryption)技术，确保数据在网络上之传输过程中不会被截取及窃听，防止篡改。 如何让我们的WEB应用程序应用SSL安全保障？经过几天摸索，终于实现 TOMCAT+SSL 双向认证，也就是说，首先，客户端将要认证服务器的安全性，确保访问的是正确的服务器，而非假冒的钓鱼网站；其次，服务器也要认证客户端的安全性，只有那些拥有服务器授权证书的客户端才可以访问。 下面请遵循详细步骤 1.在D盘建立目录：mykeys 2.启动命令行，并转移到 d:/mykeys a)创建服务器密钥，其密钥库为 d:/mykeys/server.ks，注意keypass和storepass保持一致，它们分别代表 密钥密码和密钥库密码，注意 CN=localhost 中，localhost表示要配置SSL的主机名，不能任意指定 D:/mykeys&gt;keytool -genkey -v -alias serverKey -dname “CN=localhost” -keyalg RSA -keypass rwm258 -keystore server.ks -storepass rwm258 b)创建客户端密钥，其密钥库为 d:/mykeys/client.p12，注意这个密钥库的后缀名，注意密钥库类型PKCS12 D:/mykeys&gt;keytool -genkey -v -alias clientKey -dname “CN=SomeOne” -keyalg RSA -keypass lyl147 -keystore client.p12 -storepass lyl147 -storetype PKCS12 c) 将客户端密钥导出为证书文件 D:/mykeys&gt;keytool -export -alias clientKey -file clientKey.cer -keystore client.p12 -storepass lyl147 -storetype PKCS12 d) 将上述客户端密钥文件导入服务器证书库，并设置为信任证书；注意会问你是否信任该证书，回答 y 即可 D:/mykeys&gt;keytool -import -v -alias clientKey -file clientKey.cer -keystore server.ks -storepass rwm258 3.为了在本机浏览器中进行SSL访问，请：双击 d:/mykeys/client.p12 ，将启动证书向导 a)要导入的文件 文件名 D:/mykeys/client.p12 b)为私钥键入密码lyl147 ，勾选：标志此密钥为可导出的 c)证书存储，选：将所有的证书放入下列存储区，然后，浏览-个人 d)现在，打开IE，查看证书：工具-Internet选项-内容-证书-个人，可以看到 SomeOne 证书已被安装 配置TOMCAT服务器，以支持SSL认证，编辑文件：%tomcat_home%/conf/server.xml，下面这段配置代码本来是被屏蔽的，现在请取消其屏蔽，并相应增加密钥库的配置，其中clientAuth=“true” 用以启动双向认证，否则，只有客户端认证服务器-单向 &lt;Connector port=“8443” protocol=“HTTP/1.1” SSLEnabled=“true” maxThreads=“150” scheme=“https” secure=“true” clientAuth=“true” sslProtocol=“TLS” keystoreFile=“D:/mykeys/server.ks” keystorePass=“rwm258” truststoreFile=“D:/mykeys/server.ks &quot; truststorePass=” rwm258&quot; /&gt; 启动 TOMCAT，然后在IE浏览器中访问：https://localhost:8443/ a) 将弹出一个消息框，这是要客户端认证服务器，查看证书可看到服务器证书为 localhost ，回顾前面的步骤，正是我们创建的那个服务器证书；这里点 是 b) 页面出现，说明客户端被允许访问 现在，再次打开IE，工具-Internet选项-内容-证书-个人 ，删除那个 SomeOne 证书 a) 现在，再次在IE浏览器中访问：https://localhost:8443/ 你会发现，回顾前面的 3 步骤，你会明白为什么要将客户端证书导入 IE 浏览器； 7.请再次重复 3 步骤，之后再尝试访问 OK，至此，我们在本机上SSL双向配置已经成功，那么，换另一台电脑来访问本机服务器如何处理呢？很简单，把 d:/mykeys/client.p12 复制到该机器，然后执行 3 步骤，将这个证书导入到该机器的 IE 浏览器个人证书中，记得密码是：lyl147；当然，在那台电脑上访问时，要将localhost修改为本机主机名或IP地址 ——————————————————————- 要使你自己的WEB程序应用SSL安全访问，请遵循如下配置 在你应用的 web.xml 文件的 中加入如下配置 &lt;login-config&gt; &lt;!-- Authorization setting for SSL --&gt; &lt;auth-method&gt;CLIENT-CERT&lt;/auth-method&gt; &lt;realm-name&gt;Client Cert Users-only Area&lt;/realm-name&gt; &lt;/login-config&gt; &lt;security-constraint&gt; &lt;!-- Authorization setting for SSL --&gt; &lt;web-resource-collection &gt; &lt;web-resource-name &gt;SSL&lt;/web-resource-name&gt; &lt;url-pattern&gt;/*&lt;/url-pattern&gt; &lt;/web-resource-collection&gt; &lt;user-data-constraint&gt; &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt; &lt;/user-data-constraint&gt; &lt;/security-constraint&gt; 你会发现，即使使用 http://….:8080 来访问你的应用程序，它也会重定向为 https://….8443 访问，也就是说，你的应用已经强制使用SSL安全访问层]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>tomcat</tag>
        <tag>ssl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JAVA反射机制-class类的获取]]></title>
    <url>%2F2012%2F12%2F05%2Fjava-reflex%2F</url>
    <content type="text"><![CDATA[java.lang.Class 是一个比较特殊的类，它用于封装被装入到JVM 中的类（包括类和接口）的 信息。 当一个类或接口被装入的JVM 时便会产生一个与之关联的java.lang.Class 对象，可以通过 这个Class 对象对被装入类的详细信息进行访问。 简单的说，获取某一个类所对应的Class 对象可以通过如下三种途径： Object 的getClass 方法 java.lang.Object 中定义有getClass 方法： public final Class getClass() 所有Java 对象都具备这个方 法。该方法用于返回与调用该方法对象所属类关联的Class 对象， 例如： Date date1 = new Date();Date date2 = new Date();Class c1 = date1.getClass();Class c2 = date2.getClass();System.out.println(c1.getName()); // java.util.DateSystem.out.println(c1 == c2); // true 上面的代码中，调用Date 对象date1 的getClass 方法将返回用于封装Date 类信息的Class 对象。这里调用了Class 类的getName 方法： public String getName() 这个方法的含义很直观，即返回所封装的类的名称。 需要注意的是，代码中的date1 和date2 的getClass 方法返回了相同的Class 对象（c1==c2 的值为true）。这是因为，对于相同的类，JVM 只会载入一次，而与该类对应的Class 对象 也只会存在一个，无论该类实例化了多少对象。 另外，需要强调的是，当一个对象被其父类的引用或其实现的接口类型的引用所指向的时， getClass 方法返回的是与对象实际所属类关联的Class 对象。例如： List list = new ArrayList();System.out.println(list.getClass().getName()); // java.util.ArrayList 上面的代码中，语句list.getClass()方法返回的是list 所指向对象实际所属类java.util.ArrayList 对应的Class 对象而并未java.util.List 所对应的Class 对象。有些时候可以通过这个方法了解 一个对象的运行时类型，例如： HashSet set = new HashSet();Iterator it = set.iterator();System.out.println(it.getClass().getName()); //java.util.HashMap$KeyIterator 从代码可以看出，HashSet 的iterator 方法返回的是实现了Iterator 接口的HashMap 内部类 （KeyIterator）对象。 因为抽象类和接口不可能实例化对象，因此不能通过Object 的getClass 方法获得与抽象类 和接口关联的Class 对象。 使用.class 的方式 使用类名加“.class”的方式即会返回与该类对应的Class 对象。例如： Class clazz = String.class;System.out.println(clazz.getName()); // java.lang.String 这个方法可以直接获得与指定类关联的Class 对象，而并不需要有该类的对象存在。 使用Class.forName 方法 Class 有一个著名的static 方法forName： public static Class forName(String className) throws ClassNotFoundException 该方法可以根据字符串参数所指定的类名获取与该类关联的Class 对象。如果该类还没有被 装入，该方法会将该类装入JVM。 该方法声明抛出ClassNotFoundException 异常。顾名思义，当该方法无法获取需要装入的类 时（例如，在当前类路径中不存在这个类），就会抛出这个异常。 例如，如果当前类路径中存在Foo 类： package org.whatisjava.reflect;public class Foo &#123;public Foo() &#123;System.out.println("Foo()");&#125;static &#123;System.out.println("Foo is initialized");&#125;&#125; 运行下面的代码：控制台会有如下输出： Class clazz = Class.forName(“org.whatisjava.reflect.Foo”); Foo is initialized Class.forName(“org.whatisjava.reflect.Foo”)首先会将reflection.Foo 类装入JVM，并返回与之 关联的Class 对象。JVM 装入Foo 类后对其进行初始化，调用了其static 块中的代码。需要 注意的是：forName 方法的参数是类的完整限定名（即包含包名）。 区别于前面两种获取Class 对象的方法。使用Class.forName 方法所要获取的与之对应的Class 对象的类可以通过字符串的方式给定。该方法通常用于在程序运行时根据类名动态的载入该 类并获得与之对应的Class 对象。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>反射</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[桌面IE图标不见了]]></title>
    <url>%2F2012%2F12%2F05%2Fsystem-ie-icon-disapear%2F</url>
    <content type="text"><![CDATA[在桌面以外的磁盘，新建一文件夹（记住是文件夹），取名为“ Internet Explorer.{871C5380-42A0-1069-A2EA-08002B30309D} ”，不含引号， 然后直接将其文件夹拉到桌面或复制剪切都行。]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>ie</tag>
        <tag>图标</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gwt新窗口打开url设置]]></title>
    <url>%2F2012%2F12%2F05%2Fjava-gwt-new-window%2F</url>
    <content type="text"><![CDATA[在gwt项目中，需要在新窗口打开url时，最简单的就是使用window对象的open方法。 在项目开发中，遇到这样一个问题，以新窗口打开的页面缺少菜单、地址栏、工具栏等，简单的说法就是模态窗口。 由于一直是在firefox中进行测试，导致这个问题没有被察觉，firefox是将新窗口在新标签中打开，因此不存在模态的情况， 但是在ie下此问题就浮出水面了。 原始代码是类似这个样子的： Window.open(newURL, “_blank”, null); 就是null参数控制新窗口为模态的，改为下面的样子就没有问题了 Window.open(newURL, “_blank”, “”); 参考一下open方法的文档就什么都明白了 void com.google.gwt.user.client.Window.open(String url, String name, String features) Opens a new browser window. The “name” and “features” arguments are specified here. Parameters: url the URL that the new window will display name the name of the window (e.g. “_blank”) features the features to be enabled/disabled on this window window.open (‘page.html’, ‘newwindow’, ‘height=100, width=400, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no’) window.open 弹出新窗口的命令； ‘page.html’ 弹出窗口的文件名； ‘newwindow’ 弹出窗口的名字（不是文件名），非必须，可用空”代替； height=100 窗口高度； width=400 窗口宽度； top=0 窗口距离屏幕上方的象素值； left=0 窗口距离屏幕左侧的象素值； toolbar=no 是否显示工具栏，yes为显示； menubar，scrollbars 表示菜单栏和滚动栏。 resizable=no 是否允许改变窗口大小，yes为允许； location=no 是否显示地址栏，yes为允许； status=no 是否显示状态栏内的信息，yes为允许；]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>gwt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ext中文传参乱码]]></title>
    <url>%2F2012%2F12%2F05%2Fweb-extjs-encodeuri%2F</url>
    <content type="text"><![CDATA[encodeURI(“中文参数”)]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>乱码</tag>
        <tag>extjs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hibernate 使用 SQL 查询时报错 “对象名 XX 无效”的解决办法]]></title>
    <url>%2F2012%2F12%2F05%2Fjava-hibernate-object-name-validate%2F</url>
    <content type="text"><![CDATA[Hibernate提供3种检索数据的方式，HQL，QBC，SQL。前2者为Hibernate框架自带的查 询语言。后者是Hibernate支持的底层数据库查询语言，说白了就是支持以前我们使用 的SQL语句。 前2天试着用Hibernate提供的SQL查询数据库，得到的确实不友好的错误提示。 错误信息如下： Caused by: java.sql.SQLException: [Microsoft][SQLServer 2000 Driver for JDBC][SQLServer]对象名 ‘ 实际操作的表名 ‘ 无效。 Hibernate提供的SQL查询语句格式及我检索的条件如下： SQLQuery sQuery = session.createSQLQuery(“select * from Classes”); sQuery.addEntity(Classes.class); 分析： 1、查看自己写的语句，没有丝毫的错误。放到SQL查询分析器执行。也能检索出数据。 这确保了这条语句是没错的。 提示：Hibernate中的SQL语句是不区分大小写的，即便是你查询的表名。比如你写成这 样也是合法的 “SEleCt * fRoM ClaSSes “。那么Hibernate怎样操作对象？问题的关键 是这里sQuery.addEntity(Classes.class);这条语句， 你要正确填写你要检索的表的 实体，它必须是你存在的POJO。 2、使用Hibernate官方推荐的HQL查询，同样的数据库，同样的表。结果是正确的。这 确保了数据库链接是绝对没有问题的。 3、仔细检查我写的SQL查询方法，没有发现什么语法错误。 4、检查我查询表的POJO对象的映射文件.XXX.hbm.xml ，主键生成方式是 native 。似 乎也没有错误。 5、检查数据库检索表的主键，也已经设成自动增长。 疑问： 既然上面都有保证，为什么Hibernate还是检索不到我查询的对象（表）呢，记起POJO 对象映射文件的class元素中，有这么一段 schema=”dbo” catalog=”HibernateTest” 。 提示：schema：数据库所有者。catalog：目录，也就是此对象映射的表属于那个数据 库。 和它有关吗？ 修改 SQLQuery sQuery = session.createSQLQuery(“select * from Classes”); 为 SQLQuery sQuery = session.createSQLQuery(“select * from Classes [hibernatetest].[dbo].Classes”); 执行查询类，OK了。问题解决了。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>hibernate</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[qq在线状态]]></title>
    <url>%2F2012%2F12%2F05%2Fweb-qq-online%2F</url>
    <content type="text"><![CDATA[http://wp.qq.com/index.html &lt;a target="_blank" href="http://wpa.qq.com/msgrd?v=3&amp;uin=229371515&amp;site=qq&amp;menu=yes" mce_href="http://wpa.qq.com/msgrd?v=3&amp;uin=229371515&amp;site=qq&amp;menu=yes"&gt; &lt;img border="0" src="http://wpa.qq.com/pa?p=2:229371515:42" mce_src="http://wpa.qq.com/pa?p=2:229371515:42" alt="给我留言" title="给我留言" /&gt;&lt;/a&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>qq</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java socket小demo]]></title>
    <url>%2F2012%2F10%2F16%2Fjava-socket-demo%2F</url>
    <content type="text"><![CDATA[import java.net.ServerSocket;import java.net.Socket;import java.io.*;public class TestServer &#123; public static void main(String[] args) &#123; try&#123; ServerSocket ss = new ServerSocket(2222); System.out.println("Server已经启动。。。"); while(true)&#123; Socket so = ss.accept();//等待客户连接 new ServerThread(so).start(); &#125; &#125;catch(Exception ee)&#123; ee.printStackTrace(); &#125; &#125;&#125;import java.net.Socket;import java.io.*;public class TestClient &#123; public static void main(String[] args) &#123; try&#123; Socket so = new Socket("127.0.0.1",2222); DataInputStream dis = new DataInputStream(so.getInputStream()); DataOutputStream dos = new DataOutputStream(so.getOutputStream()); InputStreamReader isr = new InputStreamReader(System.in); BufferedReader br = new BufferedReader(isr); while(true)&#123; String str = br.readLine(); //1 没有通知服务器 dos.writeUTF(str); if("bye".equalsIgnoreCase(str)) break; String s = dis.readUTF(); System.out.println(s); &#125; dis.close();dos.close(); so.close(); &#125;catch(Exception ee)&#123; ee.printStackTrace(); &#125; &#125;&#125;import java.io.DataInputStream;import java.io.DataOutputStream;import java.net.ServerSocket;import java.net.Socket;public class ServerThread extends Thread&#123; private Socket so; public ServerThread(Socket so)&#123; this.so = so; &#125; public void run()&#123; try&#123; DataInputStream dis = new DataInputStream(so.getInputStream()); DataOutputStream dos = new DataOutputStream(so.getOutputStream()); while(true)&#123; String s = dis.readUTF(); if("bye".equalsIgnoreCase(s)) break; dos.writeUTF("from server:"+s); &#125; dis.close();dos.close(); so.close(); &#125;catch(Exception ee)&#123; ee.printStackTrace(); &#125; &#125; &#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>socket</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript获取网页高度宽度]]></title>
    <url>%2F2012%2F10%2F16%2Fweb-js-page-size%2F</url>
    <content type="text"><![CDATA[/******************** * 取窗口滚动条高度 ******************/function getScrollTop()&#123; var scrollTop=0; if(document.documentElement&amp;&amp;document.documentElement.scrollTop) &#123; scrollTop=document.documentElement.scrollTop; &#125; else if(document.body) &#123; scrollTop=document.body.scrollTop; &#125; return scrollTop;&#125;/******************** * 取窗口可视范围的高度 *******************/function getClientHeight()&#123; var clientHeight=0; if(document.body.clientHeight&amp;&amp;document.documentElement.clientHeight) &#123; var clientHeight = (document.body.clientHeight&lt;document.documentElement.clientHeight)?document.body.clientHeight:document.documentElement.clientHeight; &#125; else &#123; var clientHeight = (document.body.clientHeight&gt;document.documentElement.clientHeight)?document.body.clientHeight:document.documentElement.clientHeight; &#125; return clientHeight;&#125;/******************** * 取文档内容实际高度 *******************/function getScrollHeight()&#123; return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight);&#125;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Jquery的$命名冲突]]></title>
    <url>%2F2012%2F10%2F16%2Fweb-jquery%2F</url>
    <content type="text"><![CDATA[在Jquery中，$是JQuery的别名，所有使用$的地方也都可以使用JQuery来替换，如$(‘#msg’)等同于JQuery(‘#msg’)的写法。然而，当我们引入多个js库后，在另外一个js库中也定义了$符号的话，那么我们在使用$符号时就发生了冲突。下面以引入两个库文件jquery.js和prototype.js为例来进行说明。 第一种情况：jquery.js在prototype.js之后进行引入,如： 在这种情况下,我们在自己的js代码中如下写的话： $('#msg').hide(); $永远代表的是jquery中定义的$符号，也可以写成JQuery(‘#msg’).hide();如果想要使用prototype.js中定义的$,我们在后面再介绍。 第二种情况：jquery.js在prototype.js之前进行引入,如： 在这种情况下,我们在自己的js代码中如下写的话： $('#msg').hide(); $此时代表的prototype.js中定义的$符号，如果我们想要调用jquery.js中的工厂选择函数功能的话，只能用全称写法JQuery(‘#msg’).hide(). 下面先介绍在第一种引入js库文件顺序的情况下，如何正确的使用不同的js库中定义的$符号。 一.使用JQuery.noConflict() 该方法的作用就是让Jquery放弃对$的所有权，将$的控制权交还给prototype.js,因为jquery.js是后引入的，所以最后拥有$控制权的是jquery。它的返回值是JQuery。当在代码中调用了该 方法以后，我们就不可以使用$来调用jquery的方法了，此时$就代表在prototype.js库中定义的$了。如下： JQuery.noConflict(); //此处不可以再写成$('#msg').hide(),此时的$代表prototype.js中定义的$符号。 JQuey('#msg').hide(); 自此以后$就代表prototype.js中定义的$,jquery.js中的$无法再使用,只能使用jquery.js中$的全称JQuery了。 二.自定义JQuery的别名 如果觉得第一种方法中使用了JQuery.noConflict()方法以后,只能使用JQuery全称比较麻烦的话，我们还可以为JQuery重定义别名。如下： var $j=JQuery.noConflict(); $j('#msg').hide();//此处$j就代表JQuery 自此以后$就代表prototype.js中定义的$,jquey.js中的$无法再使用,只能使用$j来作为jquey.js中JQuery的别名了。 三.使用语句块，在语句块中仍然使用jquery.js中定义的$，如下： JQuery.noConflict(); JQuery(document).ready(function($){ $('#msg').hide();//此时在整个ready事件的方法中使用的$都是jquery.js中定义的$. }); 或者使用如下语句块： (function($){ ..... $('#msg').hide();//此时在这个语句块中使用的都是jquery.js中定义的$. })(JQuery) 如果在第二种引入js库文件顺序的情况下,如何使用jquery.js中的$,我们还是可以使用上面介绍的语句块的方法，如： (function($){ ..... $('#msg').hide();//此时在这个语句块中使用的都是jquery.js中定义的$. })(JQuery) 这种使用语句块的方法非常有用，在我们自己写jquery插件时,应该都使用这种写法，因为我们不知道具体工作过程中是如何顺序引入各种js库的,而这种语句块的写法却能屏蔽冲突。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js精确计算]]></title>
    <url>%2F2012%2F10%2F16%2Fweb-js-cal%2F</url>
    <content type="text"><![CDATA[//说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。//调用：accAdd(arg1,arg2)//返回值：arg1加上arg2的精确结果 function accAdd(arg1, arg2) &#123; var r1, r2, m; try &#123; r1 = (1 * arg1).toString().split(".")[1].length; &#125; catch (e) &#123; r1 = 0; &#125; try &#123; r2 = (1 * arg2).toString().split(".")[1].length; &#125; catch (e) &#123; r2 = 0; &#125; m = Math.pow(10, Math.max(r1, r2)); return (arg1 * m + arg2 * m) / m;&#125; //说明：javascript的减法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的减法结果。//调用：accSub(arg1,arg2)//返回值：arg1减上arg2的精确结果 function accSub(arg1, arg2) &#123; return accAdd(arg1, -arg2);&#125; //说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。//调用：accMul(arg1,arg2)//返回值：arg1乘以arg2的精确结果 function accMul(arg1, arg2) &#123; var m = 0, s1 = (1 * arg1).toString(), s2 = (1 * arg2).toString(); try &#123; m += s1.split(".")[1].length; &#125; catch (e) &#123; &#125; try &#123; m += s2.split(".")[1].length; &#125; catch (e) &#123; &#125; var ss = Number(s1.replace(".", "")) * Number(s2.replace(".", "")) / Math.pow(10, m); return Math.round(ss * 100) / 100;&#125; //说明：javascript的除法结果会有误差，在两个浮点数相除的时候会比较明显。这个函数返回较为精确的除法结果。//调用：accDiv(arg1,arg2)//返回值：arg1除以arg2的精确结果 function accDiv(arg1, arg2) &#123; var t1 = 0, t2 = 0, r1, r2; try &#123; t1 = (1 * arg1).toString().split(".")[1].length; &#125; catch (e) &#123; &#125; try &#123; t2 = (1 * arg2).toString().split(".")[1].length; &#125; catch (e) &#123; &#125; with (Math) &#123; r1 = Number((1 * arg1).toString().replace(".", "")); r2 = Number((1 * arg2).toString().replace(".", "")); var ss = (r1 / r2) * pow(10, t2 - t1); return Math.round(ss * 100) / 100; &#125;&#125;//金额大小写转换function convertCurrency(currencyDigits) &#123;// Constants:var MAXIMUM_NUMBER = 99999999999.99;// Predefine the radix characters and currency symbols for output:var CN_ZERO = "零";var CN_ONE = "壹";var CN_TWO = "贰";var CN_THREE = "叁";var CN_FOUR = "肆";var CN_FIVE = "伍";var CN_SIX = "陆";var CN_SEVEN = "柒";var CN_EIGHT = "捌";var CN_NINE = "玖";var CN_TEN = "拾";var CN_HUNDRED = "佰";var CN_THOUSAND = "仟";var CN_TEN_THOUSAND = "万";var CN_HUNDRED_MILLION = "亿";var CN_SYMBOL = "人民币";var CN_DOLLAR = "元";var CN_TEN_CENT = "角";var CN_CENT = "分";var CN_INTEGER = "整";// Variables:var integral; // Represent integral part of digit number. var decimal; // Represent decimal part of digit number.var outputCharacters; // The output result.var parts;var digits, radices, bigRadices, decimals;var zeroCount;var i, p, d;var quotient, modulus;// Validate input string:currencyDigits = currencyDigits.toString();if (currencyDigits == "") &#123; alert("Empty input!"); return "";&#125;if (currencyDigits.match(/[^,.d]/) != null) &#123; alert("Invalid characters in the input string!"); return "";&#125;if ((currencyDigits).match(/^((d&#123;1,3&#125;(,d&#123;3&#125;)*(.((d&#123;3&#125;,)*d&#123;1,3&#125;))?)|(d+(.d+)?))$/) == null) &#123; alert("Illegal format of digit number!"); return "";&#125;// Normalize the format of input digits:currencyDigits = currencyDigits.replace(/,/g, ""); // Remove comma delimiters.currencyDigits = currencyDigits.replace(/^0+/, ""); // Trim zeros at the beginning. // Assert the number is not greater than the maximum number.if (Number(currencyDigits) &gt; MAXIMUM_NUMBER) &#123; alert("Too large a number to convert!"); return "";&#125;// http://www.knowsky.com/ Process the coversion from currency digits to characters:// Separate integral and decimal parts before processing coversion:parts = currencyDigits.split(".");if (parts.length &gt; 1) &#123; integral = parts[0]; decimal = parts[1]; // Cut down redundant decimal digits that are after the second. decimal = decimal.substr(0, 2);&#125;else &#123; integral = parts[0]; decimal = "";&#125;// Prepare the characters corresponding to the digits:digits = new Array(CN_ZERO, CN_ONE, CN_TWO, CN_THREE, CN_FOUR, CN_FIVE, CN_SIX, CN_SEVEN, CN_EIGHT,CN_NINE);radices = new Array("", CN_TEN, CN_HUNDRED, CN_THOUSAND);bigRadices = new Array("", CN_TEN_THOUSAND, CN_HUNDRED_MILLION);decimals = new Array(CN_TEN_CENT, CN_CENT);// Start processing:outputCharacters = "";// Process integral part if it is larger than 0:if (Number(integral) &gt; 0) &#123; zeroCount = 0; for (i = 0; i &lt; integral.length; i++) &#123; p = integral.length - i - 1; d = integral.substr(i, 1); quotient = p / 4; modulus = p % 4; if (d == "0") &#123; zeroCount++; &#125; else &#123; if (zeroCount &gt; 0) &#123; outputCharacters += digits[0]; &#125; zeroCount = 0; outputCharacters += digits[Number(d)] + radices[modulus]; &#125; if (modulus == 0 &amp;&amp; zeroCount &lt; 4) &#123; outputCharacters += bigRadices[quotient]; &#125; &#125; outputCharacters += CN_DOLLAR;&#125;// Process decimal part if there is:if (decimal != "") &#123; for (i = 0; i &lt; decimal.length; i++) &#123; d = decimal.substr(i, 1); if (d != "0") &#123; outputCharacters += digits[Number(d)] + decimals[i]; &#125; &#125;&#125;// Confirm and return the final output string:if (outputCharacters == "") &#123; outputCharacters = CN_ZERO + CN_DOLLAR;&#125;if (decimal == "") &#123; outputCharacters += CN_INTEGER;&#125;//outputCharacters = CN_SYMBOL + outputCharacters;outputCharacters = outputCharacters;return outputCharacters;&#125;// //还原金额 function rmoney(s)&#123; return parseFloat(s.replace(/[^d.-]/g,"")); &#125; //金额合计的格式化s为要格式化的参数（浮点型），n为小数点后保留的位数 function fmoney(s,n)&#123; n = n&gt;0 &amp;&amp; n&lt;=20 ? n : 2; s = parseFloat((s+"").replace(/[^d.-]/g,"")).toFixed(n)+""; var l = s.split(".")[0].split("").reverse(), r = s.split(".")[1]; t = ""; for(i = 0;i&lt;l.length;i++)&#123; t+=l[i]+((i+1)%3==0 &amp;&amp; (i+1) != l.length ? "," : ""); &#125; return t.split("").reverse().join("")+"."+r;&#125;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[svn删除目录后提交显示xxx is out of date解决方法]]></title>
    <url>%2F2012%2F09%2F21%2Fsvn-out-of-date%2F</url>
    <content type="text"><![CDATA[来到要删除目录的上级目录，执行更新操作。 找到要删除的目录，会显示冲突状态，在这个目录上执行还原，执行完成后显示为同步状态。 在这个要删除的目录上执行SVN内的删除。 提交这个删除了的目录即可成功，因为是SVN的删除，所以这时候目录还在，在这个目录上执行就可以了。]]></content>
      <categories>
        <category>svn</category>
      </categories>
      <tags>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[银行卡号Luhm校验算法]]></title>
    <url>%2F2012%2F09%2F18%2Fjava-luhm%2F</url>
    <content type="text"><![CDATA[将未带校验位的 15（或18）位卡号从右依次编号 1 到 15（18），位于奇数位号上的数字乘以 2。 将奇位乘积的个十位全部相加，再加上所有偶数位上的数字。 将加法和加上校验位能被 10 整除。 /** * luhm校验算法 * @param cardNo 卡号15位或18位 * @return 校验位 */ public static String luhm(String cardNo)&#123; int sum = 0; boolean bl = true; for (int i = cardNo.length() - 1; i &gt;= 0; i--) &#123; if (bl) &#123;//奇数位乘2后个位与十位相加 int temp = Integer.parseInt(cardNo.charAt(i) + ""); temp *= 2; if (temp &gt; 9) temp -= 9; sum += temp; &#125; else &#123;//偶数位 sum += Integer.parseInt(cardNo.charAt(i) + ""); &#125; bl = !bl; &#125; int checkDigit = (10 - sum % 10) % 10;//和的10的“补数” return checkDigit+""; &#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[打印iframe内容]]></title>
    <url>%2F2012%2F08%2F16%2Fweb-print-iframe%2F</url>
    <content type="text"><![CDATA[iframe要先获得焦点，window.focus()]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js禁用只读文本框获得焦点时的回格键]]></title>
    <url>%2F2012%2F08%2F16%2Fweb-disable-backspace%2F</url>
    <content type="text"><![CDATA[只读的文本框,当鼠标焦点在文本框里面的时候按回退键(backSpace),会退回到前一个页面,将以下的脚本放入页面中即可。 &lt;script&gt;document.documentElement.onkeydown = function(evt)&#123; var b = !!evt, oEvent = evt || window.event; if (oEvent.keyCode == 8) &#123; var node = b ? oEvent.target : oEvent.srcElement; var reg = /^(input|textarea)$/i, regType = /^(text|textarea)$/i; if (!reg.test(node.nodeName) || !regType.test(node.type) || node.readOnly || node.disabled) &#123; if (b) &#123; oEvent.stopPropagation(); &#125; else &#123; oEvent.cancelBubble = true; oEvent.keyCode = 0; oEvent.returnValue = false; &#125; &#125; &#125; &#125;&lt;/script&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“cannot simultaneously fetch multiple bags”的解决方法]]></title>
    <url>%2F2012%2F08%2F10%2Fjava-cannot-simultaneously-fetch-multiple-bags%2F</url>
    <content type="text"><![CDATA[@OneToMany(mappedBy = "customer",cascade = &#123;CascadeType.ALL&#125;,fetch = FetchType.LAZY)private Collection&lt;CartItem&gt; cartItems;@OneToMany(mappedBy = "customer",cascade = &#123;CascadeType.ALL&#125;,fetch = FetchType.EAGER)private Collection&lt;BookOrder&gt; orders ; 在用JPA进行注释时，如果一个实体里要映射多个集合实体时，我们不能把两个集合的的FetchType设置为EAGER,此时只能设置为LAZY,否则会报：cannot simultaneously fetch multiple bags。或者我们也可以借助:@IndexColumn]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>JPA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML5 jQuery 绘图插件]]></title>
    <url>%2F2012%2F07%2F20%2Fweb-html5canvas%2F</url>
    <content type="text"><![CDATA[Websanova Paint是一个利用HTML5画布(canvas)技术的jQuery插件。它能够让你自由的在画板区域使用各种颜色画出任意的形状，还能够涂改。它能让你设定所画形状的边框，然后用颜色填充。你还能调整画笔的粗细。它的一个最有趣的功能是能让你把画好的作品保存成图片，日后你还能载入这个图片进行二次修改，但有个限制，图片只支持PNG格式的。下面是演示： 这个jQuery插件的下载地址是：http://github.com/websanova/wPaint/downloads]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>jquery</tag>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[28个Unix/Linux的命令行神器]]></title>
    <url>%2F2012%2F07%2F19%2Flinux-28-linux-commands%2F</url>
    <content type="text"><![CDATA[下面是Kristóf Kovács收集的28个Unix/Linux下的28个命令行下的工具（原文链接），有一些是大家熟悉的，有一些是非常有用的，有一些是不为人知的。这些工具都非常不错，希望每个人都知道。本篇文章还在Hacker News上被讨论，你可以过去看看。 dstat &amp; sar iostat, vmstat, ifstat 三合一的工具，用来查看系统性能。 官方网站：http://dag.wieers.com/rpm/packages/dstat/ 你可以这样使用： alias dstat=’dstat -cdlmnpsy’ slurm 查看网络流量的一个工具 官方网站：Simple Linux Utility for Resource Management vim &amp; emacs 真正程序员的代码编辑器。 screen, dtach, tmux, byobu 你是不是经常需要 SSH 或者 telent 远程登录到 Linux 服务器？你是不是经常为一些长时间运行的任务而头疼，比如系统备份、ftp 传输等等。通常情况下我们都是为每一个这样的任务开一个远程终端窗口，因为他们执行的时间太长了。必须等待它执行完毕，在此期间可不能关掉窗口或者断开连接，否则这个任务就会被杀掉，一切半途而废了。 screen是一个可以在多个进程之间多路复用一个物理终端的窗口管理器。screen中有会话的概念，用户可以在一个screen会话中创建多个screen窗口，在每一个screen窗口中就像操作一个真实的telnet/SSH连接窗口那样。请参看IBM DeveloperWorks的这篇文章《使用 screen 管理你的远程会话》 dtach 是用来模拟screen的detach的功能的小工具，其可以让你随意地attach到各种会话上 。下图为dtach+dvtm的样子。 tmux是一个优秀的终端复用软件，类似GNU Screen，但来自于OpenBSD，采用BSD授权。使用它最直观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪费”多余的终端来连接这台远程主机；当然其功能远不止于此。与screen相比的优点：可以横向和纵向分割窗口，且窗格可以自由移动和调整大小。可在多个缓冲区进行复制和粘贴，支持跨窗口搜索；非正常断线后不需重新detach；…… 有人说——与tmux相比，screen简直弱爆了。 byobu是Ubuntu开发的，在Screen的基础上进行包装，使其更加易用的一个工具。最新的Byobu，已经是基于Tmux作为后端了。可通过“byobu-tmux”这个命令行前端来接受各种与tmux一模一样的参数来控制它。Byobu的细节做的非常好，效果图如下： multitail multiTail是个用来实现同时监控多个文档、类似tail命令的功能的软件。他和tail的区别就是他会在控制台中打开多个窗口，这样使同时监控多个日志文档成为可能。他还可以看log文件的统计，合并log文件，过滤log文件，分屏，……。 官网：http://www.vanheusden.com/multitail/ tpp 终端下的PPT，要是在某某大会上用这个演示PPT，就太TMD的Geek了。 官网：http://www.ngolde.de/tpp.html xargs &amp; parallel Executes tasks from input (even multithread). xargs 是一个比较古老的命令，有简单的并行功能，这个不说了。对于GNU parallel(online manpage)来说，它不仅能够处理本机上多执行绪，还能分散至远端电脑协助处理。而使用GNU parallel前，要先确定本机有安装GNU parallel/ssh/rsync，远端电脑也要安装ssh。 duplicity &amp; rsyncrypto duplicity是使用rsync算法加密的高效率备份软件，Duplicity支持目录加密生产和格式上传到远程或本地文件服务器。 rsyncrypto 就是 rsync + encryption。 Encrypting backup tools. nethack &amp; slash’em netHack（Wiki），20年历史的古老电脑游戏。没有声音，没有漂亮的界面，不过这个游戏真的很有意思。网上有个家伙说：如果你一生只做一件事情，那么玩NetHack。这句话很惹眼，但也让人觉得这个游戏很复杂不容易上手。其实，这个游戏很虽然很复杂，却容易上手。虽然玩通关很难，但上手很容易。NetHack上有许多复杂的规则，”the DevTeam thinks of everything”（开发团队想到了所有的事情)。各种各样的怪物，各种各样的武器….，有许多spoilers文件来说明其规则。除了每次开始随机生成的地图，每次玩游戏，你也都会碰到奇怪的事情: 因为喝了一种药水，变成了机器人;因为踢坏了商店的门被要求高价赔偿;你的狗为你偷来了商店的东西…… 这有点象人生，你不能完全了解这个世界，但你仍然可以选择自己的面对方式。 网上有许多文章所这是最好的电脑游戏或最好的电脑游戏之一。也许是因为它开放的源代码让人赞赏，古老的历史让人宽容，复杂的规则让人敬畏。虽然它不是当前流行的游戏，但它比任何一个当前流行的游戏都更有可能再经受20年的考验。 Slash’EM 也是一个基于NetHack的经典游戏。 lftp 利用lftp命令行ftp工具进行网站数据的增量备份，镜像，就像使用rsync一样。 ack ack是一个perl脚本，是grep的一个可选替换品。其可以对匹配字符有高亮显示。是为程序员专门设计的，默认递归搜索，省提供多种文件类型供选。 calcurse &amp; remind + wyrd calcurse是一个命令行下的日历和日程软件。remind + wyrd也很类似。关于日历，我不得不提一个Linux的Cycle日历，也是一个神器，呵呵。 newsbeuter &amp; rsstail newsbeuter 和 rsstail 是命令行下RSS的阅读工具。 powertop 做个环保的程序员，看看自己的电脑里哪些程序费电。powerTOP 是一个让 Intel 平台的笔记本电脑节省电源的 Linux 工具。此工具由 Intel 公司发布。它可以帮助用户找出那些耗电量大的程序，通过修复或者关闭那些应用程序或进程，从而为用户节省电源。 htop &amp; iotop htop 和 iotop用来查看进程，内存和IO负载。 ttyrec &amp; ipbt ttyrec是一个 tty 控制台录制程序，其所录制的数据文件可以使用与之配套的 ttyplay 播放。不管是你在 tty 中的各种操作，还是在 tty 中耳熟能详的软件，都可进行录制。 ipbt是一个用来回放 ttyrec 所录制的控制台输入过程的工具。 与此类似的还有Shelr和termrec rsync 通过SSH进行文件同步的经典工具 mtr MTR – traceroute 2.0，其是把 traceroute 和 ping 集成在一块的一个小工具 用于诊断网络。 socat &amp; netpipes socat是一个多功能的网络工具，名字来由是” Socket CAT”，可以看作是netcat的N倍加强版。 netpipes 和socat一样，主要是用来在命令行来进行socket操作的命令，这样你就可以在Shell脚本下行进socket网络通讯了。 iftop &amp; iptraf iftop和iptraf可以用来查看当前网络链接的一些流量情况。 siege &amp; tsung siege是一个压力测试和评测工具，设计用于WEB开发这评估应用在压力下的承受能力：可以根据配置对一个WEB站点进行多用户的并发访问，记录每个用户所有请求过程的相应时间，并在一定数量的并发访问下重复进行。 Tsung是一个压力测试工具，可以测试包括HTTP, WebDAV, PostgreSQL, MySQL, LDAP, and XMPP/Jabber等服务器。针对 HTTP 测试，Tsung 支持 HTTP 1.0/1.1 ，包含一个代理模式的会话记录、支持 GET、POST 和 PUT 以及 DELETE 方法，支持 Cookie 和基本的 WWW 认证，同时还支持 SSL。 ledger ledger 是一个命令行下记帐的小工具。 taskwarrior taskWarrior 是一个基于命令行的 TODO 列表管理工具。主要功能包括：标签、彩色表格输出、报表和图形、大量的命令、底层API、多用户文件锁等功能。 下图是TaskWarrior 2.0的界面： curl cURL是一个利用URL语法在命令行下工作的文件传输工具，1997年首次发行。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称cURL为下载工具。cURL还包含了用于程序开发的libcurl。cURL支援的通訊協定有FTP、FTPS、HTTP、HTTPS、TFTP、SFTP、Gopher、SCP、Telnet、DICT、FILE、LDAP、LDAPS、IMAP、POP3、SMTP和RTSP。 rtorrent &amp; aria2 rTorrent 是一个非常简洁、优秀、非常轻量的BT客户端. 它使用了 ncurses 库以 C++ 编写, 因此它完全基于文本并在终端中运行. 将 rTorrent 用在安装有 GNU Screen 和 Secure Shell 的低端系统上作为远程的 BT 客户端是非常理想的。 aria2 是 Linux 下一个不错的高速下载工具。由于它具有分段下载引擎，所以支持从多个地址或者从一个地址的多个连接来下载同一个文件。这样自然就大大加快了文件的下载速度。aria2 也具有断点续传功能，这使你随时能够恢复已经中断的文件下载。除了支持一般的 http(s) 和 ftp 协议外，aria2 还支持 BitTorrent 协议。这意味着，你也可以使用 aria2 来下载 torrent 文件。 ttytter &amp; earthquake TTYtter 是一个Perl写的命令行上发Twitter的工具，可以进行所有其他平台客户端能进行的事情，当然，支持中文。脚本控、CLI控、终端控、Perl控的最愛。 Earthquake也是一个命令行上的Twitter客户端。 vifm &amp; ranger Vifm 基于ncurses的文件管理器，DOS风格，用键盘操作。 Ranger用 Python 完成，默认为使用 Vim 风格的按键绑定，比如 hjkl（上下左右），dd（剪切），yy（复制）等等。功能很全，扩展/可配置性也非常不错。类似MacOS X下Finder（文件管理器）的多列文件管理方式。支持多标签页。实时预览文本文件和目录。 cowsay &amp; sl cowsay 不说了，如下所示，哈哈哈。还有xcowsay，你可以自己搜一搜。 sl是什么？ls？呵呵，你会经常把ls 打成sl吗？如果是的话，这个东西可以让你娱乐一下，你会看到一辆火车呼啸而过~~，相当拉风。你可以使用sudo apt-get install sl 安装。 最后，再介绍一个命令中linuxlogo，你可以使用 sudo apt-get install linuxlogo来安装，然后，就可以使用linuxlogo -L来看一下各种Linux的logo。 本文来自：酷壳]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推荐6个可用于托管Java应用的云计算平台]]></title>
    <url>%2F2012%2F07%2F12%2Fjava-cloud-server-for-java%2F</url>
    <content type="text"><![CDATA[本文列举国外一些支持Java应用托管的云计算平台列表。 Google App Engine (GAE) 6 个可用于托管 Java 应用的云计算平台 这个云服务平台已经提供很长时间了，我在上面运行了两个 Web 应用 (timethetask 和 twikural) ，已经运行一年多了，没碰到任何问题。不过如果你打算将应用部署到GAE上你需要修改你的设计策略来适应 GAE 平台。 Amazon Web Services / Elastic Computing Cloud (EC2) 6 个可用于托管 Java 应用的云计算平台 这不是一个平台，因为你无需SDK来开发 Java 应用，该平台为你提供你可完全控制的机器，这些机器可以预装好Java环境。 Windows Azure – Java 6 个可用于托管 Java 应用的云计算平台 Windows Azure for Java开发套件，使Java开发人员可以利用微软云计算服务平台的优势，在云端整合各种应用，用Java语言与云端链接。 Jelastic 6 个可用于托管 Java 应用的云计算平台 Jelastic平台最大的优点是你不需要学习它的任何API，只需要上传你的Web应用，Jelactic就可自动帮你部署和运行。 Heroku 6 个可用于托管 Java 应用的云计算平台 详情可阅读这篇文章: Heroku runs Java. OpenShift by Red Hat 6 个可用于托管 Java 应用的云计算平台 这是针对企业的平台，个人还无法使用，据说使用它非常之简单，有用过的朋友可以分享一下。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>云</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JS返回顶部]]></title>
    <url>%2F2012%2F07%2F12%2Fweb-js-totop%2F</url>
    <content type="text"><![CDATA[本文介绍三款简单的返回页面顶部代码，可以使用简单的HTML锚标记，也可使用Javascript Scroll函数动态返回，其它的还有悬浮脚本等有点复杂了，本文不再介绍，大家根据自己需要选择其中的一种即可，总之简约最美的，能减少代码就减少代码，能不调用的就别调用，要不是天缘博客的文章都是牛长也不会添加这个功能。 一、使用锚标记返回页面顶部 使用HTML锚标记最简单，就是看起来有点不好看，点击后会在地址栏显示这个锚标记，其它的倒没什么。 页面顶部放置： 放置位置在标签之后随便找个地方放都可以，只要靠近顶部即可。 页面底部放置： 返回顶部 二、使用Javascript Scroll函数返回顶部 scrooll函数用来控制滚动条的位置，有两种很简单的实现方式： 方式1： 1返回顶部 scroll第一个参数是水平位置，第二个参数是垂直位置，比如要想定位在垂直50像素处，改成scroll(0,50)就可以了。 方式2： 本方式是渐进式返回顶部，要好看一些，代码如下： 1functionpageScroll() { 2window.scrollBy(0,-10); 3scrolldelay = setTimeout(‘pageScroll()’,100); 4} 56返回顶部 这样就会动态返回顶部，不过虽然返回到顶部但是代码仍在运行，还需要在pageScroll函数加一句给停止掉。 1if(document.documentElement.scrollTop==0) clearTimeout(scrolldelay);三、使用Onload加上scroll功能实现动态返回顶部 1、首先在网页BODY标签结束之前加上： 返回顶部 2、再调用以下JS脚本部分（本脚本非天缘原创，早前来源于Z-BLOG官方论坛上收集，源包未带作者链接，如果原作者看到敬请留言添加）： 01BackTop=function(btnId){ 02 varbtn=document.getElementById(btnId); 03 vard=document.documentElement; 04 window.onscroll=set; 05 btn.onclick=function(){ 06 btn.style.display="none"; 07 window.onscroll=null; 08 this.timer=setInterval(function(){ 09 d.scrollTop-=Math.ceil(d.scrollTop*0.1); 10 if(d.scrollTop==0) clearInterval(btn.timer,window.onscroll=set); 11 },10); 12 }; 13 functionset(){btn.style.display=d.scrollTop?’block':"none"} 14}; 15BackTop(‘gotop’); 对Z-BLOG而言，可以放到$(document).ready(function(){….函数中，也可以独立存成一个js文件，比如gotop.js，再通过： 来调用，当然了位置最好放在“返回顶部”标签的下面，该调用方法已假设路径为JS，其它位置请自行修改。 补充： 上述返回顶部代码都是文字式样的，也可以把文字更换为漂亮一点的图标，另外还有悬浮状的返回顶部代码（就是页面滚动时，返回顶部图标也会跟着跑的那种），需要使用到层等，搞的有点复杂了，本文暂不列出。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vim插件：增加模糊查找和智能补全功能]]></title>
    <url>%2F2012%2F07%2F12%2Flinux-vim-plugin%2F</url>
    <content type="text"><![CDATA[这里给大家推荐一个Vim配置工具，本工具由fisadev个人开发，并且遵循GPL开源协议，所以你可以放心地使用它！因为这是作者个人使用，所以设置都是按照作者自己的习惯来的，如有不适应，你可以自己修改源代码。废话不多说，先看预览图： 智能的自动提示 右侧是“类浏览器 ” 代码错误检查 代码模糊匹配 这里推荐使用Vundle管理插件，安装和卸载插件都非常简单！插件的安装位置在 .Vim/bundle/。更多信息点击这里。 智能的自动填充功能。可以自动填充模块名、实例方法和属性，有时还会提示使用过的文本（比如常用命名）。 模糊文件和代码查找功能 ,e = 打开文件（就像:e一样）但是增加了递归查询和模糊匹配。例如：如果你输入“mopy”，它匹配到一个分目录下的“models.py”文件，你可以直接使用Ctrl+T打开文件。 ,g = 模糊服务查找 （类、方法、变量、函数，以及等等……）例如：如果你输入“usr”，它可以找到当前文件里的User类定义。 ,f = 模糊文本查找，并且打开文件。 例如：如果你输入“ctm=6”，它能匹配到“current_time = 16”。 ,d = 和 ,g相同 (symbol finder) 但是搜索的是指针下的单词 (sort of “fuzzy go to definition”)。 ,E = 和 ,e相同 (file finder)不过搜索的是光标下的文件 (sort of “fuzzy go to file”)。 类/模块浏览器。类/模块浏览器里列出了类、函数、方法以及类似文件，敲回车键就可以导航过去。使用F4切换它的状态。 F2挂起任务浏览器。这会从读取当前文件开始，并且搜索“TODO”和“FIXME”等注释，然后在列表里显示。导航方法和类浏览器类似。 使用Pyflakes对Python代码进行错误检查。它可以检测出代码里未使用的变量和引用，以及语法错误等等。 在当前Python文件上运行PEP8验证器，输入“,8” ，就会显示Pyflakes检测出来的Python错误。 它同时还是一个相当优秀的Python和PHP调试器。这里有一个小教程，我增加了几个键盘快捷键方便使用（这只有在调试器启动后才可以使用）。 F5 = 单步执行（step over） F6 = 插入（step into） F7 = 跳出（step out） F8 = 执行到断点处停止 F9 = 设置断点 F10 = 在表达式窗口计算表达式结果 F11 = go down on the stack F12 = go up on the stack 推荐你看看视频教程，在这里我无法给出所有用法举例。 安装步骤 首先你需要Vim Python编译支持，并且保证安装目录下没有.Vim文件夹。（你可以运行Vim –version | grep +Python来检查你的Vim是否支持Python。） 软件依赖： sudo apt-get install exuberant-ctags git sudo pip install dbgp Vim-debug pep8 flake8 pyflakes 如果你没有安装pip，可以在这里下载。 配置好安装文件 把下载的.Vimrc文件放到Linux home文件夹下。 例如我的用户名是fisa，那就把它放到/home/fisa/目录下。 打开Vim 在终端打开Vim，它将会自动安装插件到.Vim/bundle目录下。你所需要做的就是等待安装完成，然后就会看到崭新的闪亮的Vim！ 可选： 如果你喜欢，可以查看README文件结尾的使用指南。 项目GitHub地址]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vim</tag>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WP Robot 3.31版本破解方法]]></title>
    <url>%2F2012%2F07%2F12%2Fphp-web-robot%2F</url>
    <content type="text"><![CDATA[首先，介绍一下WP Robot ： WP Robot 是一款支持wordpressBlog系统的插件，最受欢迎的自动Blog程序,强大且使用容易。 你可以根据关键词自动生成Blog任何目标文章。 完美的自动采集发布功能，结合最人性化的功能设置，是你建站群，做外贸，做网赚，SEO优化的必不可少的利器。 支持根据keywords关键词内容采集，支持RSS内容采集。 WP Robot 的特点 创建任何你所希望内容的文章发布到你的WordPress Blog上。 支持多关键词搜索，基本版支持20个关键词，高级版支持50个关键词，还有无限制版可选（当然指的是正版）。 在任何不同的分类中创建文章，比如不同的分类使用不同的关键词。 自定义两片文章的发布时间间隔，比如你发表“iPhone4”这个关键词，每3天或者每小时发布一篇等等。 精确地控制文章内容生成，通过关键词搭配创建不同的任务，避免重复文章出现(论坛里有检查WPBlog内文章重复的插件下载的）。 自动获取文章 tags， Tags是 WordPress 比较有好的功能之一，访客可以通过一些Tags检索含有相同标签的文章。 很多的自定义选项，你可以选择是否直接发布或者存为草稿等等 。 目前支持20个采集源： 自动采集发布Articles文章（Articlesbase.com） 自动采集发布eBay产品 自动采集发布Yahoo answer 自动采集发布Youtube视频 自动采集发布Flickr图片采集 自动采集发布Yahoo News 自动采集发布RSS 自动采集发布Twitter微博 还有CB,CJ,LS,SAS …… WP Robot插件官方原价是220美元,加上官方给的促销价优惠,也要169美元。 ———————————————————————————————————————————– wordpress采集插件WP robot 破解版3.1 与 3.2版本。 Install WPRobot 3.2 Nulled When asked for email enter any email Setup plugin how you want it. Deactivate and delete WPRobot 3.2 from your wordpress Install WPRobot 3.3 Activate and setup any additional modules you need to. Enjoy! 翻译： 01、先上传WPRobot_3.2破解版到空间，进入WP网站后台，启用插件，然后随便输入一个email激活； 02、再在后台禁用或删除WPRobot_3.2破解版，然后在再上传WPRobot_3.31破解版； 03、最后激活WPRobot_3.31破解版就可用了。 下载地址：（压缩包内两个版本已经包含） http://115.com/file/dpu4vdlt]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
        <tag>robot</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Chrome开发工具支持远程调试]]></title>
    <url>%2F2012%2F07%2F12%2Fweb-chrome-debug%2F</url>
    <content type="text"><![CDATA[Google Chrome开发工具（简称 DevTools）前端界面是作为HTML + CSS + JavaScript的web应用实现的。它采用序列化的信息通道与被审查页面通讯。开发团队建立这个序列化异步交互通道是为了将DevTools前端移出被审查页面的进程。但实现了才发现，甚至能将DevTools前端移出浏览器运行。下面是尝试远程调试的步骤： 1.使用远程调试命令行开关运行要远程调试的 Chrome 实例：chrome.exe --remote-debugging-port=9222 --user-data-dir=remote-profile。远程会话必须使用不同的 Chrome 实例，所以运行时要加 --user-data-dir 参数。 2.转到要调试的页面。 3.现在运行正常的 (客户端) Chrome 实例并转到 http://localhost:9222 那里。 您将能看到一些链接，指向相应页面的远程调试会话。点击即可开始远程调试Chrome页面： chrome]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>chrome</tag>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DIV背景半透明，DIV中的字不半透明]]></title>
    <url>%2F2012%2F07%2F11%2Fweb-div-transparent%2F</url>
    <content type="text"><![CDATA[&lt;div style="filter:alpha(opacity=50);background:#ffffff;width:600;"&gt; &lt;span style="color:yellow"&gt;图层背景半透明，字体颜色也半透明&lt;/span&gt; &lt;/div&gt; &lt;div style="filter:alpha(opacity=50);background:#ffffff;width:600"&gt; &lt;span style="position:relative;color:yellow"&gt;图层背景半透明，字体颜色不半透明&lt;/span&gt; &lt;/div&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>半透明</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jdk与jre的区别]]></title>
    <url>%2F2012%2F07%2F11%2Fjava-jdk-and-jre%2F</url>
    <content type="text"><![CDATA[很多程序员已经干了一段时间java了依然不明白jdk与jre的区别。 JDK就是Java Development Kit.简单的说JDK是面向开发人员使用的SDK，它提供了Java的开发环境和运行环境。SDK是Software Development Kit 一般指软件开发包，可以包括函数库、编译程序等。 JRE是Java Runtime Enviroment是指Java的运行环境，是面向Java程序的使用者，而不是开发者。 如果安装了JDK，会发同你的电脑有两套JRE，一套位于 \jre 另外一套位于 C:\Program Files\Java\jre1.5.0_15 目录下，后面这套比前面那套少了Server端的Java虚拟机，不过直接将前面那套的Server端Java虚拟机复制过来就行了。而且在安装JDK可以选择是否安装这个位于 C:\Program Files\Java 目录下的JRE。如果你只安装JRE，而不是JDK，那么只会在 C:\Program Files\Java 目录下安装唯一的一套JRE。 JRE的地位就象一台PC机一样，我们写好的Win32应用程序需要操作系统帮我们运行，同样的，我们编写的Java程序也必须要JRE才能运行。所以当你装完JDK后，如果分别在硬盘上的两个不同地方安装了两套JRE，那么你可以想象你的电脑有两台虚拟的Java PC机，都具有运行Java程序的功能。所以我们可以说，只要你的电脑安装了JRE，就可以正确运行Java应用程序。 1、为什么Sun要让JDK安装两套相同的JRE？ 这是因为JDK里面有很多用Java所编写的开发工具（如javac.exe、jar.exe等），而且都放置在 \lib\tools.jar 里。从下面例子可以看出，先将tools.jar改名为tools1.jar，然后运行javac.exe，显示如下结果： Exception in thread “main” java.lang.NoClassDefFoundError: com/sun/tools/javac /Main 这个意思是说，你输入javac.exe与输入 java -cp c:\jdk\lib\tools.jar com.sun.tools.javac.Main 是一样的，会得到相同的结果。从这里我们可以证明javac.exe只是一个包装器（Wrapper），而制作的目的是为了让开发者免于输入太长的指命。而且可以发现\lib目录下的程序都很小，不大于2 9K，从这里我们可以得出一个结论。就是JDK里的工具几乎是用Java所编写，所以也是Java应用程序，因此要使用JDK所附的工具来开发Java程序，也必须要自行附一套JRE才行，所以位于C:\Program Files\Java目录下的那套JRE就是用来运行一般Java程序用的。 2、如果一台电脑安装两套以上的JRE，谁来决定呢？ 这个重大任务就落在java.exe身上。Java.exe的工作就是找到合适的JRE来运行Java程序。 Java.exe依照底下的顺序来查找JRE：自己的目录下有没有JRE；父目录有没有JRE；查询注册表： [HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Runtime Environment] 所以java.exe的运行结果与你的电脑里面哪个JRE被执行有很大的关系。 ADD： 1.JVM — java virtual machineJVM就是我们常说的java虚拟机，它是整个java实现跨平台的最核心的部分，所有的java程序会首先被编译为.class的类文件，这种类文件可以在虚拟机上执行，也就是说class并不直接与机器的操作系统相对应，而是经过虚拟机间接与操作系统交互，由虚拟机将程序解释给本地系统执行。2.JRE — java runtime environmentJRE是指java运行环境。光有JVM还不能成class的执行，因为在解释class的时候JVM需要调用解释所需要的类库lib。在JDK的安装目录里你可以找到jre目录，里面有两个文件夹bin和lib,在这里可以认为bin里的就是jvm，lib中则是jvm工作所需要的类库，而jvm和 lib和起来就称为jre。所以，在你写完java程序编译成.class之后，你可以把这个.class文件和jre一起打包发给朋友，这样你的朋友就可以运行你写程序了。（jre里有运行.class的java.exe）3.JDK — java development kitJDK是java开发工具包，基本上每个学java的人都会先在机器上装一个JDK，那他都包含哪几部分呢？让我们看一下JDK的安装目录。在目录下面有六个文件夹、一个src类库源码压缩包、和其他几个声明文件。其中，真正在运行java时起作用的是以下四个文件夹：bin、include、lib、 jre。现在我们可以看出这样一个关系，JDK包含JRE，而JRE包含JVM。bin:最主要的是编译器(javac.exe)include:java和JVM交互用的头文件lib：类库jre:java运行环境（注意：这里的bin、lib文件夹和jre里的bin、lib是不同的）总的来说JDK是用于java程序的开发,而jre则是只能运行class而没有编译的功能。 eclipse、idea等其他IDE有自己的编译器而不是用JDK bin目录中自带的，所以在安装时你会发现他们只要求你选中jre路径就ok了。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jdk</tag>
        <tag>jre</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[玩转你的Gravatar全球通用头像]]></title>
    <url>%2F2012%2F07%2F10%2Fphp-gravatar%2F</url>
    <content type="text"><![CDATA[如果你在人家博客留言时使用邮箱，而没有显示一个比较个性的头像的话，那么我们完全可以说，你已经OUT了。 先来普及一下Gravatar全球通用头像： Globally Recognized Avatar的缩写,是 http://www.gravatar.com 推出的一项服务，意为“全球通用头像”。如果在Gravatar的服务器上放置了你自己的头像，那么在任何支持Gravatar的blog或者留言本上留言时，只要提供你与这个头像关联的email地址，就能够显示出你的Gravatar头像来。 那么Gravatar全球通用头像如何申请呢，下面上教程。 打开 http://en.gravatar.com，点击左上角菜单里的Sign Up。 然后会进入一个页面，需要你输入Email地址，输入后，会向你的邮箱里发一封确认信。 进入你的邮箱，从Gravatar发出的信件打开一个确认链接。 打开后，输入用户名和密码，注意，名字不能大写，而且不能跟别人注册的名字重复，否则无法注册成功的。 注册好了登陆进去，点击“add a new image”；然后选择上传图片，一般都是从电脑中上传（My computer’s hard drive）。 上传并裁剪，这个地方很灵活，头像选择框是可以伸缩的，效果可以在右侧看到。 头像上传后，图片要分级的，选择你上传的图片的级数，一般的，如果你上传的图片不太恶劣的话，就选G级，也就是大众都可以看的。 等待审核，可能需要几分钟短暂审核一下，一般选择了G，而你的图片没什么特别的，很快就通过。一般遇上慢的情况也就10分钟左右。 到支持Gravatar头像功能的网站，输入申请头像时的邮箱发表评论试试吧，要想改头像的话只需要到http://en.gravatar.com网站里登陆后修改即可。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>Gravatar</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在命令行里看电影]]></title>
    <url>%2F2012%2F07%2F06%2Flinux-cmd-movie%2F</url>
    <content type="text"><![CDATA[telnet towel.blinkenlights.nl]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[修改远程桌面服务的默认端口]]></title>
    <url>%2F2012%2F07%2F06%2Fsystem-remotedesktop-port%2F</url>
    <content type="text"><![CDATA[大家应该知道远程桌面连接默认使用的端口是3389，一旦公司在服务器或路由器上将3389端口进行了封锁，我们就没有一点办法了。其实远程桌面的使用端口是可以进行修改的，我们可以修改为公司没有禁止的端口，如21或80等。这样就可以再次轻松管理远程计算机了。将3389端口修改为80端口的方法如下： 第一步：在远程计算机（即被访问的计算机）上通过任务栏的“开始-&gt;运行-&gt;输入regedit”，打开注册表编辑器。 第二步：在注册表中找到Hkey_local_machine\system\currentcontrolset\control\terminal server\wds\repwd\tds\tcp，将其下的portnumber值从3389修改为80，注意10进制和16进制数字的区别。 第三步：还需要在注册表中找到hkey_local_machine\system\currentcontrolset\ control\terminal server\WINSTATIONS\RDP-TCP,将其下的portnumber值从3389修改为80，同样注意10进制和16进制数字的区别。全部修改后重新启动计算机就完成了被访问计算机上的设置。 第四步：这样我们就可以在网络中任意一台安装了远程桌面登录器的计算机上连接刚刚设置的计算机了，使用的端口是80端口。值得注意的是在输入被访问计算机IP地址时需要使用类似ip:80的形式。]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>端口</tag>
        <tag>远程桌面</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[校园网使用Dr.com上网]]></title>
    <url>%2F2012%2F07%2F06%2Fsystem-dr-com%2F</url>
    <content type="text"><![CDATA[很多校园都是使用上网客户端验证的，其中，drcom是比较常见的一种。 对于初学者来说硬盘安装ubuntu8.04使用drcom上网验证确实是比较痛苦的。 我当初就是深受其害的一员，这里分享下我使用drcom的一些经验。 以下是以ubuntu8.04下安装drcom-1.4.4为列 PS:这个编译安装过程，其实可以全程用命令进行， 当然，如果要使用下列命令，你需要要足够的经验。 sudo mount -o loop ubuntu-*.iso /cdrom ##挂载iso sudo apt-cdrom -m -d /cdrom add ##添加cdrom为源 sudo apt-get update ##刷新列表 sudo apt-get install build-essential ##安装编译环境 tar -xzf drcom-1.4.5.tar.gz ##解压命令 cd drcom-1.4.5 make sudo make install #编译安装 ifconfig ##查看链接信息 sudo gedit /etc/drcom.conf sudo drcomd drcomc login ##登入 drcomc logout ##登出 如果你想了解更详细的操作，请请看下文 首先，我们当然要下载个linux下的drcom源代码，在这里可以下载最新版本的drcom点击进入下载页面 不建议在windows下解压drcom-1.4.5.tar.gz，最好回到ubuntu解压，以防出错。 然後就要安装drcom了，但是安装drcom需要编译工具，ubuntuliveCD默认又是不安装的。 很多人就难倒在这里了，其实，这个编译工具是ISO里面自带的。如果你有CD，直接插上CD就可以使用命令： sudo aptitude install build-essential 安装编译环境。 如果你是硬盘安装，又没有CDRom的话，可以挂载iso sudo mount -o loop ubuntu-*.iso /cdrom 其中&quot;ubuntu-*.iso”是你下载的镜像位置，你可以用拖动的方法来拉到终端里都可以。 挂载好镜像後，要在系统管理-软件源， 那里把下面的CDrom打上勾， clip_image002 然後close，重新加载源。 clip_image003 这时提示找不到源， clip_image004 这个可以不用理，因为你没有上网，不能加载网上的源，能加载cdrom就行。 或者 使用命令加载和更新： sudo apt-cdrom -m -d /cdrom add &amp;&amp; sudo apt-get update 这样就可以顺利用命令安装编译环境 sudo apt-get install build-essential 或者，你可以选择在新立得里查找安装 clip_image005 clip_image006 clip_image007 编译环境安装完毕，接着就可以把你下载的drcom源代码解压， 解压方法有很多种，可以图形，可以命令，不过个人偏好把下载的drcom-1.4.4.tar.gz放在桌面，右键解压到此处。 clip_image008 clip_image009 解压完毕後，cd进你解压的目录编译安装 clip_image010 make sudo make install clip_image011 安装完毕後，就需要编辑/etc/drcom.conf填写你的上网信息。 clip_image012 sudo gedit /etc/drcom.conf clip_image013 clip_image014 clip_image015 clip_image016 username=myusername ##填入你登陆的帐号 password=mypassword ##填入你的密码 device=eth0 ##指明通往外网的网卡的名字。 except= ##用“网络地址/网络掩码”的形式列出内网的地址。(不是内网地址就删除) dnsp= ##你的首要DNS dnss= ##你的次要DNS，如果没有的话，请和首要DNS填的一样 dhcp= ##你的DHCP服务器，一般不填 hostip= servip=192.168.252.1 ##你的登陆IP，就是在XP下填写登陆服务器那个IP，一般是没有登陆时自动转向的那个页面，就是那个web登陆页面。 hostport= servport= hostname= winver= winbuild= servicepack= autologout=0 里面除了帐号密码，其他信息都可以在右上角网卡信息那里看到。 关于&quot;servip=“地址说明可以参考下面图片，就是网页登录的那个地址IP 如，下图就要填servip=10.254.200.252 clip_image017 感谢xu_connery提供图片 特别注意的是从1.4.0开始，”/etc/drcom.con&quot;里增加了&quot;device=&quot;和&quot;except=&quot;两项,取消&quot;mac&quot;和&quot;nic&quot;两项。 配置好帐号信息後，记得保存。 这样就可以立刻上网了。 连接命令： sudo drcomd ##启动drcom drcomc login ##登录 由于我是用虚拟机截图，以上命令成功应该显示 Login succeeded 登出命令： drcomc logout Logout succeeded]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>Dr.com</tag>
        <tag>校园网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十大bt问题]]></title>
    <url>%2F2012%2F07%2F06%2Flife-bt-question-top10%2F</url>
    <content type="text"><![CDATA[企鹅肉问题： 一个女孩有一天给一个男孩做了一道菜,男孩吃完了,但是觉得味道怪怪的,于是他问那女孩,这是什么肉啊？女孩说,这是企鹅肉,男孩沉思了一会儿……痛哭了起来，自杀了，为什么？ 跳火车问题： 一个人坐火车去邻镇看病，看完之后病全好了。回来的路上火车经过一个隧道，这个人就跳车自杀了，为什么? 水草问题： 有个男子跟他女友去河边散步，突然他的女友掉进河里了，那个男子就急忙跳到水里去找，可没找到他的女友，他伤心的离开了这里。过了几年后，他故地重游，这时看到有个老人家在钓鱼，可那老人家钓上来的鱼身上没有水草，他就问那老人家为什么鱼身上没有沾到一点水草，那老人家说：“你不知道啊，这河从没有长过水草。”说到这时那男子突然跳到水里，自杀了，为什么？ 葬礼故事的问题： 有母女三人，母亲死了，姐妹俩去参加葬礼，妹妹在葬礼上遇见了一个很型的男子，并对他一见倾心。但是葬礼后那个男子就不见了，妹妹怎么找也找不到他。后来过了一个月，妹妹把姐姐杀了，为什么？ 半根火柴问题： 有一个人在沙漠中，头朝下死了，身边散落着几个行李箱子，而这个人手里紧紧地抓着半个火柴，推理这个人是怎么死的？ 满地木屑问题： 马戏团里有两个侏儒,瞎子侏儒比另一个侏儒矮,马戏团只需要一个侏儒,马戏团里的侏儒当然是越矮越好了。两个侏儒决定比谁的个子矮,个子高的就去自杀。可是,在约定比个子的前一天,瞎子侏儒也就是那个矮的侏儒已经在家里自杀死了。在他的家里只发现木头做的家具和满地的木屑。问他为什么自杀？ 夜半敲门问题： 一个人住在山顶的小屋里，半夜听见有敲门声音，但是他打开门却没有人，于是去睡了，等了一会儿又有敲门声，去开门，还是没人，如是者几次。第二天，有人在山脚下发现死尸一具，警察来把山顶的那人带走了。为什么？]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>变态</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gxt desktop]]></title>
    <url>%2F2012%2F07%2F04%2Fweb-gxt-desktop%2F</url>
    <content type="text"><![CDATA[/* * Ext GWT - Ext for GWT * Copyright(c) 2007-2009, Ext JS, LLC. * licensing@extjs.com * * http://extjs.com/license */package com.google.gwt.sample.hello.client;import java.util.ArrayList;import java.util.Date;import java.util.List;import com.extjs.gxt.desktop.client.Desktop;import com.extjs.gxt.desktop.client.Shortcut;import com.extjs.gxt.desktop.client.StartMenu;import com.extjs.gxt.desktop.client.TaskBar;import com.extjs.gxt.ui.client.Style.Scroll;import com.extjs.gxt.ui.client.data.BaseModel;import com.extjs.gxt.ui.client.data.BaseModelData;import com.extjs.gxt.ui.client.data.ModelData;import com.extjs.gxt.ui.client.data.ModelIconProvider;import com.extjs.gxt.ui.client.event.ComponentEvent;import com.extjs.gxt.ui.client.event.MenuEvent;import com.extjs.gxt.ui.client.event.SelectionListener;import com.extjs.gxt.ui.client.store.GroupingStore;import com.extjs.gxt.ui.client.store.TreeStore;import com.extjs.gxt.ui.client.util.IconHelper;import com.extjs.gxt.ui.client.widget.ContentPanel;import com.extjs.gxt.ui.client.widget.Info;import com.extjs.gxt.ui.client.widget.TabItem;import com.extjs.gxt.ui.client.widget.TabPanel;import com.extjs.gxt.ui.client.widget.Window;import com.extjs.gxt.ui.client.widget.button.Button;import com.extjs.gxt.ui.client.widget.button.ToolButton;import com.extjs.gxt.ui.client.widget.grid.ColumnConfig;import com.extjs.gxt.ui.client.widget.grid.ColumnModel;import com.extjs.gxt.ui.client.widget.grid.Grid;import com.extjs.gxt.ui.client.widget.grid.GridGroupRenderer;import com.extjs.gxt.ui.client.widget.grid.GroupColumnData;import com.extjs.gxt.ui.client.widget.grid.GroupingView;import com.extjs.gxt.ui.client.widget.layout.AccordionLayout;import com.extjs.gxt.ui.client.widget.layout.FitLayout;import com.extjs.gxt.ui.client.widget.menu.Menu;import com.extjs.gxt.ui.client.widget.menu.MenuItem;import com.extjs.gxt.ui.client.widget.toolbar.SeparatorToolItem;import com.extjs.gxt.ui.client.widget.toolbar.ToolBar;import com.extjs.gxt.ui.client.widget.treepanel.TreePanel;import com.google.gwt.core.client.EntryPoint;import com.google.gwt.i18n.client.DateTimeFormat;import com.google.gwt.i18n.client.NumberFormat;import com.google.gwt.user.client.ui.AbstractImagePrototype;public class Hello implements EntryPoint &#123; private Desktop desktop = new Desktop(); private void itemSelected(ComponentEvent ce) &#123; Window w; if (ce instanceof MenuEvent) &#123; MenuEvent me = (MenuEvent) ce; w = me.getItem().getData("window"); &#125; else &#123; w = ce.getComponent().getData("window"); &#125; if (!desktop.getWindows().contains(w)) &#123; desktop.addWindow(w); &#125; if (w != null &amp;&amp; !w.isVisible()) &#123; w.show(); &#125; else &#123; w.toFront(); &#125; &#125; public void onModuleLoad() &#123; SelectionListener&lt;MenuEvent&gt; menuListener = new SelectionListener&lt;MenuEvent&gt;() &#123; @Override public void componentSelected(MenuEvent me) &#123; itemSelected(me); &#125; &#125;; SelectionListener&lt;ComponentEvent&gt; shortcutListener = new SelectionListener&lt;ComponentEvent&gt;() &#123; @Override public void componentSelected(ComponentEvent ce) &#123; itemSelected(ce); &#125; &#125;; Window gridWindow = createGridWindow(); Window accordionWindow = createAccordionWindow(); Shortcut s1 = new Shortcut(); s1.setText("Grid Window"); s1.setId("grid-win-shortcut"); s1.setData("window", gridWindow); s1.addSelectionListener(shortcutListener); desktop.addShortcut(s1); Shortcut s2 = new Shortcut(); s2.setText("Accordion Window"); s2.setId("acc-win-shortcut"); s2.setData("window", accordionWindow); s2.addSelectionListener(shortcutListener); desktop.addShortcut(s2); TaskBar taskBar = desktop.getTaskBar(); StartMenu menu = taskBar.getStartMenu(); menu.setHeading("Darrell Meyer"); menu.setIconStyle("user"); MenuItem menuItem = new MenuItem("Grid Window"); menuItem.setData("window", gridWindow); menuItem.setIcon(IconHelper.createStyle("icon-grid")); menuItem.addSelectionListener(menuListener); menu.add(menuItem); menuItem = new MenuItem("Tab Window"); menuItem.setIcon(IconHelper.createStyle("tabs")); menuItem.addSelectionListener(menuListener); menuItem.setData("window", createTabWindow()); menu.add(menuItem); menuItem = new MenuItem("Accordion Window"); menuItem.setIcon(IconHelper.createStyle("accordion")); menuItem.addSelectionListener(menuListener); menuItem.setData("window", accordionWindow); menu.add(menuItem); menuItem = new MenuItem("Bogus Submenu"); menuItem.setIcon(IconHelper.createStyle("bogus")); Menu sub = new Menu(); for (int i = 0; i &lt; 5; i++) &#123; MenuItem item = new MenuItem("Bogus Window " + (i + 1)); item.setData("window", createBogusWindow(i)); item.addSelectionListener(menuListener); sub.add(item); &#125; menuItem.setSubMenu(sub); menu.add(menuItem); // tools MenuItem tool = new MenuItem("Settings"); tool.setIcon(IconHelper.createStyle("settings")); tool.addSelectionListener(new SelectionListener&lt;MenuEvent&gt;() &#123; @Override public void componentSelected(MenuEvent ce) &#123; Info.display("Event", "The 'Settings' tool was clicked"); &#125; &#125;); menu.addTool(tool); menu.addToolSeperator(); tool = new MenuItem("Logout"); tool.setIcon(IconHelper.createStyle("logout")); tool.addSelectionListener(new SelectionListener&lt;MenuEvent&gt;() &#123; @Override public void componentSelected(MenuEvent ce) &#123; Info.display("Event", "The 'Logout' tool was clicked"); &#125; &#125;); menu.addTool(tool); &#125; private Window createAccordionWindow() &#123; final Window w = new Window(); w.setMinimizable(true); w.setMaximizable(true); w.setIcon(IconHelper.createStyle("accordion")); w.setHeading("Accordion Window"); w.setWidth(200); w.setHeight(350); ToolBar toolBar = new ToolBar(); Button item = new Button(); item.setIcon(IconHelper.createStyle("icon-connect")); toolBar.add(item); toolBar.add(new SeparatorToolItem()); w.setTopComponent(toolBar); item = new Button(); item.setIcon(IconHelper.createStyle("icon-user-add")); toolBar.add(item); item = new Button(); item.setIcon(IconHelper.createStyle("icon-user-delete")); toolBar.add(item); w.setLayout(new AccordionLayout()); ContentPanel cp = new ContentPanel(); cp.setAnimCollapse(false); cp.setHeading("Online Users"); cp.setScrollMode(Scroll.AUTO); cp.getHeader().addTool(new ToolButton("x-tool-refresh")); w.add(cp); TreeStore&lt;ModelData&gt; store = new TreeStore&lt;ModelData&gt;(); TreePanel&lt;ModelData&gt; tree = new TreePanel&lt;ModelData&gt;(store); tree.setIconProvider(new ModelIconProvider&lt;ModelData&gt;() &#123; public AbstractImagePrototype getIcon(ModelData model) &#123; if (model.get("icon") != null) &#123; return IconHelper.createStyle((String) model.get("icon")); &#125; else &#123; return null; &#125; &#125; &#125;); tree.setDisplayProperty("name"); ModelData m = newItem("Family", null); store.add(m, false); tree.setExpanded(m, true); store.add(m, newItem("Darrell", "user"), false); store.add(m, newItem("Maro", "user-girl"), false); store.add(m, newItem("Lia", "user-kid"), false); store.add(m, newItem("Alec", "user-kid"), false); store.add(m, newItem("Andrew", "user-kid"), false); m = newItem("Friends", null); store.add(m, false); tree.setExpanded(m, true); store.add(m, newItem("Bob", "user"), false); store.add(m, newItem("Mary", "user-girl"), false); store.add(m, newItem("Sally", "user-girl"), false); store.add(m, newItem("Jack", "user"), false); cp.add(tree); cp = new ContentPanel(); cp.setAnimCollapse(false); cp.setHeading("Settings"); cp.setBodyStyleName("pad-text"); cp.addText("DUMMY_TEXT_SHORT"); w.add(cp); cp = new ContentPanel(); cp.setAnimCollapse(false); cp.setHeading("Stuff"); cp.setBodyStyleName("pad-text"); cp.addText("DUMMY_TEXT_SHORT"); w.add(cp); cp = new ContentPanel(); cp.setAnimCollapse(false); cp.setHeading("More Stuff"); cp.setBodyStyleName("pad-text"); cp.addText("DUMMY_TEXT_SHORT"); w.add(cp); return w; &#125; private Window createGridWindow() &#123; Window w = new Window(); w.setIcon(IconHelper.createStyle("icon-grid")); w.setMinimizable(true); w.setMaximizable(true); w.setHeading("Grid Window"); w.setSize(500, 400); w.setLayout(new FitLayout()); GroupingStore&lt;Stock&gt; store = new GroupingStore&lt;Stock&gt;(); store.add(getCompanies()); store.groupBy("industry"); ColumnConfig company = new ColumnConfig("name", "Company", 60); ColumnConfig price = new ColumnConfig("open", "Price", 20); price.setNumberFormat(NumberFormat.getCurrencyFormat()); ColumnConfig change = new ColumnConfig("change", "Change", 20); ColumnConfig industry = new ColumnConfig("industry", "Industry", 20); ColumnConfig last = new ColumnConfig("date", "Last Updated", 20); last.setDateTimeFormat(DateTimeFormat.getFormat("MM/dd/y")); List&lt;ColumnConfig&gt; config = new ArrayList&lt;ColumnConfig&gt;(); config.add(company); config.add(price); config.add(change); config.add(industry); config.add(last); final ColumnModel cm = new ColumnModel(config); GroupingView view = new GroupingView(); view.setForceFit(true); view.setGroupRenderer(new GridGroupRenderer() &#123; public String render(GroupColumnData data) &#123; String f = cm.getColumnById(data.field).getHeader(); String l = data.models.size() == 1 ? "Item" : "Items"; return f + ": " + data.group + " (" + data.models.size() + " " + l + ")"; &#125; &#125;); Grid&lt;Stock&gt; grid = new Grid&lt;Stock&gt;(store, cm); grid.setView(view); grid.setBorders(true); w.add(grid); return w; &#125; private Window createTabWindow() &#123; Window w = new Window(); w.setMinimizable(true); w.setMaximizable(true); w.setSize(740, 480); w.setIcon(IconHelper.createStyle("tabs")); w.setHeading("Tab Window"); w.setLayout(new FitLayout()); TabPanel panel = new TabPanel(); for (int i = 0; i &lt; 4; i++) &#123; TabItem item = new TabItem("Tab Item " + (i + 1)); item.addText("Something useful would be here"); panel.add(item); &#125; w.add(panel); return w; &#125; private Window createBogusWindow(int index) &#123; Window w = new Window(); w.setIcon(IconHelper.createStyle("bogus")); w.setMinimizable(true); w.setMaximizable(true); w.setHeading("Bogus Window " + ++index); w.setSize(400, 300); return w; &#125; private ModelData newItem(String text, String iconStyle) &#123; ModelData m = new BaseModelData(); m.set("name", text); m.set("icon", iconStyle); return m; &#125; public static List&lt;Stock&gt; getCompanies() &#123; DateTimeFormat f = DateTimeFormat.getFormat("M/d h:mma"); List&lt;Stock&gt; stocks = new ArrayList&lt;Stock&gt;(); stocks.add(new Stock("3m Co", 71.72, 0.02, 0.03, f.parse("4/2 12:00am"), "Manufacturing")); stocks.add(new Stock("Alcoa Inc", 29.01, 0.42, 1.47, f .parse("4/1 12:00am"), "Manufacturing")); stocks.add(new Stock("Altria Group Inc", 83.81, 0.28, 0.34, f .parse("4/3 12:00am"), "Manufacturing")); stocks.add(new Stock("American Express Company", 52.55, 0.01, 0.02, f .parse("4/8 12:00am"), "Finance")); stocks.add(new Stock("American International Group, Inc.", 64.13, 0.31, 0.49, f.parse("4/1 12:00am"), "Services")); stocks.add(new Stock("AT&amp;T Inc.", 31.61, -0.48, -1.54, f .parse("4/8 12:00am"), "Services")); stocks.add(new Stock("Boeing Co.", 75.43, 0.53, 0.71, f .parse("4/8 12:00am"), "Manufacturing")); stocks.add(new Stock("Caterpillar Inc.", 67.27, 0.92, 1.39, f .parse("4/1 12:00am"), "Services")); stocks.add(new Stock("Citigroup, Inc.", 49.37, 0.02, 0.04, f .parse("4/4 12:00am"), "Finance")); stocks.add(new Stock("E.I. du Pont de Nemours and Company", 40.48, 0.51, 1.28, f.parse("4/1 12:00am"), "Manufacturing")); stocks.add(new Stock("Exxon Mobil Corp", 68.1, -0.43, -0.64, f .parse("4/3 12:00am"), "Manufacturing")); stocks.add(new Stock("General Electric Company", 34.14, -0.08, -0.23, f .parse("4/3 12:00am"), "Manufacturing")); stocks.add(new Stock("General Motors Corporation", 30.27, 1.09, 3.74, f .parse("4/3 12:00am"), "Automotive")); stocks.add(new Stock("Hewlett-Packard Co.", 36.53, -0.03, -0.08, f .parse("4/3 12:00am"), "Computer")); stocks.add(new Stock("Honeywell Intl Inc", 38.77, 0.05, 0.13, f .parse("4/3 12:00am"), "Manufacturing")); stocks.add(new Stock("Intel Corporation", 19.88, 0.31, 1.58, f .parse("4/2 12:00am"), "Computer")); stocks.add(new Stock("International Business Machines", 81.41, 0.44, 0.54, f.parse("4/1 12:00am"), "Computer")); stocks.add(new Stock("Johnson &amp; Johnson", 64.72, 0.06, 0.09, f .parse("4/2 12:00am"), "Medical")); stocks.add(new Stock("JP Morgan &amp; Chase &amp; Co", 45.73, 0.07, 0.15, f .parse("4/2 12:00am"), "Finance")); stocks.add(new Stock("McDonald/"s Corporation", 36.76, 0.86, 2.40, f .parse("4/2 12:00am"), "Food")); stocks.add(new Stock("Merck &amp; Co., Inc.", 40.96, 0.41, 1.01, f .parse("4/2 12:00am"), "Medical")); stocks.add(new Stock("Microsoft Corporation", 25.84, 0.14, 0.54, f .parse("4/2 12:00am"), "Computer")); stocks.add(new Stock("Pfizer Inc", 27.96, 0.4, 1.45, f .parse("4/8 12:00am"), "Services")); stocks.add(new Stock("The Coca-Cola Company", 45.07, 0.26, 0.58, f .parse("4/1 12:00am"), "Food")); stocks.add(new Stock("The Home Depot, Inc.", 34.64, 0.35, 1.02, f .parse("4/8 12:00am"), "Retail")); stocks.add(new Stock("The Procter &amp; Gamble Company", 61.91, 0.01, 0.02, f.parse("4/1 12:00am"), "Manufacturing")); stocks.add(new Stock("United Technologies Corporation", 63.26, 0.55, 0.88, f.parse("4/1 12:00am"), "Computer")); stocks.add(new Stock("Verizon Communications", 35.57, 0.39, 1.11, f .parse("4/3 12:00am"), "Services")); stocks.add(new Stock("Wal-Mart Stores, Inc.", 45.45, 0.73, 1.63, f .parse("4/3 12:00am"), "Retail")); stocks.add(new Stock("Walt Disney Company (The) (Holding Company)", 29.89, 0.24, 0.81, f.parse("4/1 12:00am"), "Services")); return stocks; &#125;&#125;class Stock extends BaseModel &#123; public Stock() &#123; &#125; public Stock(String name, String symbol, double open, double last) &#123; set("name", name); set("symbol", symbol); set("open", open); set("last", last); set("date", new Date()); set("change", last - open); &#125; public Stock(String name, double open, double change, double pctChange, Date date, String industry) &#123; set("name", name); set("open", open); set("change", change); set("percentChange", pctChange); set("date", date); set("industry", industry); &#125; public String getIndustry() &#123; return get("industry"); &#125; public void setIndustry(String industry) &#123; set("industry", industry); &#125; public Date getLastTrans() &#123; return (Date) get("date"); &#125; public String getName() &#123; return (String) get("name"); &#125; public String getSymbol() &#123; return (String) get("symbol"); &#125; public double getOpen() &#123; Double open = (Double) get("open"); return open.doubleValue(); &#125; public double getLast() &#123; Double open = (Double) get("last"); return open.doubleValue(); &#125; public double getChange() &#123; return getLast() - getOpen(); &#125; public double getPercentChange() &#123; return getChange() / getOpen(); &#125; public String toString() &#123; return getName(); &#125;&#125; gxt环境搭建参考http://wenku.baidu.com/view/29dfff030740be1e650e9ae5.html]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>gwt</tag>
        <tag>extjs</tag>
        <tag>gxt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jdbc连接demo]]></title>
    <url>%2F2012%2F07%2F04%2Fjava-jdbc-demo%2F</url>
    <content type="text"><![CDATA[jdbc连接参数 oracle driver=&quot;oracle.jdbc.driver.OracleDriver&quot; url=&quot;jdbc:oracle:thin:@localhost:1521:数据库名&quot; sqlserver driver=&quot;com.microsoft.jdbc.sqlserver.SQLServerDriver&quot; url=&quot;jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=数据库名&quot; mysql driver=&quot;com.mysql.jdbc.Driver&quot; url=&quot;jdbc:mysql://localhost/数据库名?[后接参数]&quot; db2 driver=&quot;com.ibm.db2.jdbc.app.DB2Driver&quot; url=&quot;jdbc:db2://localhost:5000/数据库名&quot; sybase driver=&quot;com.sybase.jdbc.SybDriver&quot; url=“jdbc:sybase:Tds:localhost:5007/数据库名” package test;import java.sql.*;public class JdbcDemo &#123; /** * 加载驱动 * */ static &#123; try &#123; Class.forName("com.mysql.jdbc.Driver"); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; /** * 获取数据库连接 * */ public static Connection getConnection() &#123; String url = "jdbc:mysql:172.0.0.1:3306/test"; String username = "root"; String password = "1234"; Connection con = null; try &#123; con = DriverManager.getConnection(url, username, password); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; return con; &#125; /** * 获取statement对象，操作数据库，处理返回结果 * */ public static void process() &#123; Connection con = getConnection(); PreparedStatement ps = null; ResultSet rs = null; String sql = ""; try &#123; ps = con.prepareStatement(sql); if (ps.execute()) &#123; rs = ps.getResultSet(); &#125; else &#123; int i = ps.getUpdateCount(); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; close(rs, ps, con); &#125; &#125; /** * 处理返回结果集 * */ public static void printResultSet(ResultSet rs) &#123; if (rs == null) &#123; return; &#125; try &#123; ResultSetMetaData meta = rs.getMetaData(); int cols = meta.getColumnCount(); StringBuffer b = new StringBuffer(); while (rs.next()) &#123; for (int i = 1; i &lt;= cols; i++) &#123; b.append(meta.getColumnName(i) + "="); b.append(rs.getString(i) + "/t"); &#125; b.append("/n"); &#125; System.out.print(b.toString()); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125; /** * 关闭连接 * */ public static void close(ResultSet rs, Statement stm, Connection con) &#123; try &#123; if (rs != null) &#123; rs.close(); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; try &#123; if (stm != null) &#123; rs.close(); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; try &#123; if (con != null) &#123; rs.close(); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jdbc</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js渐变效果]]></title>
    <url>%2F2012%2F07%2F04%2Fweb-js-animate%2F</url>
    <content type="text"><![CDATA[&lt;!DOCTYPE html xmlns="&lt;a href="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;title&gt; new document &lt;/title&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=gb2312"&gt; &lt;/head&gt; &lt;body&gt; &lt;center&gt; &lt;input type="button" name="fx" value="宽度渐变" id="wt-cg"/&gt; &lt;input type="button" name="fx" value="高度渐变" id="hi-cg"/&gt; &lt;input type="button" name="fx" value="透明度渐变" id="op-cg"/&gt; &lt;input type="button" name="fx" value="边框渐变" id="bd-cg"/&gt; &lt;input type="button" name="fx" value="综合渐变" id="zh-cg"/&gt; &lt;div id="demo" style="width:370px;height:100px;background-color:#00CC33;border:2px solid #990033; font-size:12px;"&gt;&lt;/div&gt; &lt;/center&gt; &lt;script&gt; function Animate(el, prop, opts) &#123; this.el = el; this.prop = prop; this.from = opts.from; this.to = opts.to; this.time = opts.time; this.callback = opts.callback; this.animDiff = this.to - this.from; &#125; Animate.prototype._setStyle = function(val) &#123; switch(this.prop) &#123; case 'opacity': this.el.style[this.prop] = val; this.el.style.filter = 'alpha(opacity=' + val * 100 + ')'; break; default: this.el.style[this.prop] = val + 'px'; break; &#125; &#125; Animate.prototype._animate = function() &#123; var that = this; this.now = new Date(); this.diff = this.now - this.startTime; if (this.diff &gt; this.time) &#123; this._setStyle(this.to); if (this.callback) &#123; this.callback.call(this); &#125; clearInterval(this.timer); return; &#125; this.percentage = (Math.floor((this.diff / this.time) * 100) / 100); this.val = (this.animDiff * this.percentage) + this.from; this._setStyle(this.val); &#125; Animate.prototype.start = function() &#123; var that = this; this.startTime = new Date(); clearInterval(this.timer); this.timer = setInterval(function() &#123; that._animate.call(that); &#125;, 4); &#125; Animate.canTransition = function() &#123; var el = document.createElement('foo'); el.style.cssText = '-webkit-transition: all .5s linear;'; return !!el.style.webkitTransitionProperty; &#125;(); window.onload = function() &#123; var T$ = function(id) &#123; return document.getElementById(id); &#125; var T$$ = function(n) &#123; return document.getElementsByName(n); &#125; var demo = T$('demo'); var btns = T$$('fx'); function disableButton() &#123; for (var i = 0, len = btns.length; i &lt; len; ++i) &#123; btns[i].disabled = 'disabled'; &#125; &#125; function resetButton() &#123; for (var i = 0, len = btns.length; i &lt; len; ++i) &#123; btns[i].disabled = ''; &#125; &#125; // 宽度渐变 function changeWidth() &#123; var fx = 'width', from = demo.clientWidth, to = from - 270, time = 1000; var callback = function() &#123; from = demo.clientWidth; to = from + 270; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: resetButton &#125;).start(); &#125; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: callback &#125;).start(); &#125; // 高度渐变 function changeHeight() &#123; var fx = 'height', from = demo.clientHeight, to = from + 100, time = 1000; var callback = function() &#123; from = demo.clientHeight; to = from - 100; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: resetButton&#125;).start(); &#125; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: callback &#125;).start(); &#125; // 透明度渐变 function changeOpacity() &#123; var fx = 'opacity', from = 1, to = 0, time = 1000; var callback = function() &#123; from = 0; to = 1; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: resetButton&#125;).start(); &#125; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: callback &#125;).start(); &#125; // 边框渐变 function changeBorderWidth() &#123; var fx = 'borderWidth', from = 2, to = 10, time = 1000; var callback = function() &#123; from = 10; to = 2; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: resetButton &#125;).start(); &#125; new Animate(demo, fx, &#123; from: from, to: to, time: time, callback: callback &#125;).start(); &#125; T$('wt-cg').onclick = function() &#123; disableButton(); changeWidth(); &#125; T$('hi-cg').onclick = function() &#123; disableButton(); changeHeight(); &#125; T$('op-cg').onclick = function() &#123; disableButton(); changeOpacity(); &#125; T$('bd-cg').onclick = function() &#123; disableButton(); changeBorderWidth(); &#125; T$('zh-cg').onclick = function() &#123; disableButton(); changeWidth(); changeHeight(); changeOpacity(); &#125; //if (Animate.canTransition) &#123; //demo.style.webkitTransition = 'opacity 3s ease-in'; //demo.style.opacity = 0; //&#125; else &#123; //&#125; &#125; &lt;/script&gt; &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>渐变</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[web-input-jump]]></title>
    <url>%2F2012%2F07%2F04%2Fweb-input-jump%2F</url>
    <content type="text"><![CDATA[输入序列号会将序列号分成好几段输入，模拟序列号输入方式，输入框自动跳转到下一个输入框。 下面是代码： &lt;HTML&gt; &lt;HEAD&gt; &lt;script language=JavaScript&gt; function toNext(obj,str)&#123; if(obj.value.length==str&amp;&amp;obj.nextSibling.nextSibling.type=="text") document.getElementById("yes2").select() &#125; function abc()&#123; var c=window.clipboardData.getData('text'); carray=c.split(" "); document.getElementById("yes1").value=carray[0]; alert(carray[0]); document.getElementById("yes2").value=carray[1]; window.clipboardData.clearData(); &#125; &lt;/script&gt; &lt;body&gt; &lt;input name="yes1" type="text" size="4" maxlength="4" onkeyup="toNext(this,4)" onbeforepaste="abc()"&gt;SN1 — &lt;input name="yes2" type="text" size="4" maxlength="4" onkeyup="toNext(this,4)"&gt;SN2 &lt;/body&gt; &lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何启动ubuntu下的telnet服务]]></title>
    <url>%2F2012%2F07%2F04%2Flinux-ubuntu-telnet%2F</url>
    <content type="text"><![CDATA[以一般用户登录系统 执行命令 sudo apt-get install xinetd 系统提示输入用户密码，输入密码后安装xinet软件包 执行命令 sudo apt-get install telnetd 系统提示输入用户密码，输入密码后安装telnet软件包 执行命令 sudo touch /etc/xinetd.d/telnet新 建一个文件内容如下，并保存 执行命令 sudo nano -w /etc/xinetd.d/telnet # default: on# description: The telnet server serves telnet sessions; it uses \# unencrypted username/password pairs for authentication.service telnet&#123;disable = noflags = REUSEsocket_type = streamwait = nouser = rootserver = /usr/sbin/in.telnetdlog_on_failure += USERID&#125; 执行如下命令：sudo nano -w /etc/xinetd.conf 并加入如下内容： instances = 60log_type = SYSLOG authprivlog_on_success = HOST PIDlog_on_failure = HOSTcps = 25 30]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>telnet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java实现http文件下载]]></title>
    <url>%2F2012%2F07%2F04%2Fjava-http-download%2F</url>
    <content type="text"><![CDATA[许多用户可能会遇到这样的情况：在网站上发现一个很好的资源，但是这个资源是分成 了很多个文件存放的，如果想把它保存到本地，只有靠用户点击另存来完成保存，如果资源 分了几百甚至上千上万，那简直是个灾难。 在Internet上很多的资源分成多个文件存放时，它的文件命名是有一定的规则的；正因 如此，我们就可以用程序来完成这个资源的完全下载。 1. 基础知识 在Internet上，我们要下载网站上的某个资源，我们会获得一个URL（Uniform Resource Locator），它是一个服务器资源定位的描述，下载的过程总是如下步骤: 步骤1:客户端发起连接请求一个URL 步骤2:服务器解析URL，并将指定的资源返回一个输入流给客户 步骤3:客户端接收输入流，将流中的内容存到文件 2. 网络连接的建立 Java提供了对URL访问和大量的流操作的的API，我们可以很容易的完成对网络上资源的 存取,下面的代码段就完成了对一个网站的资源进行访问: destUrl="http://www.ebook.com/java/网络编程001.zip";url = new URL(destUrl);httpUrl = (HttpURLConnection) url.openConnection();//连接指定的网络资源httpUrl.connect();//获取网络输入流bis = new BufferedInputStream(httpUrl.getInputStream()); 代理的访问 Java 中通过代理服务器访问外网的方法已经是世人皆知的秘密了。这里就不再多描述了 ，访问的JAVA代码如下: //设置代理服务器System.getProperties().put("proxySet", "true");System.getProperties().put("proxyHost", "10.154.134.110");System.getProperties().put("proxyPort", "8080"); 网络资源的保存 在上节中，我们已经获取了指定网络资源的输入流，接下来我们要完成的就是读取输入 流中的所以内容，并将其保存在文件中。示例代码: fos = new FileOutputStream(fileName);if (this.DEBUG)System.out.println("正在获取链接[" + destUrl + "]的内容.../n将其保存为文件[" +fileName +"]");//保存文件while ( (size = bis.read(buf)) != -1)fos.write(buf, 0, size); 上面的示例代码就将网络资源的内容保存到了本地指定的文件中。 import java.io.*;import java.net.*;import java.util.*;/** * ＜p＞Description: 将指定的HTTP网络资源在本地以文件形式存放＜/p＞ **/public class SaveFile &#123; public final static boolean DEBUG = true; // 调试用 private static int BUFFER_SIZE = 8096; // 缓冲区大小 private Vector vDownLoad = new Vector(); // URL列表 private Vector vFileList = new Vector(); // 下载后的保存文件名列表 /** * * 构造方法 */ public SaveFile() &#123; &#125; /** * * 清除下载列表 */ public void resetList() &#123; vDownLoad.clear(); vFileList.clear(); &#125; /** * * 增加下载列表项 * * @param url String * @param filename String */ public void addItem(String url, String filename) &#123; vDownLoad.add(url); vFileList.add(filename); &#125; /** * * 根据列表下载资源 */ public void downLoadByList() &#123; String url = null; String filename = null; // 按列表顺序保存资源 for (int i = 0; i &lt; vDownLoad.size(); i++) &#123; url = (String) vDownLoad.get(i); filename = (String) vFileList.get(i); try &#123; saveToFile(url, filename); &#125; catch (IOException err) &#123; if (DEBUG) &#123; System.out.println("资源[" + url + "]下载失败!!!"); &#125; &#125; &#125; if (DEBUG) &#123; System.out.println("下载完成!!!"); &#125; &#125; /** * 将HTTP资源另存为文件 * * @param destUrl * String * @param fileName * String * @throws Exception */ public void saveToFile(String destUrl, String fileName) throws IOException &#123; FileOutputStream fos = null; BufferedInputStream bis = null; HttpURLConnection httpUrl = null; URL url = null; byte[] buf = new byte[BUFFER_SIZE]; int size = 0; // 建立链接 url = new URL(destUrl); httpUrl = (HttpURLConnection) url.openConnection(); // 连接指定的资源 httpUrl.connect(); // 获取网络输入流 bis = new BufferedInputStream(httpUrl.getInputStream()); // 建立文件 fos = new FileOutputStream(fileName); if (this.DEBUG) System.out.println("正在获取链接[" + destUrl + "]的内容.../n将其保存为文件[" + fileName + "]"); // 保存文件 while ((size = bis.read(buf)) != -1) fos.write(buf, 0, size); fos.close(); bis.close(); httpUrl.disconnect(); &#125; /** * 将HTTP资源另存为文件 * * @param destUrl * String * @param fileName * String * @throws Exception */ public void saveToFile2(String destUrl, String fileName) throws IOException &#123; FileOutputStream fos = null; BufferedInputStream bis = null; HttpURLConnection httpUrl = null; URL url = null; byte[] buf = new byte[BUFFER_SIZE]; int size = 0; // 建立链接 url = new URL(destUrl); httpUrl = (HttpURLConnection) url.openConnection(); // String authString = "username" + ":" + "password"; String authString = "50301" + ":" + "88888888"; String auth = "Basic " + new sun.misc.BASE64Encoder().encode(authString.getBytes()); httpUrl.setRequestProperty("Proxy-Authorization", auth); // 连接指定的资源 httpUrl.connect(); // 获取网络输入流 bis = new BufferedInputStream(httpUrl.getInputStream()); // 建立文件 fos = new FileOutputStream(fileName); if (this.DEBUG) System.out.println("正在获取链接[" + destUrl + "]的内容.../n将其保存为文件[" + fileName + "]"); // 保存文件 while ((size = bis.read(buf)) != -1) fos.write(buf, 0, size); fos.close(); bis.close(); httpUrl.disconnect(); &#125; /** * 设置代理服务器 * * @param proxy * String * @param proxyPort * String */ public void setProxyServer(String proxy, String proxyPort) &#123; // 设置代理服务器 System.getProperties().put("proxySet", "true"); System.getProperties().put("proxyHost", proxy); System.getProperties().put("proxyPort", proxyPort); &#125; public void setAuthenticator(String uid, String pwd) &#123; Authenticator.setDefault(new MyAuthenticator()); &#125; /** * 主方法(用于测试) * * @param argv * String[] */ public static void main(String argv[]) &#123; HttpGet oInstance = new HttpGet(); try &#123; // //增加下载列表（此处用户可以写入自己代码来增加下载列表） // oInstance.addItem("http://www.ebook.com/java/网络编程001.zip","./网络编程1.zip");// // oInstance.addItem("http://www.ebook.com/java/网络编程002.zip","./网络编程2.zip"); // oInstance.addItem("http://www.ebook.com/java/网络编程003.zip","./网络编程3.zip"); // //开始下载 // oInstance.downLoadByList(); oInstance.saveToFile("http://www.ebook.com/java/网络编程001.zip", "./down.zip"); &#125; catch (Exception err) &#123; System.out.println(err.getMessage()); &#125; &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何开启Ubuntu 的 root 用户]]></title>
    <url>%2F2012%2F07%2F04%2Flinux-ubuntu-open-root-user%2F</url>
    <content type="text"><![CDATA[Ubuntu安装后，root用户默认是被锁定了的，不允许登录，也不允许“su”到 root。有人说这是个不好的实践，特别是对于服务器来说。我觉得对于桌面用户来说，这样安全性更高一些，是应该的；但对于服务器可以设置成“允许 su 到root，但不允许root用户直接登录”。而我为了开发时的方便，则在桌面和服务器上都采用这种方式。 允许 su 到 root 非常简单，下面是设置的方法： me@tipfoo:~$ sudo passwd Password: &lt;— 输入安装时那个用户的密码 Enter new UNIX password: &lt;— 新的Root用户密码 Retype new UNIX password: &lt;— 重复新的Root用户密码 passwd：已成功更新密码 允许root登录 如果要允许root登录（不推荐），则这样操作： me@tipfoo:~$ gksu /usr/sbin/gdmsetup （或者使用桌面菜单：系统＞系统管理＞登录窗口） 点“安全”选项页，选择“允许本地管理员登录”。 注：这一步依赖上一步 不输入密码直接登录 在论坛上也看见有人抱怨，家中的Ubuntu不能像Window$那样──不用输入密码就能登录。其实同样能做到： 就在上一步的“安全”选项页中，勾选： “启用自动登录”，“用户”选择（如：“me”）; 注意：公共用的计算机千万不能这么设置！ SSH登录远程服务器 如果远程服务器只允许root用户SSH到服务器时，在Ubuntu下，必须“su 到root”用户才能登录成功(具体是看服务器端的配置)。 首先，复制密钥到“/root/.ssh/”目录， me@tipfoo:~$ su Password: root@tipfoo:/home/me# chmod 600 -R /root/.ssh/ root@tipfoo:/home/me# ssh -p 27482 11.22.33.44 Enter passphrase for key ‘/root/.ssh/id_rsa’: Last login: Thu Jun 21 14:29:00 2007 from 11.22.33.45]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>root</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ajax调用第一次成功,以后均失败解决办法]]></title>
    <url>%2F2012%2F07%2F04%2Fweb-ajax-cache%2F</url>
    <content type="text"><![CDATA[IE内核的浏览器会自动缓存异步通信处理结果，第一次ajax请求已经被高速缓存，若第二次点击(请求)，IE浏览器会认为这是同一个请求，由于第一次请求已经得到了响应，因此不会再响应第二次、第三次…的请求。 解决办法：保证每次异步请求的url地址都不相同，即唯一标识每一次请求。具体的解决方案可以在url添加一个参数，参数的值=new Data().getTime(). 即可达到目的。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>ajax</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我看了很感人]]></title>
    <url>%2F2012%2F07%2F04%2Fgame-dnf%2F</url>
    <content type="text"><![CDATA[傻子很少去网吧也从来没有玩过网络游戏，在网吧里看见很多人玩地下城与勇士，于是他也加入其中。傻子选了个神枪手的职业，因为他觉得很帅。 ­ 就这样开始了DNF之旅，傻子进游戏后不知道怎么开枪，陪哥布林玩了好久捉迷藏，终于通关后救出赛丽亚MM。NPC赛丽亚习惯的说谢谢你了勇士，傻子还傻傻的打字说不用谢。 ­ 傻子很笨花了几个小时才进了赫尔马顿城镇。一路上很多NPC和他打招呼，他很开心。他很高兴认识这么多新朋友。 ­ 过了几天傻子慢慢的16级了，学会了去凯丽师傅那学技能，还很认真的帮大家完成任务。每当完成任务回来NPC送他一些装备他都会高兴的不得了。 ­ 这天他正要进图，忽然看见一个小个子MM在那喊：有哪位哥哥能带带我啊？我才3级。。喊了半天没人理他。傻子觉得她很可怜走过去说：我带你吧。就这样傻子带她刷猛毒雷鸣废墟，因为傻子16级了打这的怪很轻松，傻子叫MM站远会伤到你的。MM说傻子真体贴。傻子呵呵的笑了。傻子说你小心点，走着也会摔倒，真是个孩子。MM说那你就叫我孩子吧。我喜欢听你叫我孩子。孩子说喜欢树上打下来的草莓，傻子说那我摘给你。孩子说你真好。孩子傻子心里感觉很开心。 ­ 第二天傻子早饭也没吃急急的跑去网吧上了游戏，因为他们约了明天一起组队升级…孩子还没来，傻子在游戏上发呆。到中午快一点的时候孩子上游戏了说不好意思来晚了问傻子吃了饭没？下午可要好好战斗。。傻子说早吃了就等你了。就这样傻子带孩子练级去了，孩子说冰姐姐和火姐姐好漂亮阿。傻子笑着说没有你可爱，孩子打了个可爱的表情-。在大街上孩子看见别的魔法师穿了一套时装嚷着说要是穿在我身上肯定比她们漂亮.傻子在屏幕前红着脸不说话了，他真想为孩子买一套时装，可是傻子真的很穷，穷的连上网费都没。更别说游戏里那么贵的时装虽然他不知道要多少钱。傻子决定一定要为孩子买一套傻子这么想。傻子感觉第一次喜欢一个人了，只要有她在身边就是件幸福的事。 ­ 就这样他们边打怪边聊天孩子告诉傻子很多游戏里的知识：在西海岸的那一边有着一座美丽的天空之城，在天帷巨兽遗迹里住着一位邪恶的教主控制着善良的GBL，在白雪岂岂的万年雪山有一位迷失心智的冰心少年，在暗黑城堡有着一位昔日讨伐恶魔，而战死无法得到安息的无头骑士很多很多……傻子认真的听着，原来DNF的世界是那么大，傻子说以后的路我们一起走吧。嗯孩子轻轻的说。孩子还告诉傻子自己有个50多级的大号，等你级高点了送你点装备，傻子眼眶湿湿的，第一次有人对他这么好。 ­ 从没干过什么的傻子去找工作，别人问傻子能做什么，傻子摇摇头。他们看傻子呆头呆脑的都拒绝了他都说你到别处看看去吧，傻子跑了很多地方，在一个送桶装矿泉水的地方傻子苦苦的哀求老板说用他吧，自己不要很多钱，只要能赚到上网费就行了。大叔看傻子挺真诚的也很可怜对他说，每个月三百块，送一桶水提成5毛。明天来上班吧，傻子不停的谢老板，傻子很开心找到了自己的第一份工作。。 ­ 孩子是傻子的第7个qq好友，孩子发个视频过来说想看看帅哥，傻子不敢接他怕孩子看到自己傻样子会不理他了，于是对孩子说网吧里没视频。孩子说那算了有空去空间给我踩踩。傻子点进孩子空间里面很好看，对孩子说里面很漂亮，孩子说都是自己弄的花了很多时间心思，傻子夸孩子真用心。傻子无意中点进孩子的相册看到了孩子的照片，梳着马尾辫的孩子笑的很灿烂人也漂亮。傻子认为她就是一个天使，傻子偷偷的把照片下到自己手机上。晚上睡觉的时候傻子心里想的都是孩子，看着孩子的照片傻子第一次失眠了…. ­ 这时傻子17级，孩子15级了。。孩子说我们去杀僵尸吧这里没经验了，傻子呵呵大笑说没问题，于是进图傻子操作很菜技能也不懂的怎么用，挂了出来。孩子说你真笨，傻子不好意思的对孩子说对不起，再来一次吧。第二次也虚弱了出来，孩子嘟着嘴说我18级的时候能过王者级别的了。傻子红着脸不说话了。他认为现在还不能保护好孩子决定等练厉害了在来找她，于是傻子对孩子说等我。把身上仅有的4万金币交易给了孩子，她没说话转身走了。。­ 傻子望着孩子柔弱的背影消失后转身也进了暗黑雷鸣废墟…­ 因为没钱买药傻子不知道自己虚弱了多少次，一次次的冲进去副本里，开始从普通到冒险。傻子到18级的时候毅然选择了转漫游，因为他知道孩子的大号也是漫游，转职任务上傻子花了一天时间终于自己完成了。傻子认为只要自己努力没什么完不成的。 ­ 慢慢的…傻子打勇士级的僵尸图了还是很吃力。在路上边采集树上的草莓，既使自己快挂了也舍不得吃草莓，因为他还没忘记孩子喜欢草莓，他要送给她。 ­ 过了两天当傻子到19级的时候他已经能轻松的过JS王者了。傻子认为现在能找孩子能保护她了，发消息过去没不用回复。。一连几天傻子都没见孩子上线，发了好多邮件，,也去空间留了好多言，傻子没心情打怪去哪儿都虚弱回来。那时，孩子是傻子的一切。就这样傻子还是每天等孩子。过了几天傻子看见孩子上线了，傻子跑过去找孩子，远远的看见孩子身边有一位高等级时装的大将军，他们正一起走向西海岸的天空之城…傻子想跑过去叫孩子，可是脚步却停住了。傻子心里酸酸的第一次感受到吃醋的味道。。­ 第二天傻子见到孩子，问她怎么这些天没上线。孩子说玩大号去了。傻子傻傻地说：走，孩子我现在能通JS王了可以保护你了。孩子对傻子说你自己去吧我要去天空之城了有一个朋友在西海岸等她，并在交易栏里放了把20级紫色的左轮枪。转身要走。傻子知道是昨天那个人在等她，忽然间好像明白了什么，他怕失去她怕再也见不到她了。在赫尔马顿大街上傻子用这生从未有过的勇气大喊：等等，孩子我一直喜欢你。 ­ 孩子愣了愣对傻子说道：我不会喜欢一个低级的穷傻子，当初只是为了让你带我练级才和你在一起而已…­ 傻子哀求的说：给我一次机会吧。 ­ 孩子讽刺的说：等你有枪神的称号在来找我吧。孩子想让傻子知难而退，她认为傻子那么笨是不可能完成的。因为她知道枪神之路是多少艰难。一个人，一把枪。 ­ 傻子知道枪神是漫游48级转职的称号，傻子交易她放上去99颗草莓和余下的金币，傻子只说了句等我。转身就走了。孩子看着草莓心里感到有点内疚… ­ 没有孩子的陪伴，傻子有点孤单，当傻子到20级时拿着孩子送的武器心里暖暖的，这一天傻子正要去完成诺顿大叔交给他最后一次消灭僵尸王的任务。在进图的时候看见一个小个子魔法师喊着找人带JS王，看着她傻子不由想起孩子，密她说我带你去。那女孩说你能行吗，多少钱？傻子说不要钱。傻子心肠总是热心的几盘下来帮那女孩任务都做了。傻子PL用完了，对女孩说要下了再见。女孩感到惊讶现在游戏里还有这种人不是傻子吧。傻子被加了好友，成了女孩的第一个好友…­ 第二天傻子上线向赫尔城镇的朋友们告别踏上去西海岸天空之城的路，面对新的副本傻子很努力，一个人从普通到王者因为他不想再让孩子说他笨。 ­ 女孩转的是召唤师因为她觉得这个职业很安逸，宝宝一出来自己可以不用打怪。时间长了女孩一个人练级也会觉得无聊，于是想找人组队一起练，可是别人见她是召唤都不愿意组女孩，说她招宝宝会卡，女孩觉得委屈。。 ­ 一天，女孩翻了下好友名单看见傻子在线想起了是他， ­ 发了个消息过去：你好！­ 傻子见有个窗口密他，傻子不记得女孩了只好发说了句你好。 ­ 女孩以为傻子记得自己，很高兴就对傻子说一起组队练级吧。 ­ 傻子很意外，还没有谁组过自己呢，都说漫游刷图垃圾。就对女孩说好。 ­ 女孩迈着大步过去找傻子，傻子23级.女孩21级.­ 傻子说女孩你怎么养这么多怪物，女孩嚷着说是自己的宝宝，不是怪物= =。傻子知道了女孩是召唤师。女孩这一天很开心，傻子没嫌弃自己卡，还帮自己完成任务，就这样傻子和女孩重新认识了。 ­ 傻子在路上打到一个学者护腕，女孩羡慕的说那个值很多钱，以后自己有钱也想买一个。傻子说那送你吧。女孩看着一身垃圾装备的傻子说你还是卖了自己买装备吧。傻子说以后还可以打的到。女孩不好意思的接过护腕说以后有钱了还你。傻子呵呵大笑。女孩心里想原来他真的是个傻子。。。 ­ 以后女孩每天上线就找傻子一起练级。觉得和傻子在一起很塌实。女孩对傻子说做我师傅吧。傻子说我没什么本领教给你，女孩说你能带我练级帮我过任务，虽然女孩一个人也能完成。傻子第一次感觉被人需要，于是女孩成了傻子的徒弟。 ­ 傻子和女孩成功登上最后的悬空城后，女孩说真是座美丽的天空之城，傻子想起了孩子的话，原本他们约好一起走，可是现在却不在他身边，傻子有点伤心。 ­ 女孩问傻子说师傅你怎么玩一个难练的漫游，傻子说为了一个孩子，他喜欢的人，还说她在等他。女孩听了傻子讲他和她的故事，觉得傻子好傻也很感动，就对傻子说如果有人对我这么好，我马上嫁给他。傻子笑笑说你会遇见喜欢你的人的。女孩决定帮师傅快点到48级。 ­ 来到天帏巨兽,他们一起穿过丛林越过炼欲翻过第一山脊，傻子觉得很轻松，女孩说师傅你真厉害。傻子笑笑说谁叫我是你师傅，傻子只是不知道，因为有女孩在。在打怪的时候女孩心疼的拿着皮鞭抽她的宝宝，叫他们打快点。。这时傻子35级.女孩34级. ­ 傻子这天上班还没来，女孩在逛街时看见一把很精美的35左轮，虽然有点贵，女孩还是买下来了，并把它加到7。傻子上线的时候女孩把左轮交到傻子手里说送师傅的。傻子说不用了，我有武器。女孩知道傻子舍不得孩子送的那把武器，女孩生气了说师傅心里没有她这个徒弟。傻子见女孩生气不知道怎么办只好换上她送的武器，把孩子送他的左轮小心的装进背包。女孩这才笑了。 ­ 女孩对傻子说想看看你师傅长什么样。傻子只把女孩当徒弟所以接了视频，女孩看到的是一个瘦瘦很清秀的男孩，女孩觉得自己脸有点红。 ­ 傻子对女孩说徒弟你真可爱。 ­ 女孩说只是可爱吗，难道我不漂亮？ ­ 傻子说也漂亮。女孩说了句笨蛋。 ­ 女孩是很漂亮，甚至比孩子还漂亮。 ­ 女孩对傻子说以后不许在找其他徒弟了，傻子问为什么。女孩说如果你有10个徒弟了就没什么时间陪我练级了。 ­ 傻子说谁会找我这个又穷等级又低的人做师傅，也只有你这个傻徒弟了，女孩笑了。 ­ 女孩心里喜欢上傻子了，可是她知道傻子心里只有孩子。 ­ 斯顿雪域，傻子救出查理班图族长给予傻子勇士称号。时间过的很快，转眼傻子到45级了，傻子很高兴离枪神是那么近了，女孩更加珍惜和傻子在一起的时间。- ­ 女孩问傻子说：师傅以后如果你和孩子在一起了，还会陪我练级么。 ­ 傻子说：傻徒弟你不能老跟着师傅呀，你以后也会有喜欢的人和喜欢你的人。 ­ 女孩喃喃说：他有喜欢的人了， ­ 傻子说你这么好，谁不喜欢是他的损失。女孩：……­ 傻子快到48级的时候，女孩为了祝贺傻子成为枪神决定给傻子一份礼物，她要亲手给傻子强化一把+11的速射左轮，女孩从来舍不得给自己买装备，虽然很便宜。女孩用她存来的金币买了武器，可是强化11不是那么简单，失败了几次后女孩包里的金币所剩无几，她只好把仓库辛苦攒来的材料晶体什么的都卖了，最后一次成功了，女孩很欣慰。 ­ 今天傻子升级到48级，满心欢喜的去找凯丽师傅觉醒枪神，可是凯丽对傻子说虽然你已经获得勇士证明，可是对于枪神来说远远不够，等你打倒对手获得1000胜点在来吧。傻子从来没有去过PK场，单纯的傻子怎么打的赢那些钩心斗角的人，只能一点一点的赚胜点，女孩为了让傻子早点完成帮傻子刷胜点，整整一个通宵傻子终于觉醒了，女孩却感冒病倒了。下的时候对傻子说师傅恭喜你成为枪神，徒弟送你的礼物祝你和喜欢的人幸福。傻子走了去找孩子了。。女孩望着傻子.. ­ 傻子已经三个多月没见到孩子，傻子找到孩子再次见到她的时候孩子已经50多级了，穿着一身漂亮的时装的元素法师。傻子说好久不见，我完成约定来找你了。 ­ 孩子见到傻子很惊讶，甚至有点忘记他了，孩子想不到傻子能成为枪神还会来找自己，孩子看着傻子一身垃圾装备，却有一把好武器，她不知道傻子是怎么过来的。，孩子默默不语。傻子说孩子以后我们一起吧。孩子认为傻子只是凑巧罢了，成为枪神只要有耐性谁都可以，傻子只有傻劲。孩子扔下冰冷冷的一句话：等你有墨竹手镯，贤哲戒指，尼玛神兽项链在来找我吧。孩子认为这次傻子该知道什么意思了吧…. ­ 傻子只是个单纯的人，傻子对女孩说这3样东西哪里打，女孩听了傻子的话告诉傻子说那孩子根本不喜欢你。傻子说没有，她在等我。女孩说你别傻了，你知道这3样东西多珍贵吗，她只是个骗子。傻子第一次对女孩生气说不许说孩子坏话，并解除了师徒关系。女孩哭了。 ­ 好几天傻子和女孩都没有说话，女孩很想傻子，主动找到傻子说师傅我错了。傻子也说了句对不起。于是又重新拜了师。傻子很穷连一个墨竹的钱也没，更别谈其他的了，女孩说买不起我们自己打，他们查了资料悬空出墨竹手镯，于是刷悬空，第七天出了墨竹。 ­ 网上说禁地出贤哲戒指图，于是又去刷禁地，一星期，二星期，很幸运第20天出了图纸。 ­ 傻子高兴的对女孩说，只要努力没什么做不到的。女孩说也许是吧… ­ 最后一个是尼玛项链，傻子和孩子刷过蜘蛛山脊墓地，一个月.两个月. ­ 傻子还是相信只要努力没什么做不到。 ­ 有的东西就算在怎么努力也是没结果，就像我和你有缘无份，女孩心里说道。­ 女孩去网上花几百元买了一条，在刷图的时候趁傻子不注意把项链扔到地上。女孩对傻子说哇师傅打到项链了。傻子笑呵呵的拣起项链对女孩说：终于打到了，明天可以去找孩子，谢谢你徒弟陪我打这么久。女孩心里祝福傻子。这时傻子和女孩都50级了。( ­ 傻子再一次找到孩子，这时候她已经60级了，傻子把3样首饰交到她手里，孩子吃惊的看着傻子，感到愧疚原来傻子是真的喜欢自己，可是孩子有老公了那个大将军他们很久以前就在一起了。 ­ 孩子不想在骗傻子了就对他说：你找个好女孩吧，我只是个坏孩子。并把东西还给傻子。 ­ 傻子说：我只要和你在一起，没有谁能代替你。 ­ 女孩说：我已经有老公了，对不起.你走吧. ­ 傻子说是我做的不好还是什么？只要你说的我一定做的到。 ­ 女孩狠了狠心对傻子说：如果你能收集到99999颗草莓，我就答应嫁给你。 ­ 傻子还是傻傻的说了句等我，就转身走了。孩子望着傻子只说了句忘记我吧。 ­ 以后的日子，在格兰之森总是有着一个50多级的傻子在喊着收草莓，有些人看见傻子每天在喊着收草莓故意把草莓卖的很贵，即便如此傻子还是买了，很快以前存的金币用完了。 ­ 女孩知道了这事以后没说什么，只是默默的陪在傻子身边，如果能早点遇见傻子该多好。­ 傻子在刷草莓的时候也会带那些新人，只是要求把掉落的草莓给他，也会无私的把打到的一些低级装备和金币送给他们 ­ 可是99999个草莓是那么遥遥无期，可是傻子还是一如既往的坚持着，望着仓库里慢慢堆起来的草莓，傻子相信努力的话没什么做不到。新手们问傻子为什么收集草莓？ ­ 傻子呵呵的说有个女孩在等他，等他娶她。因为他们约定好了，他们都说你好傻，傻子笑笑。日子久了大家也会把拣到的草莓送给傻子。 ­ 不知过了多久，傻子依然收着草莓，有一天，格兰这来了两个很高级的人-一个元素和一个大将军。在那喊着公会收人，傻子呆呆着望着那个元素，那个元素也望着傻子回忆着什么。公会老大指着傻子说老婆你看那个傻子，不知道干什么的每天带人不收钱只要草莓真是傻子哈哈。­ 那个元素对他说不许叫他傻子。男人和她吵。他火了，叫了会里几个人来刷频骂傻子。 ­ 傻子傻傻的站那被一群人骂，不知道怎么办好。女孩跑过去和一群男人评理。那些人连骂女孩一起骂。 ­ 就在这时，不知道谁发了个喇叭，说傻子和女孩在10频道被人欺负了，不多久，格兰这来了好多人，有十多级的新手，也有五六十级的高级号还有一些名气很大的工会老大都来了，原来他们都是新人时期受到过傻子和女孩帮助过的人，傻子一直把他们带到格兰毕业，对他们来说傻子和女孩就是他们的师傅一样。好多人指责那个骂傻子的工会老大，服务器喇叭也一直没停过，有的人刷频的骂那工会老大，有的喊谁欺负傻子和女孩他就别想在这服混下去，有的提议说把那人拉黑。不一会刚才欺负傻子的那群人头顶上出现全民公敌的称号，灰溜溜的下线了。­ 漫骂声结束后，大家又说了很多鼓励傻子的话，祝福傻子能找日和孩子在一起祝他们幸福“““ ­ 傻子沉默了很久，买了个喇叭只写了句谢谢大家“`然后下线了。 ­ 女孩找到孩子问为什么对这么对傻子，如果不喜欢可以直接说出来没必要老欺骗他的感情。孩子说没有，只是他没理解我话的意思而已。­ 女孩说傻子哪里不好了。 ­ 孩子说他很好，可惜他级不高，带不了我升级，也不会给我买漂亮的时装。女孩气愤的说傻子很努力的升级，可是你为什么都不等等他，他给你冲的QB都可以买好几套时装了，你还不知足。 ­ 孩子说。。。。QB？我不知道。 ­ 女孩说傻子每个月都有给你冲，都是他辛苦工作赚来的。自己都舍不得买时装都给你了。 ­ 孩子查询了下qq帐户，吃惊的望着上面的1080个QB….­ 女孩哭着说还她的师傅，还她的傻子。 ­ 很长时间傻子再也没有上过线，女孩也走了，没有了傻子游戏对她来说也没意义。 ­ 她终于明白了那句话：世界上最遥远的距离不是生与死，而是我站在你面前,你却不知道我喜欢你…… ­ 孩子依旧在游戏，她在等傻子，等他娶她。为什么失去才懂的珍惜？只是她明白的是不是晚了点。 ­ 很多人都说傻子对孩子彻底失望了，离开了游戏。 ­ 也有人传言说傻子的号给盗了，据盗号的说清楚的看到满仓库的草莓.99998个­ 谁知道呢，傻子也许是累了.对游戏…对爱情…­ 只是傻子不知道一直陪在他身边的是女孩… ­ 也许若干年后.傻子回忆过往.想起女孩…会明白至尊宝对紫霞仙子说过的那段话： ­ 曾经有一份真诚的爱情摆在我面前，我没有珍惜，等失去的时候，才后悔莫及。]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>dnf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网页防止复制]]></title>
    <url>%2F2012%2F07%2F04%2Fweb-html-disable-copy%2F</url>
    <content type="text"><![CDATA[在body标签内加上一段代码，禁用右键菜单 &lt;body oncontextmenu="return false"onselectstart="return false"ondragstart="return false"onbeforecopy="return false"oncopy=document.selection.empty() onselect=document.selection.empty()&gt; &lt;input type="text" id="username" name="username" value="禁止复制" onpaste="return false" oncontextmenu="return false" oncopy="return false" oncut="return false" &gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文本编辑器：nano vim/vi]]></title>
    <url>%2F2012%2F07%2F04%2Flinux-nano-vim-vi%2F</url>
    <content type="text"><![CDATA[1.Nano是一个简单的没有花梢及华丽效果的文本编辑器。Nano在做简单文本文件编辑时相当不错,可以满足一些基本操作. 直接在命令行模式下输入nano 文件名，就可以对文件进行简单的编辑。 文件编辑中常用快捷键：ctrl+X 离开nano软件，若有修改过的文件会提示是否保存； ctrl+O 保存文件； Ctrl+W 查询字符串； ctrl +C 说明目前光标所在处的行数和列数等信息； ctrl+ _ 可以直接输入行号，让光标快速移到该行； 2.vi ：vi编辑器是所有Unix及Linux系统下标准的编辑器 ，功能强大，vim可视作vi的高级版本。 1） vi可以分为三种模式：命令行模式，输入模式，末行模式。 命令行模式—&gt;输入模式： i，a，A,o，O，c，C，r，R均可从命令行切换到输入行； i:在当前光标所在处插入； a：当前光标所在行的后面插入； A：当前光标所在行行尾插入； o:在当前光标所在处的下一行插入新的一行； O:在当前光标所在处的上一行插入新的一行； c:先删除在载入新的一行； C:删除光标所在一行在插入； r:替换光标所在那一个字符一次； R:一直替换光标所在处的文字； 输入模式—&gt;命令行模式：Esc 命令行模式—&gt;末行模式：： 末行模式-—&gt;命令行模式：Esc 2） 光标移动： h(&lt;—) 左移光标一个字符 ； l（—&gt;） 右移光标一个字符 ； k(↑) 光标上移一行 ; j (↓) 光标下移一行 「ctrl」+「b」：屏幕往”后”移动一页。 「ctrl」+「f」：屏幕往”前”移动一页。 「ctrl」+「u」：屏幕往”后”移动半页。 「ctrl」+「d」：屏幕往”前”移动半页 3)行内移动：^ 移动到非空白行的行首 0 绝对位置的行首 $移动到行尾 4）以单词为单位移动： w：一次移动一个单词，到下一个单词的词尾 b：移到当前单词词首（向回跳） e：跳到词尾 5）行间移动： n(数字）G ：n数值为几，就移到这个文件的第几行；当n=1时，相当于gg的功能，移到该文件的第一行； G：移到这个文件的最后一行； 6）删除命令： x：向后删除一个字符，使用del键同样功能； X:向后删除一个字符； nx：连续向后删除n个字符； dd：删除光标所在的那一整行； ndd：删除光标所在的向下n行； d1G：删除光标所在到第一行的所有数据； dG：删除从光标所在到最后易方达额所有数据； 7）复制，粘贴 yy：复制光标所在的那一整行； nyy：复制光标所在的向下n行； y0：复制光标所在的那一个字符到该行行首的所有数据； y$:复制光标所在的那一个字符到该行行尾的所有数据； p：将已经复制的数据在光标的下一行粘贴； P：粘在光标的上一行； 8）查找，替换 /word:向下查找一个名称为word的字符串； ？word：向上查找一个名称为word的字符串； ：n1，n2 s/word1/word2/g ：在n1与n2行之间寻找一个word1的字符串，并将其替换为word2 ：1，$ s/word1/word2/g:从第一行到最后一行查找word1字符串，并将其替换为word2 9）文件的保存与退出： w：在冒号输入字母「w」就可以将文件保存起来； q：退出； q!:强制退出； wq ：保存退出； wq！：强制保存退出 10）显示行号：在末行模式输入：set nu 取消行号：在末行模式输入：set nonu]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nano</tag>
        <tag>vim</tag>
        <tag>vi</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一段惊艳的代码]]></title>
    <url>%2F2012%2F07%2F02%2Fit-beauty-code%2F</url>
    <content type="text"><![CDATA[with(m=Math)C=cos,S=sin,P=pow,R=random;c.width=c.height=f=500;h=-250;function p(a,b,c)&#123;if(c&gt;60)return[S(a*7)*(13+5/(.2+P(b*4,4)))-S(b)*50,b*f+50,625+C(a*7)*(13+5/(.2+P(b*4,4)))+b*400,a*1-b/2,a];A=a*2-1;B=b*2-1;if(A*A+B*B&lt;1)&#123;if(c&gt;37)&#123;n=(j=c&amp;1)?6:4;o=.5/(a+.01)+C(b*125)*3-a*300;w=b*h;return[o*C(n)+w*S(n)+j*610-390,o*S(n)-w*C(n)+550-j*350,1180+C(B+A)*99-j*300,.4-a*.1+P(1-B*B,-h*6)*.15-a*b*.4+C(a+b)/5+P(C((o*(a+1)+(B&gt;0?w:-w))/25),30)*.1*(1-B*B),o/1e3+.7-o*w*3e-6]&#125;if(c&gt;32)&#123;c=c*1.16-.15;o=a*45-20;w=b*b*h;z=o*S(c)+w*C(c)+620;return[o*C(c)-w*S(c),28+C(B*.5)*99-b*b*b*60-z/2-h,z,(b*b*.3+P((1-(A*A)),7)*.15+.3)*b,b*.7]&#125;o=A*(2-b)*(80-c*2);w=99-C(A)*120-C(b)*(-h-c*4.9)+C(P(1-b,7))*50+c*2;z=o*S(c)+w*C(c)+700;return[o*C(c)-w*S(c),B*99-C(P(b, 7))*50-c/3-z/1.35+450,z,(1-b/1.2)*.9+a*.1, P((1-b),20)/4+.05]&#125;&#125;setInterval('for(i=0;i&lt;1e4;i++)if(s=p(R(),R(),i%46/.74))&#123;z=s[2];x=~~(s[0]*f/z-h);y=~~(s[1]*f/z-h);if(!m[q=y*f+x]|m[q]&gt;z)m[q]=z,a.fillStyle="rgb("+~(s[3]*h)+","+~(s[4]*h)+","+~(s[3]*s[3]*-80)+")",a.fillRect(x,y,1,1)&#125;',0) 上面这段JavaScript代码一共有1018个字符，每个字符占一个字节，一共1018B，约等于1K。这1K大小的js能做什么，点一下这面这个按钮就知道了（需要使用最新版的谷歌浏览器、IE9或火狐浏览器等支持html5的浏览器才能看到效果）。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php在线解压工具]]></title>
    <url>%2F2012%2F06%2F30%2Fphp-zip%2F</url>
    <content type="text"><![CDATA[部分空间不支持在线解压，造成ftp上传文件量大的文件夹很慢，于是网上找到了一个不错的php在线解压工具，本地xampp环境下测试通过，收藏备用。所有代码均为转载，版权归原作者。 &lt;?php//设定密码$password = "bianle";?&gt;&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head profile="http://gmpg.org/xfn/11"&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt; &lt;meta http-equiv="Content-Language" content="zh-CN" /&gt; &lt;title&gt;在线解压ZIP - PhpUnZip&lt;/title&gt; &lt;style type="text/css"&gt; &lt;!-- body &#123; margin:0; padding:0; background:#ccc; font:14px/24px "Microsoft Yahei",Verdana, Geneva, sans-serif &#125; #wrapper &#123; width:760px; margin:0 auto; margin-top:10px; background:#fff; border:1px solid #888; &#125; #header &#123; background:#f7f7f7; &#125; #header h1 &#123; font:20px/30px Verdana, Geneva, sans-serif; font-weight:bold; text-shadow:0 0 1px #DDD; text-align:center; &#125; #main &#123; margin:20px; &#125; #footer &#123; text-align:center; font-size:12px; color:#666; border-top:1px solid #ccc; position:relative; &#125; #footer a &#123; text-decoration:none; color:#666; &#125; #footer a:hover &#123; text-decoration:underline; &#125; #eincy &#123; width:82px; height:36px; background:url(http://www.eincy.com/logo/s.png); position:absolute; right:3px; top:3px; &#125; --&gt; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="wrapper"&gt; &lt;div id="header"&gt; &lt;h1&gt;PHP在线解压ZIP工具 - PHPUnZip&lt;/h1&gt; &lt;/div&gt; &lt;div id="main"&gt; &lt;form name="myform" method="post" action="&lt;?=$_SERVER[PHP_SELF];?&gt;" enctype="multipart/form-data" onSubmit="return check_uploadObject(this);"&gt; &lt;? if(!$_REQUEST["myaction"]): ?&gt; &lt;script language="javascript"&gt; function check_uploadObject(form)&#123; if(form.password.value=='')&#123; alert('请输入密码.'); return false; &#125; return true; &#125; &lt;/script&gt; &lt;p id="choose"&gt; 选择ZIP文件: &lt;select name="zipfile"&gt; &lt;option value="" selected&gt;- 请选择 -&lt;/option&gt; &lt;? $fdir = opendir('./'); while($file=readdir($fdir))&#123; if(!is_file($file)) continue; if(preg_match('/\.zip$/mis',$file))&#123; echo "&lt;option value='$file'&gt;$file&lt;/option&gt;\r\n"; &#125; &#125; ?&gt; &lt;/select&gt; 或上传文件: &lt;input name="upfile" type="file" id="upfile" size="20"&gt; &lt;/p&gt; &lt;p id="dir"&gt; 解压到目录: &lt;input name="todir" type="text" id="todir" value="" size="15"&gt; (留空为本目录,必须有写入权限) &lt;/p&gt; &lt;p id="password"&gt; 验证密码:&lt;input name="password" type="password" id="password" size="15"&gt; &lt;/p&gt; &lt;p id="unzip"&gt; &lt;input name="myaction" type="hidden" id="myaction" value="dounzip"&gt; &lt;input type="submit" name="Submit" value=" 解 压 "&gt; &lt;/p&gt; &lt;? elseif($_REQUEST["myaction"]=="dounzip"): class zip &#123; var $total_files = 0; var $total_folders = 0; function Extract ( $zn, $to, $index = Array(-1) ) &#123; $ok = 0; $zip = @fopen($zn,'rb'); if(!$zip) return(-1); $cdir = $this-&gt;ReadCentralDir($zip,$zn); $pos_entry = $cdir['offset']; if(!is_array($index))&#123; $index = array($index); &#125; for($i=0; $index[$i];$i++)&#123; if(intval($index[$i])!=$index[$i]||$index[$i]&gt;$cdir['entries']) return(-1); &#125; for ($i=0; $i&lt;$cdir['entries']; $i++) &#123; @fseek($zip, $pos_entry); $header = $this-&gt;ReadCentralFileHeaders($zip); $header['index'] = $i; $pos_entry = ftell($zip); @rewind($zip); fseek($zip, $header['offset']); if(in_array("-1",$index)||in_array($i,$index)) $stat[$header['filename']]=$this-&gt;ExtractFile($header, $to, $zip); &#125; fclose($zip); return $stat; &#125; function ReadFileHeader($zip) &#123; $binary_data = fread($zip, 30); $data = unpack('vchk/vid/vversion/vflag/vcompression/vmtime/vmdate/Vcrc/Vcompressed_size/Vsize/vfilename_len/vextra_len', $binary_data); $header['filename'] = fread($zip, $data['filename_len']); if ($data['extra_len'] != 0) &#123; $header['extra'] = fread($zip, $data['extra_len']); &#125; else &#123; $header['extra'] = ''; &#125; $header['compression'] = $data['compression'];$header['size'] = $data['size']; $header['compressed_size'] = $data['compressed_size']; $header['crc'] = $data['crc']; $header['flag'] = $data['flag']; $header['mdate'] = $data['mdate'];$header['mtime'] = $data['mtime']; if ($header['mdate'] &amp;&amp; $header['mtime'])&#123; $hour=($header['mtime']&amp;0xF800)&gt;&gt;11;$minute=($header['mtime']&amp;0x07E0)&gt;&gt;5; $seconde=($header['mtime']&amp;0x001F)*2;$year=(($header['mdate']&amp;0xFE00)&gt;&gt;9)+1980; $month=($header['mdate']&amp;0x01E0)&gt;&gt;5;$day=$header['mdate']&amp;0x001F; $header['mtime'] = mktime($hour, $minute, $seconde, $month, $day, $year); &#125;else&#123;$header['mtime'] = time();&#125; $header['stored_filename'] = $header['filename']; $header['status'] = "ok"; return $header; &#125; function ReadCentralFileHeaders($zip)&#123; $binary_data = fread($zip, 46); $header = unpack('vchkid/vid/vversion/vversion_extracted/vflag/vcompression/vmtime/vmdate/Vcrc/Vcompressed_size/Vsize/vfilename_len/vextra_len/vcomment_len/vdisk/vinternal/Vexternal/Voffset', $binary_data); if ($header['filename_len'] != 0) $header['filename'] = fread($zip,$header['filename_len']); else $header['filename'] = ''; if ($header['extra_len'] != 0) $header['extra'] = fread($zip, $header['extra_len']); else $header['extra'] = ''; if ($header['comment_len'] != 0) $header['comment'] = fread($zip, $header['comment_len']); else $header['comment'] = ''; if ($header['mdate'] &amp;&amp; $header['mtime']) &#123; $hour = ($header['mtime'] &amp; 0xF800) &gt;&gt; 11; $minute = ($header['mtime'] &amp; 0x07E0) &gt;&gt; 5; $seconde = ($header['mtime'] &amp; 0x001F)*2; $year = (($header['mdate'] &amp; 0xFE00) &gt;&gt; 9) + 1980; $month = ($header['mdate'] &amp; 0x01E0) &gt;&gt; 5; $day = $header['mdate'] &amp; 0x001F; $header['mtime'] = mktime($hour, $minute, $seconde, $month, $day, $year); &#125; else &#123; $header['mtime'] = time(); &#125; $header['stored_filename'] = $header['filename']; $header['status'] = 'ok'; if (substr($header['filename'], -1) == '/') $header['external'] = 0x41FF0010; return $header; &#125; function ReadCentralDir($zip,$zip_name)&#123; $size = filesize($zip_name); if ($size &lt; 277) $maximum_size = $size; else $maximum_size=277; @fseek($zip, $size-$maximum_size); $pos = ftell($zip); $bytes = 0x00000000; while ($pos &lt; $size)&#123; $byte = @fread($zip, 1); $bytes=($bytes &lt;&lt; 8) | ord($byte); if ($bytes == 0x504b0506 or $bytes == 0x2e706870504b0506)&#123; $pos++;break;&#125; $pos++; &#125; $fdata=fread($zip,18); $data=@unpack('vdisk/vdisk_start/vdisk_entries/ventries/Vsize/Voffset/vcomment_size',$fdata); if ($data['comment_size'] != 0) $centd['comment'] = fread($zip, $data['comment_size']); else $centd['comment'] = ''; $centd['entries'] = $data['entries']; $centd['disk_entries'] = $data['disk_entries']; $centd['offset'] = $data['offset'];$centd['disk_start'] = $data['disk_start']; $centd['size'] = $data['size']; $centd['disk'] = $data['disk']; return $centd; &#125; function ExtractFile($header,$to,$zip)&#123; $header = $this-&gt;readfileheader($zip); if(substr($to,-1)!="/") $to.="/"; if($to=='./') $to = ''; $pth = explode("/",$to.$header['filename']); $mydir = ''; for($i=0;$i&lt;count($pth)-1;$i++)&#123; if(!$pth[$i]) continue; $mydir .= $pth[$i]."/"; if((!is_dir($mydir) &amp;&amp; @mkdir($mydir,0777)) || (($mydir==$to.$header['filename'] || ($mydir==$to &amp;&amp; $this-&gt;total_folders==0)) &amp;&amp; is_dir($mydir)) )&#123; @chmod($mydir,0777); $this-&gt;total_folders ++; echo "&lt;br /&gt;&lt;input name='dfile[]' type='checkbox' value='$mydir' checked&gt; &lt;a href='$mydir' target='_blank'&gt;目录: $mydir&lt;/a&gt; "; &#125; &#125; if(strrchr($header['filename'],'/')=='/') return; if (!($header['external']==0x41FF0010)&amp;&amp;!($header['external']==16))&#123; if ($header['compression']==0)&#123; $fp = @fopen($to.$header['filename'], 'wb'); if(!$fp) return(-1); $size = $header['compressed_size']; while ($size != 0)&#123; $read_size = ($size &lt; 2048 ? $size : 2048); $buffer = fread($zip, $read_size); $binary_data = pack('a'.$read_size, $buffer); @fwrite($fp, $binary_data, $read_size); $size -= $read_size; &#125; fclose($fp); touch($to.$header['filename'], $header['mtime']); &#125;else&#123; $fp = @fopen($to.$header['filename'].'.gz','wb'); if(!$fp) return(-1); $binary_data = pack('va1a1Va1a1', 0x8b1f, Chr($header['compression']), Chr(0x00), time(), Chr(0x00), Chr(3)); fwrite($fp, $binary_data, 10); $size = $header['compressed_size']; while ($size != 0)&#123; $read_size = ($size &lt; 1024 ? $size : 1024); $buffer = fread($zip, $read_size); $binary_data = pack('a'.$read_size, $buffer); @fwrite($fp, $binary_data, $read_size); $size -= $read_size; &#125; $binary_data = pack('VV', $header['crc'], $header['size']); fwrite($fp, $binary_data,8); fclose($fp); $gzp = @gzopen($to.$header['filename'].'.gz','rb') or die("Cette archive est compress閑"); if(!$gzp) return(-2); $fp = @fopen($to.$header['filename'],'wb'); if(!$fp) return(-1); $size = $header['size']; while ($size != 0)&#123; $read_size = ($size &lt; 2048 ? $size : 2048); $buffer = gzread($gzp, $read_size); $binary_data = pack('a'.$read_size, $buffer); @fwrite($fp, $binary_data, $read_size); $size -= $read_size; &#125; fclose($fp); gzclose($gzp); touch($to.$header['filename'], $header['mtime']); @unlink($to.$header['filename'].'.gz'); &#125; &#125; $this-&gt;total_files ++; echo "&lt;br /&gt;&lt;input name='dfile[]' type='checkbox' value='$to$header[filename]' checked&gt; &lt;a href='$to$header[filename]' target='_blank'&gt;文件: $to$header[filename]&lt;/a&gt; "; return true; &#125; // end class &#125; set_time_limit(0); if ($_POST['password'] != $password) die("输入的密码不正确，请重新输入。"); if(!$_POST["todir"]) $_POST["todir"] = "."; $z = new Zip; $have_zip_file = 0; function start_unzip($tmp_name,$new_name,$checked)&#123; global $_POST,$z,$have_zip_file; $upfile = array("tmp_name"=&gt;$tmp_name,"name"=&gt;$new_name); if(is_file($upfile[tmp_name]))&#123; $have_zip_file = 1; echo " 正在解压: &lt;br /&gt;&lt;input name='dfile[]' type='checkbox' value='$upfile[name]' ".($checked?"checked":"")."&gt; $upfile[name] "; if(preg_match('/\.zip$/mis',$upfile[name]))&#123; $result=$z-&gt;Extract($upfile[tmp_name],$_POST["todir"]); if($result==-1)&#123; echo " 文件 $upfile[name] 错误. "; &#125; echo " &lt;br /&gt;完成,共建立 $z-&gt;total_folders 个目录,$z-&gt;total_files 个文件. "; &#125;else&#123; echo " $upfile[name] 不是 zip 文件. "; &#125; if(realpath($upfile[name])!=realpath($upfile[tmp_name]))&#123; @unlink($upfile[name]); rename($upfile[tmp_name],$upfile[name]); &#125; &#125; &#125; clearstatcache(); start_unzip($_POST["zipfile"],$_POST["zipfile"],0); start_unzip($_FILES["upfile"][tmp_name],$_FILES["upfile"][name],1); if(!$have_zip_file)&#123; echo " 请选择或上传文件. "; &#125; ?&gt; &lt;input name="password" type="hidden" id="password" value="&lt;?=$_POST['password'];?&gt;"&gt; &lt;input name="myaction" type="hidden" id="myaction" value="dodelete"&gt;&lt;br /&gt; &lt;input name="按钮" type="button" value="返回" onClick="window.location='&lt;?=$_SERVER[PHP_SELF];?&gt;';"&gt; &lt;input type='button' value='反选' onclick='selrev();'&gt; &lt;input type='submit' onclick='return confirm("删除选定文件?");' value='删除选定'&gt; &lt;script language='javascript'&gt; function selrev() &#123; with(document.myform) &#123; for(i=0;i&lt;elements.length;i++) &#123; thiselm = elements[i]; if(thiselm.name.match(/dfile\[]/)) thiselm.checked = !thiselm.checked; &#125; &#125; &#125; alert('完成.'); &lt;/script&gt; &lt;? elseif($_REQUEST["myaction"]=="dodelete"): set_time_limit(0); if ($_POST['password'] != $password) die("输入的密码不正确，请重新输入。"); $dfile = $_POST["dfile"]; echo "正在删除文件... "; if(is_array($dfile))&#123; for($i=count($dfile)-1;$i&gt;=0;$i--)&#123; if(is_file($dfile[$i]))&#123; if(@unlink($dfile[$i]))&#123; echo "已删除文件: $dfile[$i] "; &#125;else&#123; echo "删除文件失败: $dfile[$i] "; &#125; &#125;else&#123; if(@rmdir($dfile[$i]))&#123; echo "已删除目录: $dfile[$i] "; &#125;else&#123; echo "删除目录失败: $dfile[$i] "; &#125; &#125; &#125; &#125; echo " 完成. &lt;input type='button' value='返回' onclick=\"window.location='$_SERVER[PHP_SELF]';\"&gt; &lt;script language='javascript'&gt;('完成.');&lt;/script&gt;"; endif; ?&gt; &lt;/form&gt; &lt;/div&gt; &lt;div id="footer"&gt; &lt;p&gt;&amp;copy; 2011 &lt;a href="http://www.eincy.com"&gt;EinCy&lt;/a&gt;&lt;/p&gt; &lt;div id="eincy"&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[全屏屏蔽、自动居中的lightBox]]></title>
    <url>%2F2012%2F06%2F20%2Fweb-js-lightbox%2F</url>
    <content type="text"><![CDATA[&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;&lt;meta name="author" content="Chomo" /&gt;&lt;link rel="start" href="http://www.14px.com" title="Home" /&gt;&lt;title&gt;全屏屏蔽、自动居中的lightBox&lt;/title&gt;&lt;style type="text/css"&gt;* &#123; margin:0; padding:0; &#125;html,body &#123; height:100%; overflow:hidden; font:12px/1.5 simsun;&#125;.myPage &#123; line-height:3; overflow:auto; width:100%; height:100%;&#125;.lightBox,.popupCover,.popupIframe,.popupComponent &#123; position:absolute; left:0; top:0; width:100%; height:100%;&#125;.popupComponent &#123; z-index:2; display:none;&#125;.popupIframe &#123; display:none; _display:block; _filter:alpha(opacity=0);&#125;.popupCover &#123; background:#000; opacity:0.7; *filter:alpha(opacity=70);&#125;.lightBox &#123; text-align:center; overflow:auto;&#125;.lightBoxContent &#123; display:inline-block; *display:inline; zoom:1; width:300px; padding:10px; background:#fff; border:5px solid #00b4ff; vertical-align:middle;&#125;.lightBoxMaxHeight &#123; display:inline-block; vertical-align:middle; height:100%; *height:99.5%; width:1px; overflow:hidden; margin-left:-1px;&#125;.lightBoxWrapper &#123; display:inline-block; *display:inline; zoom:1; text-align:left;&#125;.lightBoxClose &#123; color:#f00;&#125;.lightBoxSubmit &#123; margin-top:10px; padding-top:5px; border-top:1px solid #ccc;&#125;.lightBoxSubmit input &#123; font-size:12px; padding:0 10px; overflow:visible; margin:0 5px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class="popupComponent" id="lightBox"&gt; &lt;iframe class="popupIframe"&gt;&lt;/iframe&gt; &lt;div class="popupCover"&gt;&lt;/div&gt; &lt;div class="lightBox"&gt; &lt;span class="lightBoxMaxHeight"&gt;&lt;/span&gt; &lt;div class="lightBoxContent"&gt; &lt;div class="lightBoxWrapper"&gt; 当提示小于一行时文字居中&lt;br /&gt; &lt;/div&gt; &lt;div class="lightBoxSubmit"&gt; &lt;input type="button" value="确定" onclick="hideLayer('lightBox')" /&gt; &lt;input type="button" value="取消" onclick="hideLayer('lightBox')" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class="popupComponent" id="lightBox2"&gt; &lt;iframe class="popupIframe"&gt;&lt;/iframe&gt; &lt;div class="popupCover"&gt;&lt;/div&gt; &lt;div class="lightBox"&gt; &lt;div class="lightBoxContent"&gt; &lt;div class="lightBoxWrapper"&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度 当内容已经超过了一屏的高度&lt;br /&gt; &lt;/div&gt; &lt;div class="lightBoxSubmit"&gt; &lt;input type="button" value="确定" onclick="hideLayer('lightBox2')" /&gt; &lt;input type="button" value="取消" onclick="hideLayer('lightBox2')" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;span class="lightBoxMaxHeight"&gt;&lt;/span&gt; &lt;/div&gt;&lt;/div&gt;&lt;div class="myPage"&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; &lt;div style="text-align:center;"&gt;&lt;input type="button" value="位于第一屏的按钮" onclick="showLayer('lightBox')" /&gt;&lt;/div&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; &lt;select&gt;&lt;option&gt;一个用于测试IE6中是否能覆盖住的select&lt;/option&gt;&lt;/select&gt;&lt;br /&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; &lt;select&gt;&lt;option&gt;又一个用于测试IE6中是否能覆盖住的select&lt;/option&gt;&lt;/select&gt;&lt;br /&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; &lt;div style="text-align:center;"&gt;&lt;input type="button" value="位于第二屏中的按钮" onclick="showLayer('lightBox')" /&gt;&lt;input type="button" value="当内容已经超过了一屏的高度" onclick="showLayer('lightBox2')" /&gt;&lt;/div&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt; 假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;假装很丰富的内容&lt;br /&gt;&lt;/div&gt;&lt;script&gt;function showLayer(id) &#123; document.getElementById(id).style.display = "block";&#125;function hideLayer(id) &#123; document.getElementById(id).style.display = "none";&#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
        <tag>lightbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js call]]></title>
    <url>%2F2012%2F06%2F20%2Fweb-js-call%2F</url>
    <content type="text"><![CDATA[&lt;script&gt;function MyObj()&#123; &#125;MyObj.prototype.myMethod = function()&#123;alert(this);&#125;function test()&#123;new MyObj().myMethod(1);MyObj.prototype.myMethod(1);MyObj.prototype.myMethod.call(1);&#125;&lt;/script&gt; 运行结果是： [object Object] [object Object] 1]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js拖动]]></title>
    <url>%2F2012%2F06%2F20%2Fweb-js-dnd%2F</url>
    <content type="text"><![CDATA[&lt;html xmlns="&lt;a href="http://www.w3.org/1999/xhtml"&gt;http://www.w3.org/1999/xhtml&lt;/a&gt;"&gt;&lt;head runat="server"&gt;&lt;title&gt;&lt;/title&gt;&lt;script language=javascript&gt;var intX;var intY;var blnDrag = false; //鼠标是否已经按下//鼠标按下function MouseDown(event,id) &#123;//鼠标按下blnDrag = true;intX = event.clientX - GetDiv(id).style.pixelLeft;intY = event.clientY - GetDiv(id).style.pixelTop;&#125;//鼠标拖动function DragDiv(event,id) &#123;//判断鼠标是否已经按下if (!blnDrag) &#123;return false;&#125;else &#123;GetDiv(id).style.pixelLeft = event.clientX - intX;GetDiv(id).style.pixelTop = event.clientY - intY;&#125;&#125;//鼠标松开时function mouseUp() &#123;//鼠标没有按下blnDrag = false;&#125;//得到DIVfunction GetDiv(id) &#123;return document.getElementById(id);&#125;&lt;/script&gt;&lt;/head&gt;&lt;body &gt;&lt;form id="form1" runat="server"&gt;&lt;div id="div1" style="CURSOR: move; POSITION: absolute; WIDTH: 140px; HEIGHT: 112px; background-color:Red" onmousemove="DragDiv(event,this.id)" onmousedown="MouseDown(event,this.id)" onmouseup="mouseUp()"&gt;&lt;/div&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js回调函数]]></title>
    <url>%2F2012%2F06%2F20%2Fweb-js-callback%2F</url>
    <content type="text"><![CDATA[&lt;html&gt;&lt;head&gt;&lt;title&gt;回调函数(callback)&lt;/title&gt;&lt;script language="javascript" type="text/javascript"&gt;function a(callback) &#123;alert("我是parent函数a！");alert("调用回调函数");callback();&#125;function b()&#123;alert("我是回调函数b");&#125;function c()&#123;alert("我是回调函数c");&#125;function test() &#123;a(b);a(c);&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;学习js回调函数&lt;/h1&gt;&lt;button onClick=test()&gt;click me&lt;/button&gt;&lt;p&gt;应该能看到调用了两个回调函数&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 语言的 XPath API]]></title>
    <url>%2F2012%2F06%2F05%2Fjava-xpath-api%2F</url>
    <content type="text"><![CDATA[如果要告诉别人买一加仑牛奶，您会怎么说？“请去买一加仑牛奶回来” 还是 “从前门出去，向左转，走三个街区向右转，再走半个街区向右转进入商店。走向四号通道，沿通道走五米向左，拿一瓶一加仑装的牛奶然后到收银台付款。再沿原路回家。” 简直太可笑了。只要在 “请去买一加仑牛奶回来” 的基础上稍加指示，多数成人都能自己买回牛奶来。 查询语言和计算机搜索与此类似。直接说 “找一个 Cryptonomicon 的副本” 要比编写搜索某个数据库的详细逻辑容易得多。由于搜索操作的逻辑非常相似，可以发明一种通用语言让您使用 “找到 Neal Stephenson 的所有著作” 这样的命令，然后编写对特定数据存储执行此类查询的引擎。 XPath 在众多查询语言之中，结构化查询语言（SQL）是一种针对查询特定类型的关系库而设计和优化的语言。其他不那么常见的查询语言还有对象查询语言（OQL）和 XQuery。但本文的主题是 XPath，一种为查询 XML 文档而设计的查询语言。比如，下面这个简单的 XPath 查询可以在文档中找到作者为 Neal Stephenson 的所有图书的标题： //book[author="Neal Stephenson"]/title 作为对照，查询同样信息的纯 DOM 搜索代码如下所示： ArrayList result = new ArrayList();NodeList books = doc.getElementsByTagName("book");for (int i = 0; i &lt; books.getLength(); i++) &#123; Element book = (Element) books.item(i); NodeList authors = book.getElementsByTagName("author"); boolean stephenson = false; for (int j = 0; j &lt; authors.getLength(); j++) &#123; Element author = (Element) authors.item(j); NodeList children = author.getChildNodes(); StringBuffer sb = new StringBuffer(); for (int k = 0; k &lt; children.getLength(); k++) &#123; Node child = children.item(k); // really should to do this recursively if (child.getNodeType() == Node.TEXT_NODE) &#123; sb.append(child.getNodeValue()); &#125; &#125; if (sb.toString().equals("Neal Stephenson")) &#123; stephenson = true; break; &#125; &#125; if (stephenson) &#123; NodeList titles = book.getElementsByTagName("title"); for (int j = 0; j &lt; titles.getLength(); j++) &#123; result.add(titles.item(j)); &#125; &#125;&#125; 不论您是否相信，以上代码中的 DOM 显然不如简单的 XPath 表达式通用或者健壮。您愿意编写、调试和维护哪一个？我想答案很明显。 但是虽然有很强的表达能力，XPath 并不是 Java 语言，事实上 XPath 不是一种完整的编程语言。有很多东西用 XPath 表达不出来，甚至有些查询也无法表达。比方说，XPath 不能查找国际标准图书编码（ISBN）检验码不匹配的所有图书，或者找出境外帐户数据库显示欠帐的所有作者。幸运的是，可以把 XPath 结合到 Java 程序中，这样就能发挥两者的优势了：Java 做 Java 所擅长的，XPath 做 XPath 所擅长的。 直到最近，Java 程序执行 XPath 查询所需要的应用程序编程接口（API）还因形形色色的 XPath 引擎而各不相同。Xalan 有一种 API，Saxon 使用另一种，其他引擎则使用其他的 API。这意味着代码往往把您限制到一种产品上。理想情况下，最好能够试验具有不同性能特点的各种引擎，而不会带来不适当的麻烦或者重新编写代码。 于是，Java 5 推出了 javax.xml.xpath 包，提供一个引擎和对象模型独立的 XPath 库。这个包也可用于 Java 1.3 及以后的版本，但需要单独安装 Java API for XML Processing (JAXP) 1.3。Xalan 2.7 和 Saxon 8 以及其他产品包含了这个库的实现。 一个简单的例子 我将举例说明如何使用它。然后再讨论一些细节问题。假设要查询一个图书列表，寻找 Neal Stephenson 的著作。具体来说，这个图书列表的形式如 清单 2 所示： 清单 2. 包含图书信息的 XML 文档 &lt;inventory&gt; &lt;book year="2000"&gt; &lt;title&gt;Snow Crash&lt;/title&gt; &lt;author&gt;Neal Stephenson&lt;/author&gt; &lt;publisher&gt;Spectra&lt;/publisher&gt; &lt;isbn&gt;0553380958&lt;/isbn&gt; &lt;price&gt;14.95&lt;/price&gt; &lt;/book&gt; &lt;book year="2005"&gt; &lt;title&gt;Burning Tower&lt;/title&gt; &lt;author&gt;Larry Niven&lt;/author&gt; &lt;author&gt;Jerry Pournelle&lt;/author&gt; &lt;publisher&gt;Pocket&lt;/publisher&gt; &lt;isbn&gt;0743416910&lt;/isbn&gt; &lt;price&gt;5.99&lt;/price&gt; &lt;book&gt; &lt;book year="1995"&gt; &lt;title&gt;Zodiac&lt;/title&gt; &lt;author&gt;Neal Stephenson&lt;author&gt; &lt;publisher&gt;Spectra&lt;/publisher&gt; &lt;isbn&gt;0553573862&lt;/isbn&gt; &lt;price&gt;7.50&lt;/price&gt; &lt;book&gt; &lt;!-- more books... --&gt; &lt;/inventory&gt; 查找所有图书的 XPath 查询非常简单：//book[author=“Neal Stephenson”]。为了找出这些图书的标题，只要增加一步，表达式就变成了 //book[author=“Neal Stephenson”]/title。最后，真正需要的是 title 元素的文本节点孩子。这就要求再增加一步，完整的表达式就是 //book[author=“Neal Stephenson”]/title/text()。 现在我提供一个简单的程序，它从 Java 语言中执行这个查询，然后把找到的所有图书的标题打印出来。首先，需要将文档加载到一个 DOM Document 对象中。为了简化起见，假设该文档在当前工作目录的 books.xml 文件中。下面的简单代码片段解析文档并建立对应的 Document 对象： 清单 3. 用 JAXP 解析文档 DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance(); factory.setNamespaceAware(true); // never forget this! DocumentBuilder builder = factory.newDocumentBuilder(); Document doc = builder.parse("books.xml"); 到目前为止，这仅仅是标准的 JAXP 和 DOM，没有什么新鲜的。 接下来创建 XPathFactory： XPathFactory factory = XPathFactory.newInstance(); 然后使用这个工厂创建 XPath 对象： XPath xpath = factory.newXPath(); XPath 对象编译 XPath 表达式： PathExpression expr = xpath.compile(&quot;//book[author=‘Neal Stephenson’]/title/text()&quot;); 直接求值 如果 XPath 表达式只使用一次，可以跳过编译步骤直接对 XPath 对象调用 evaluate() 方法。但是，如果同一个表达式要重复使用多次，编译可能更快一些。 最后，计算 XPath 表达式得到结果。表达式是针对特定的上下文节点计算的，在这个例子中是整个文档。还必须指定返回类型。这里要求返回一个节点集： Object result = expr.evaluate(doc, XPathConstants.NODESET); 可以将结果强制转化成 DOM NodeList，然后遍历列表得到所有的标题： NodeList nodes = (NodeList) result; for (int i = 0; i &lt; nodes.getLength(); i++) { System.out.println(nodes.item(i).getNodeValue()); } 清单 4 把上述片段组合到了一个程序中。还要注意，这些方法可能抛出一些检查异常，这些异常必须在 throws 子句中声明，但是我在上面把它们掩盖起来了： 清单 4. 用固定的 XPath 表达式查询 XML 文档的完整程序 import java.io.IOException; import org.w3c.dom.; import org.xml.sax.SAXException; import javax.xml.parsers.; import javax.xml.xpath.*; public class XPathExample { public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException, XPathExpressionException { DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance(); domFactory.setNamespaceAware(true); // never forget this! DocumentBuilder builder = domFactory.newDocumentBuilder(); Document doc = builder.parse(&quot;books.xml&quot;); XPathFactory factory = XPathFactory.newInstance(); XPath xpath = factory.newXPath(); XPathExpression expr = xpath.compile(&quot;//book[author='Neal Stephenson']/title/text()&quot;); Object result = expr.evaluate(doc, XPathConstants.NODESET); NodeList nodes = (NodeList) result; for (int i = 0; i &lt; nodes.getLength(); i++) { System.out.println(nodes.item(i).getNodeValue()); } } } XPath 数据模型 每当混合使用诸如 XPath 和 Java 这样两种不同的语言时，必定会有某些将两者粘合在一起的明显接缝。并非一切都很合拍。XPath 和 Java 语言没有同样的类型系统。XPath 1.0 只有四种基本数据类型： node-set number boolean string 当然，Java 语言有更多的数据类型，包括用户定义的对象类型。 多数 XPath 表达式，特别是位置路径，都返回节点集。但是还有其他可能。比如，XPath 表达式 count(//book) 返回文档中的图书数量。XPath 表达式 count(//book[@author=“Neal Stephenson”]) &gt; 10 返回一个布尔值：如果文档中 Neal Stephenson 的著作超过 10 本则返回 true，否则返回 false。 evaluate() 方法被声明为返回 Object。实际返回什么依赖于 XPath 表达式的结果以及要求的类型。一般来说，XPath 的 number 映射为 java.lang.Double string 映射为 java.lang.String boolean 映射为 java.lang.Boolean node-set 映射为 org.w3c.dom.NodeList XPath 2 前面一直假设您使用的是 XPath 1.0。XPath 2 大大扩展和修改了类型系统。Java XPath API 支持 XPath 2 所需的主要修改是为返回 XPath 2 新数据类型增加常量。 在 Java 中计算 XPath 表达式时，第二个参数指定需要的返回类型。有五种可能，都在 javax.xml.xpath.XPathConstants 类中命名了常量： XPathConstants.NODESET XPathConstants.BOOLEAN XPathConstants.NUMBER XPathConstants.STRING XPathConstants.NODE 最后一个 XPathConstants.NODE 实际上没有匹配的 XPath 类型。只有知道 XPath 表达式只返回一个节点或者只需要一个节点时才使用它。如果 XPath 表达式返回了多个节点并且指定了 XPathConstants.NODE，则 evaluate() 按照文档顺序返回第一个节点。如果 XPath 表达式选择了一个空集并指定了 XPathConstants.NODE，则 evaluate() 返回 null。 如果不能完成要求的转换，evaluate() 将抛出 XPathException。 回页首 名称空间上下文 若 XML 文档中的元素在名称空间中，查询该文档的 XPath 表达式必须使用相同的名称空间。XPath 表达式不一定要使用相同的前缀，只需要名称空间 URI 相同即可。事实上，如果 XML 文档使用默认名称空间，那么尽管目标文档没有使用前缀，XPath 表达式也必须使用前缀。 但是，Java 程序不是 XML 文档，因此不能用一般的名称空间解析。必须提供一个对象将前缀映射到名称空间 URI。该对象是 javax.xml.namespace.NamespaceContext 接口的实例。比如，假设图书文档放在 http://www.example.com/books 名称空间中，如 清单 5 所示： 清单 5. 使用默认名称空间的 XML 文档 Snow Crash Neal Stephenson Spectra 0553380958 14.95 &lt;!-- more books... --&gt; 查找 Neal Stephenson 全部著作标题的 XPath 表达式就要改为 //pre:book[pre:author="Neal Stephenson"]/pre:title/text()。但是，必须将前缀 pre 映射到 URI http://www.example.com/books。NamespaceContext 接口在 Java 软件开发工具箱（JDK）或 JAXP 中没有默认实现似乎有点笨，但确实如此。不过，自己实现也不难。清单 6 对一个名称空间给出了简单的实现。还需要映射 xml 前缀。 清单 6. 绑定一个名称空间和默认名称空间的简单上下文 import java.util.Iterator; import javax.xml.*; import javax.xml.namespace.NamespaceContext; public class PersonalNamespaceContext implements NamespaceContext { public String getNamespaceURI(String prefix) { if (prefix == null) throw new NullPointerException(&quot;Null prefix&quot;); else if (&quot;pre&quot;.equals(prefix)) return &quot;http://www.example.org/books&quot;; else if (&quot;xml&quot;.equals(prefix)) return XMLConstants.XML_NS_URI; return XMLConstants.NULL_NS_URI; } // This method isn't necessary for XPath processing. public String getPrefix(String uri) { throw new UnsupportedOperationException(); } // This method isn't necessary for XPath processing either. public Iterator getPrefixes(String uri) { throw new UnsupportedOperationException(); } } 使用映射存储绑定和增加 setter 方法实现名称空间上下文的重用也不难。 创建 NamespaceContext 对象后，在编译表达式之前将其安装到 XPath 对象上。以后就可以像以前一样是用这些前缀查询了。比如： 清单 7. 使用名称空间的 XPath 查询 XPathFactory factory = XPathFactory.newInstance(); XPath xpath = factory.newXPath(); xpath.setNamespaceContext(new PersonalNamespaceContext()); XPathExpression expr = xpath.compile(&quot;//pre:book[pre:author=‘Neal Stephenson’]/pre:title/text()&quot;); Object result = expr.evaluate(doc, XPathConstants.NODESET); NodeList nodes = (NodeList) result; for (int i = 0; i &lt; nodes.getLength(); i++) { System.out.println(nodes.item(i).getNodeValue()); } 回页首 函数求解器 有时候，在 Java 语言中定义用于 XPath 表达式的扩展函数很有用。这些函数可以执行用纯 XPath 很难或者无法执行的任务。不过必须是真正的函数，而不是随意的方法。就是说不能有副作用。（XPath 函数可以按照任意的顺序求值任意多次。） 通过 Java XPath API 访问的扩展函数必须实现 javax.xml.xpath.XPathFunction 接口。这个接口只声明了一个方法 evaluate： public Object evaluate(List args) throws XPathFunctionException 该方法必须返回 Java 语言能够转换到 XPath 的五种类型之一： String Double Boolean Nodelist Node 比如，清单 8 显示了一个扩展函数，它检查 ISBN 的校验和并返回 Boolean。这个校验和的基本规则是前九位数的每一位乘上它的位置（即第一位数乘上 1，第二位数乘上 2，依次类推）。将这些数加起来然后取除以 11 的余数。如果余数是 10，那么最后一位数就是 X。 清单 8. 检查 ISBN 的 XPath 扩展函数 import java.util.List; import javax.xml.xpath.; import org.w3c.dom.; public class ISBNValidator implements XPathFunction { // This class could easily be implemented as a Singleton. public Object evaluate(List args) throws XPathFunctionException { if (args.size() != 1) { throw new XPathFunctionException(&quot;Wrong number of arguments to valid-isbn()&quot;); } String isbn; Object o = args.get(0); // perform conversions if (o instanceof String) isbn = (String) args.get(0); else if (o instanceof Boolean) isbn = o.toString(); else if (o instanceof Double) isbn = o.toString(); else if (o instanceof NodeList) { NodeList list = (NodeList) o; Node node = list.item(0); // getTextContent is available in Java 5 and DOM 3. // In Java 1.4 and DOM 2, you'd need to recursively // accumulate the content. isbn= node.getTextContent(); } else { throw new XPathFunctionException(&quot;Could not convert argument type&quot;); } char[] data = isbn.toCharArray(); if (data.length != 10) return Boolean.FALSE; int checksum = 0; for (int i = 0; i &lt; 9; i++) { checksum += (i+1) * (data[i]-'0'); } int checkdigit = checksum % 11; if (checkdigit + '0' == data[9] || (data[9] == 'X' &amp;&amp; checkdigit == 10)) { return Boolean.TRUE; } return Boolean.FALSE; } } 下一步让这个扩展函数能够在 Java 程序中使用。为此，需要在编译表达式之前向 XPath 对象安装 javax.xml.xpath.XPathFunctionResolver。函数求解器将函数的 XPath 名称和名称空间 URI 映射到实现该函数的 Java 类。清单 9 是一个简单的函数求解器，将扩展函数 valid-isbn 和名称空间 http://www.example.org/books 映射到 清单 8 中的类。比如，XPath 表达式 //book[not(pre:valid-isbn(isbn))] 可以找到 ISBN 校验和不匹配的所有图书。 清单 9. 识别 valid-isbn 扩展函数的上下文 iimport javax.xml.namespace.QName; import javax.xml.xpath.*; public class ISBNFunctionContext implements XPathFunctionResolver { private static final QName name = new QName(“http://www.example.org/books”, “valid-isbn”); public XPathFunction resolveFunction(QName name, int arity) { if (name.equals(ISBNFunctionContext.name) &amp;&amp; arity == 1) { return new ISBNValidator(); } return null; } } 由于扩展函数必须有名称空间，所以计算包含扩展函数的表达式时必须使用 NamespaceResolver，即便查询的文档没有使用任何名称空间。由于 XPathFunctionResolver、XPathFunction 和 NamespaceResolver 都是接口，如果方便的话可以将它们放在所有的类中。 回页首 结束语 用 SQL 和 XPath 这样的声明性语言编写查询，要比使用 Java 和 C 这样的命令式语言容易得多。但是，用 Java 和 C 这样的图灵完整语言编写复杂的逻辑，又比 SQL 和 XPath 这样的声明性语言容易得多。所幸的是，通过使用 Java Database Connectivity (JDBC) 和 javax.xml.xpath 之类的 API 可以将两者结合起来。随着世界上越来越多的数据转向 XML，javax.xml.xpath 将与 java.sql 一样变得越来越重要。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>xpath</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wget用法]]></title>
    <url>%2F2012%2F06%2F05%2Flinux-wget-guide%2F</url>
    <content type="text"><![CDATA[wget是在Linux下开发的开放源代码的软件，作者是Hrvoje Niksic，后来被移植到包括Windows在内的各个平台上。 它有以下功能和特点： 支持断点下传功能；这一点，也是网络蚂蚁和FlashGet当年最大的卖点，现在，Wget也可以使用此功能，那些网络不是太好的用户可以放心了； 同时支持FTP和HTTP下载方式；尽管现在大部分软件可以使用HTTP方式下载，但是，有些时候，仍然需要使用FTP方式下载软件； 支持代理服务器；对安全强度很高的系统而言，一般不会将自己的系统直接暴露在互联网上，所以，支持代理是下载软件必须有的功能； 设置方便简单；可能，习惯图形界面的用户已经不是太习惯命令行了，但是，命令行在设置上其实有更多的优点，最少，鼠标可以少点很多次，也不要担心是否错点鼠标； 程序小，完全免费；程序小可以考虑不计，因为现在的硬盘实在太大了；完全免费就不得不考虑了，即使网络上有很多所谓的免费软件，但是，这些软件的广告却不是我们喜欢的； wget虽然功能强大，但是使用起来还是比较简单的，基本的语法是：wget [参数列表] URL。 下面就结合具体的例子来说明一下wget的用法。 下载整个http或者ftp站点。 wget http://place.your.url/here 这个命令可以将http://place.your.url/here 首页下载下来。使用-x会强制建立服务器上一模一样的目录，如果使用-nd参数，那么服务器上下载的所有内容都会加到本地当前目录。 wget -r http://place.your.url/here 这 个命令会按照递归的方法，下载服务器上所有的目录和文件，实质就是下载整个网站。这个命令一定要小心使用，因为在下载的时候，被下载网站指向的所有地址同 样会被下载，因此，如果这个网站引用了其他网站，那么被引用的网站也会被下载下来！基于这个原因，这个参数不常用。可以用-l number参数来指定下载的层次。例如只下载两层，那么使用-l 2。 要是您想制作镜像站点，那么可以使用－m参数，例如：wget -m http://place.your.url/here这时wget会自动判断合适的参数来制作镜像站点。此时，wget会登录到服务器上，读入robots.txt并按robots.txt的规定来执行。 断点续传。 当文件特别大或者网络特别慢的时候，往往一个文件还没有下载完，连接就已经被切断，此时就需要断点续传。wget的断点续传是自动的，只需要使用-c参数，例如： wget -c http://the.url.of/incomplete/file使用断点续传要求服务器支持断点续传。-t参数表示重试次数，例如需要重试100次，那么就写-t 100，如果设成-t 0，那么表示无穷次重试，直到连接成功。-T参数表示超时等待时间，例如-T 120，表示等待120秒连接不上就算超时。 批量下载。 如果有多个文件需要下载，那么可以生成一个文件，把每个文件的URL写一行，例如生成文件download.txt，然后用命令：wget -i download.txt这样就会把download.txt里面列出的每个URL都下载下来。（如果列的是文件就下载文件，如果列的是网站，那么下载首页） 选择性的下载。 可以指定让wget只下载一类文件，或者不下载什么文件。例如： wget -m –reject=gif http://target.web.site/subdirectory表示下载http://target.web.site/subdirectory，但是忽略gif文件。–accept=LIST 可以接受的文件类型，–reject=LIST拒绝接受的文件类型。 密码和认证。 wget只能处理利用用户名/密码方式限制访问的网站，可以利用两个参数： –http-user=USER设置HTTP用户 –http-passwd=PASS设置HTTP密码 对于需要证书做认证的网站，就只能利用其他下载工具了，例如curl。 利用代理服务器进行下载。 如果用户的网络需要经过代理服务器，那么可以让wget通过代理服务器进行文件的下载。此时需要在当前用户的目录下创建一个.wgetrc文件。文件中可以设置代理服务器： http-proxy = 111.111.111.111:8080 ftp-proxy = 111.111.111.111:8080 分别表示http的代理服务器和ftp的代理服务器。如果代理服务器需要密码则使用： –proxy-user=USER设置代理用户 –proxy-passwd=PASS设置代理密码 这两个参数。 使用参数–proxy=on/off 使用或者关闭代理。 wget还有很多有用的功能，需要用户去挖掘。 附录： 命令格式： wget [参数列表] [目标软件、网页的网址] -V,–version 显示软件版本号然后退出； -h,–help显示软件帮助信息； -e,–execute=COMMAND 执行一个 “.wgetrc”命令 -o,–output-file=FILE 将软件输出信息保存到文件； -a,–append-output=FILE将软件输出信息追加到文件； -d,–debug显示输出信息； -q,–quiet 不显示输出信息； -i,–input-file=FILE 从文件中取得URL； -t,–tries=NUMBER 是否下载次数（0表示无穷次） -O –output-document=FILE下载文件保存为别的文件名 -nc, –no-clobber 不要覆盖已经存在的文件 -N,–timestamping只下载比本地新的文件 -T,–timeout=SECONDS 设置超时时间 -Y,–proxy=on/off 关闭代理 -nd,–no-directories 不建立目录 -x,–force-directories 强制建立目录 –http-user=USER设置HTTP用户 –http-passwd=PASS设置HTTP密码 –proxy-user=USER设置代理用户 –proxy-passwd=PASS设置代理密码 -r,–recursive 下载整个网站、目录（小心使用） -l,–level=NUMBER 下载层次 -A,–accept=LIST 可以接受的文件类型 -R,–reject=LIST拒绝接受的文件类型 -D,–domains=LIST可以接受的域名 –exclude-domains=LIST拒绝的域名 -L,–relative 下载关联链接 –follow-ftp 只下载FTP链接 -H,–span-hosts 可以下载外面的主机 -I,–include-directories=LIST允许的目录 -X,–exclude-directories=LIST 拒绝的目录 中文文档名在平常的情况下会被编码， 但是在 –cut-dirs 时又是正常的， wget -r -np -nH –cut-dirs=3 ftp://host/test/ 测试.txt wget -r -np -nH -nd ftp://host/test/ %B4%FA%B8%D5.txt wget “ftp://host/test/*” %B4%FA%B8%D5.txt 由 於不知名的原因，可能是为了避开特殊档名， wget 会自动将抓取档名的部分用 encode_string 处理过， 所以该 patch 就把被 encode_string 处理成 “%3A” 这种东西， 用 decode_string 还原成 “:”，并套用在目录与档案名称的部分，decode_string 是 wget 内建的函式。 wget -t0 -c -nH -x -np -b -m -P /home/sunny/NOD32view/ http://downloads1.kaspersky-labs.com/bases/ -o wget.log]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>wget</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Firefox中如何获取网页里的SWF对象]]></title>
    <url>%2F2012%2F06%2F04%2Fweb-get-swf-object-in-firefox%2F</url>
    <content type="text"><![CDATA[我们经常会碰到flash和网页中的js脚本交互的的情况，一般的flash中使用ExternalInterface就可以让as脚本和html容器中的js脚本互相调用。但由于不同浏览器对DOM解析不同，导致有时候无法获取网页中的SWF对象。 下面是网页中插入flash的代码，应该再熟悉不过了： &lt;object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/ flash/swflash.cab#version=7,0,19,0" name="flashrek" width="285" height="200" id="flashrek"&gt;&lt;param name="movie" value="flashrek.swf" /&gt;&lt;param name="quality" value="high" /&gt;&lt;embed src="flashrek.swf" width="285" height="200" quality="high" pluginspage=http://www.macromedia.com/go/getflashplayer type="application/x-shockwave-flash"&gt;&lt;/embed&gt;&lt;/object&gt; 如果用document.getElementById方法来获取flash对象的话，IE中正常而firefox中却不行。这主要是firefox与IE解析DOM的差异导致的，下面给出一种解决方法，同时满足不同浏览器的需求： function getSWF(name)&#123;var e=document.getElementById(name);return (navigator.appName.indexOf("Microsoft") != -1)?e:e. getElementsByTagName("embed")[0];&#125; 使用方法：getSWF(“flashrek”)。其中的参数是插入时设置的flash的ID。]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>swf</tag>
        <tag>flash</tag>
        <tag>firefox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用 jsoup 对 HTML 文档进行解析和操作]]></title>
    <url>%2F2012%2F06%2F04%2Fjava-jsoup-guide%2F</url>
    <content type="text"><![CDATA[jsoup 简介 jsoup 是一款 Java 的 HTML 解析器，可直接解析某个 URL 地址、HTML 文本内容。它提供了一套非常省力的 API，可通过 DOM，CSS 以及类似于 jQuery 的操作方法来取出和操作数据。 jsoup 的主要功能如下： 从一个 URL，文件或字符串中解析 HTML； 使用 DOM 或 CSS 选择器来查找、取出数据； 可操作 HTML 元素、属性、文本； jsoup 是基于 MIT 协议发布的，可放心使用于商业项目。 jsoup 的主要类层次结构如图 1 所示： 图1 jsoup 结构图 接下来我们专门针对几种常见的应用场景举例说明 jsoup 是如何优雅的进行 HTML 文档处理的。 文档输入 jsoup 可以从包括字符串、URL 地址以及本地文件来加载 HTML 文档，并生成 Document 对象实例。 下面是相关代码： // 直接从字符串中输入 HTML 文档 String html = "&lt;html&gt;&lt;head&gt;&lt;title&gt; 开源中国社区 &lt;/title&gt;&lt;/head&gt;" + "&lt;body&gt;&lt;p&gt; 这里是 jsoup 项目的相关文章 &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"; Document doc = Jsoup.parse(html); // 从 URL 直接加载 HTML 文档 Document doc = Jsoup.connect("http://www.oschina.net/").get(); String title = doc.title(); Document doc = Jsoup.connect("http://www.oschina.net/") .data("query", "Java") // 请求参数 .userAgent("I ’ m jsoup") // 设置 User-Agent .cookie("auth", "token") // 设置 cookie .timeout(3000) // 设置连接超时时间 .post(); // 使用 POST 方法访问 URL // 从文件中加载 HTML 文档 File input = new File("D:/test.html"); Document doc = Jsoup.parse(input,"UTF-8","http://www.oschina.net/"); 请大家注意最后一种 HTML 文档输入方式中的 parse 的第三个参数，为什么需要在这里指定一个网址呢（虽然可以不指定，如第一种方法）？因为 HTML 文档中会有很多例如链接、图片以及所引用的外部脚本、css 文件等，而第三个名为 baseURL 的参数的意思就是当 HTML 文档使用相对路径方式引用外部文件时，jsoup 会自动为这些 URL 加上一个前缀，也就是这个 baseURL。 例如&lt;a href=/project&gt; 开源软件 &lt;/a&gt;会被转换成&lt;a href=http://www.oschina.net/project&gt; 开源软件 &lt;/a&gt;。 解析并提取 HTML 元素 这部分涉及一个 HTML 解析器最基本的功能，但 jsoup 使用一种有别于其他开源项目的方式——选择器，我们将在最后一部分详细介绍 jsoup 选择器，本节中你将看到 jsoup 是如何用最简单的代码实现。 不过 jsoup 也提供了传统的 DOM 方式的元素解析，看看下面的代码： File input = new File("D:/test.html"); Document doc = Jsoup.parse(input, "UTF-8", "http://www.oschina.net/"); Element content = doc.getElementById("content"); Elements links = content.getElementsByTag("a"); for (Element link : links) &#123; String linkHref = link.attr("href"); String linkText = link.text(); &#125; 你可能会觉得 jsoup 的方法似曾相识，没错，像 getElementById 和 getElementsByTag 方法跟 JavaScript 的方法名称是一样的，功能也完全一致。你可以根据节点名称或者是 HTML 元素的 id 来获取对应的元素或者元素列表。 与 htmlparser 项目不同的是，jsoup 并没有为 HTML 元素定义一个对应的类，一般一个 HTML 元素的组成部分包括：节点名、属性和文本，jsoup 提供简单的方法供你自己检索这些数据，这也是 jsoup 保持瘦身的原因。 而在元素检索方面，jsoup 的选择器简直无所不能， File input = new File("D:\test.html"); Document doc = Jsoup.parse(input,"UTF-8","http://www.oschina.net/"); Elements links = doc.select("a[href]"); // 具有 href 属性的链接 Elements pngs = doc.select("img[src$=.png]");// 所有引用 png 图片的元素 Element masthead = doc.select("div.masthead").first(); // 找出定义了 class=masthead 的元素 Elements resultLinks = doc.select("h3.r &gt; a"); // direct a after h3 这是 jsoup 真正让我折服的地方，jsoup 使用跟 jQuery 一模一样的选择器对元素进行检索，以上的检索方法如果换成是其他的 HTML 解释器，至少都需要很多行代码，而 jsoup 只需要一行代码即可完成。 jsoup 的选择器还支持表达式功能，我们将在最后一节介绍这个超强的选择器。 修改数据 在解析文档的同时，我们可能会需要对文档中的某些元素进行修改，例如我们可以为文档中的所有图片增加可点击链接、修改链接地址或者是修改文本等。 下面是一些简单的例子： doc.select("div.comments a").attr("rel", "nofollow"); // 为所有链接增加 rel=nofollow 属性 doc.select("div.comments a").addClass("mylinkclass"); // 为所有链接增加 class=mylinkclass 属性 doc.select("img").removeAttr("onclick"); // 删除所有图片的 onclick 属性 doc.select("input[type=text]").val(""); // 清空所有文本输入框中的文本 道理很简单，你只需要利用 jsoup 的选择器找出元素，然后就可以通过以上的方法来进行修改，除了无法修改标签名外（可以删除后再插入新的元素），包括元素的属性和文本都可以修改。 修改完直接调用 Element(s) 的 html() 方法就可以获取修改完的 HTML 文档。 HTML 文档清理 jsoup 在提供强大的 API 同时，人性化方面也做得非常好。在做网站的时候，经常会提供用户评论的功能。有些用户比较淘气，会搞一些脚本到评论内容中，而这些脚本可能会破坏整个页面的行为，更严重的是获取一些机要信息，例如 XSS 跨站点攻击之类的。 jsoup 对这方面的支持非常强大，使用非常简单。看看下面这段代码： String unsafe = "&lt;p&gt;&lt;a href='http://www.oschina.net/' onclick='stealCookies()'&gt; 开源中国社区 &lt;/a&gt;&lt;/p&gt;"; String safe = Jsoup.clean(unsafe, Whitelist.basic()); // 输出 : // &lt;p&gt;&lt;a href="http://www.oschina.net/" rel="nofollow"&gt; 开源中国社区 &lt;/a&gt;&lt;/p&gt; jsoup 使用一个 Whitelist 类用来对 HTML 文档进行过滤，该类提供几个常用方法： 方法名 简介 none() 只允许包含文本信息 basic() 允许的标签包括：a, b, blockquote, br, cite, code, dd, dl, dt, em, i, li, ol, p, pre, q, small, strike, strong, sub, sup, u, ul, 以及合适的属性 simpleText() 只允许 b, em, i, strong, u 这些标签 basicWithImages() 在 basic() 的基础上增加了图片 relaxed() 这个过滤器允许的标签最多，包括：a, b, blockquote, br, caption, cite, code, col, colgroup, dd, dl, dt, em, h1, h2, h3, h4, h5, h6, i, img, li, ol, p, pre, q, small, strike, strong, sub, sup, table, tbody, td, tfoot, th, thead, tr, u, ul 如果这五个过滤器都无法满足你的要求呢，例如你允许用户插入 flash 动画，没关系，Whitelist 提供扩展功能，例如 whitelist.addTags(“embed”,“object”,“param”,“span”,“div”); 也可调用 addAttributes 为某些元素增加属性。 jsoup 的过人之处——选择器 前面我们已经简单的介绍了 jsoup 是如何使用选择器来对元素进行检索的。本节我们把重点放在选择器本身强大的语法上。下表是 jsoup 选择器的所有语法详细列表。 基本用法 语法 简介 tagname 使用标签名来定位，例如 a ns¦tag 使用命名空间的标签定位，例如 fb:name 来查找 &lt;fb:name&gt; 元素 #id 使用元素 id 定位，例如 #logo .class 使用元素的 class 属性定位，例如 .head [attribute] 使用元素的属性进行定位，例如 [href] 表示检索具有 href 属性的所有元素 [^attr] 使用元素的属性名前缀进行定位，例如 [^data-] 用来查找 HTML5 的 dataset 属性 [attr=value] 使用属性值进行定位，例如 [width=500] 定位所有 width 属性值为 500 的元素 [attr^=value], [attr$=value], [attr*=value] 这三个语法分别代表，属性以 value 开头、结尾以及包含 [attr~=regex] 使用正则表达式进行属性值的过滤，例如 img[src~=(?i).(png¦jpe?g)] * 定位所有元素 组合用法 语法 简介 el#id 定位 id 值某个元素，例如 a#logo -&gt; &lt;a id=logo href= … &gt; el.class 定位 class 为指定值的元素，例如 div.head -&gt; &lt;div class=head&gt;xxxx&lt;/div&gt; el[attr] 定位所有定义了某属性的元素，例如 a[href] 以上三个任意组合 例如 a[href]#logo 、a[name].outerlink ancestor child 这五种都是元素之间组合关系的选择器语法，其中包括父子关系、合并关系和层次关系。 parent &gt; child siblingA + siblingB siblingA ~ siblingX el, el, el 除了一些基本的语法以及这些语法进行组合外，jsoup 还支持使用表达式进行元素过滤选择。下面是 jsoup 支持的所有表达式一览表： 表达式： 语法 简介 :lt(n) 例如 td:lt(3) 表示 小于三列 :gt(n) div p:gt(2) 表示 div 中包含 2 个以上的 p :eq(n) form input:eq(1) 表示只包含一个 input 的表单 :has(seletor) div:has§ 表示包含了 p 元素的 div :not(selector) div:not(.logo) 表示不包含 class=logo 元素的所有 div 列表 :contains(text) 包含某文本的元素，不区分大小写，例如 p:contains(oschina) :containsOwn(text) 文本信息完全等于指定条件的过滤 :matches(regex) 使用正则表达式进行文本过滤：div:matches((?i)login) :matchesOwn(regex) 使用正则表达式找到自身的文本 总结 jsoup 的基本功能到这里就介绍完毕，但由于 jsoup 良好的可扩展性 API 设计，你可以通过选择器的定义来开发出非常强大的 HTML 解析功能。再加上 jsoup 项目本身的开发也非常活跃，因此如果你正在使用 Java ，需要对 HTML 进行处理，不妨试试。 参考资料 jsoup 官方网站：http://jsoup.org 开源中国社区上 jsoup 的一些代码片段：http://www.oschina.net/code/list_by_project?id=12689 Htmlparser 项目介绍：http://www.oschina.net/p/htmlparser jQuery 项目介绍：http://www.oschina.net/p/jquery 更多开源项目的介绍来自开源中国社区：http://www.oschina.net developerWorks Java 技术专区： 这里有数百篇关于 Java 编程每个方面的文章。 查看 HTML5 专题，了解更多和 HTML5 相关的知识和动向。]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jsoup</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Css3 transition动画效果]]></title>
    <url>%2F2012%2F06%2F04%2Fweb-css3-transition%2F</url>
    <content type="text"><![CDATA[曾经也尝试过css3的一些新属性，比如圆角、多边框、文字投影、边框阴影，在很大程度上加快了前端开发的速度（—_—如果不考虑IE的话），今天见到了一个新东东，transition，试了一下，太强大了，几行简单的css，就实现了酷炫的动画效果，真是cool！关于transition的更多，请点击http://www.w3.org/TR/css3-transitions/ 先看圆角、阴影（Border-radius） Border-radius：Apx Bpx Cpx Dpx;分别是左上角，右上角，右下角，左下角的圆角半径！ Border-shadow: || ;分别代表阴影水平偏移值（可取正负值）；阴影垂直偏移值（可取正负值）；阴影模糊值；阴影颜色 例子：（圆角，阴影） &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; &lt;title&gt;css3圆角，阴影&lt;/title&gt; &lt;style type="text/css"&gt; body&#123;background-color:#E9E9E9;&#125; .div2&#123;width:100px;height:100px;border:1px solid red;border-radius:2px 4px 6px 20px; -moz-border-radius: 2px 4px 6px 20px;-khtml-border-radius: 2px 4px 6px 20px;-webkit-border-radius: 2px 4px 6px 20px; /*border-radius：四个参数分别为四个角的圆角度数*/ -webkit-box-shadow:5px 3px 6px #999;-moz-box-shadow:5px 3px 6px #999; /*box-shadow：四个参数:阴影水平偏移量｛可取正负值｝，阴影垂直偏移量（可取正负值）；阴影模糊值；阴影颜色*/ text-shadow:5px 2px 6px #000; text-overflow:ellipsis; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&lt;div&gt;不同的圆角&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 下面就一步一步实现图片墙动画效果，这里说明一下，对于此transition，IE浏览器可以直接放弃了，firefox虽然平时挺那个的，这里貌似也靠边站了，这个效果最好的浏览器是chrome，safari4，也就是webkit，firefox3.5勉强凑合，有盒阴影和旋转效果，但是没有动画！ 先看例子：(css3倾斜的图片) &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; &lt;title&gt; transition动画效果&lt;/title&gt; &lt;style type="text/css"&gt; body&#123;background-color:#E9E9E9;&#125; .div3&#123;border:1px solid #bfbfbf;padding:2px;width:120px;height:120px;margin:50px;-webkit-transform:rotate(10deg); -moz-transform:rotate(10deg); transform:rotate(10deg);-webkit-box-shadow:5px 3px 3px #999; -moz-box-shadow:5px 3px 3px #999; box-shadow:5px 3px 3px #999; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&lt;div&gt; &lt;img src="http://www.qdway.com/wp-content/uploads/2011/12/aab.jpg" title="头像" alt="头像"/&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt; 主要运用到的代码是： -webkit-transform:rotate(10deg); -moz-transform:rotate(10deg); transform:rotate(10deg);-webkit-box-shadow:5px 3px 3px #999; -moz-box-shadow:5px 3px 3px #999; box-shadow:5px 3px 3px #999; 首先应该知道的是webkit表示webkit核心的浏览器，是其私有属性，作用于chrome和Safari浏览器，moz是Firefox浏览器的私有属性。 transform中文意思转换，含有多个属性值，其中rotate表示旋转，其他一些属性如scale-尺寸放大缩小（本文将会用到），skew表示倾斜角度，translate表移动距离。例如，本例中，rotate(10deg)表示顺时针旋转10度，如果要逆时针旋转，使用负值就可以了。 box-shadow表示盒阴影，其有四个参数，第一个参数表示水平偏移，例如2px表示投影右偏移2像素，第二个参数表示垂直偏移，2px表示投影向下偏移2像素，第三个参数表示模糊的大小，第四个参数为rgba颜色值 使用transition给单个图片添加悬停动画 有别于上面基础效果CSS代码，这里需要添加一个transition的样式，告诉浏览器，这里要有动画效果。先看一下此相关的CSS代码： .div3&#123;border:1px solid red;width:150px;height:150px;margin:50px;-webkit-transform:rotate(10deg); -moz-transform:rotate(10deg); transform:rotate(10deg);-webkit-box-shadow:5px 3px 3px #999; -moz-box-shadow:5px 3px 3px #999; box-shadow:5px 3px 3px #999;-webkit-transition:all 0.5s ease-in;&#125;.div3:hover&#123;border-color:#9a9a9a; -webkit-transform:rotate(-50deg); -moz-transform:rotate(-50deg); transform:rotate(-50deg);&#125; 代码部分最关键的就是：-webkit-transition:all 0.5s ease-in;目前而言，transition仅webkit核心的浏览器支持，所以此效果仅在chrome或是Safari下有。 transiton属性有这几个值： transition-property :* //指定过渡的性质，比如transition-property:backgrond 就是只指定backgound参与这个过渡transition-duration:*//指定这个过渡的持续时间transition-delay:* //延迟过渡时间transition-timing-function:*//指定过渡类型，有ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier 熟悉flash显示与动画编程的应该知道，这里的过渡类型的含义与flash中缓动类型（远不及flash丰富）是一致的： linear //线性过度ease-in //由慢到快ease-out //由快到慢ease-in-out //由慢到快在到慢 额外的些知识：timing-funciton的几种过度类型都是基于cubic-bezier的某些特定数值。比如ease-in-out的类型它也可以写成cubic-bezier(0.42, 0, 0.58, 1.0)。 transition还支持CSS伪类。 所以，-webkit-transition:all 0.5s ease-in表示的意思就是所有的属性都执行过渡效果，像角度啊，投影大小，边框色或是下面要讲到的比例啦等，执行时间为0.5秒，过渡动画类型为先慢后快。 单张图片的旋转拉近动画效果 鼠标经过图片，图片不仅旋转，而且图片的投影拉长，图片比例变大，于是形成了图片从墙面上浮起来的炫酷效果。 .div4&#123;width:130px;height:130px;padding:5px;margin:40px;border:1px solid #bfbfbf;-webkit-transform:rotate(10deg);-moz-transform:rotate(10deg);transform:rotate(10deg);-webkit-box-shadow:2px 2px 3px rgba(135, 139, 144, 0.4);-moz-box-shadow:2px 2px 3px rgba(135, 139, 144, 0.4); box-shadow:2px 2px 3px rgba(135, 139, 144, 0.4);-webkit-transition:all 0.5s ease-in; &#125;.div4:hover&#123;border-color:#9a9a9a;-webkit-box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4);-moz-box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4); box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4);-webkit-transform:rotate(0deg) scale(1.05);-moz-transform:rotate(0deg) scale(1.05); transform:rotate(0deg) scale(1.05);&#125; 对比三和五部分的CSS代码，您会发现，这里的CSS的hover部分发生了些变化，首先增加的盒阴影样式，box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4);加大了投影的偏移，以及模糊的大小，同时投影的颜色也加深了。另外就是transform:rotate(0deg) scale(1.05);增加了scale属性，scale(1.05)表示1.05倍于原来的尺寸显示。而这些变化在webkit核心的浏览器下都是动画显示的，于是就有了图片的拉伸悬浮效果。 ————————————————-华丽丽的昏割线————————————————- 例子：（Css3 transition动画效果，建议使用chrome，safari4浏览器观看） &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt; &lt;head&gt; &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; &lt;title&gt;Css3 transition动画效果&lt;/title&gt; &lt;style type="text/css"&gt; body&#123;background-color:#E9E9E9;&#125; .div4&#123;padding:2px;width:120px;height:120px;margin:40px;border:1px solid #bfbfbf; -webkit-transform:rotate(10deg);-moz-transform:rotate(10deg); transform:rotate(10deg); -webkit-box-shadow:2px 2px 3px rgba(135, 139, 144, 0.4); -moz-box-shadow:2px 2px 3px rgba(135, 139, 144, 0.4); box-shadow:2px 2px 3px rgba(135, 139, 144, 0.4); -webkit-transition:all 0.5s ease-in; &#125; .div4:hover&#123; border-color:#9a9a9a; -webkit-box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4); -moz-box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4); box-shadow:15px 15px 20px rgba(50, 50, 50, 0.4); -webkit-transform:rotate(0deg) scale(1.05); -moz-transform:rotate(0deg) scale(1.05); transform:rotate(0deg) scale(1.05);&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&lt;div&gt; &lt;img src="http://www.qdway.com/wp-content/uploads/2011/12/aab.jpg" title="头像" alt="头像"/&gt;&lt;/div&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java实现二维码QRCode的编码和解码]]></title>
    <url>%2F2012%2F06%2F04%2Fjava-qrcode%2F</url>
    <content type="text"><![CDATA[涉及到的一些主要类库，方便大家下载： 编码lib：Qrcode_swetake.jar （官网介绍– http://www.swetake.com/qr/index-e.html） 解码lib：qrcode.jar （官网介绍– http://sourceforge.jp/projects/qrcode/） 编码： QRCodeEncoderHandler.java package michael.qrcode;import java.awt.Color;import java.awt.Graphics2D;import java.awt.image.BufferedImage;import java.io.File;import javax.imageio.ImageIO;import com.swetake.util.Qrcode;/*** 二维码生成器*/public class QRCodeEncoderHandler &#123;/*** 生成二维码(QRCode)图片* @param content* @param imgPath*/public void encoderQRCode(String content, String imgPath) &#123;try &#123;Qrcode qrcodeHandler = new Qrcode();qrcodeHandler.setQrcodeErrorCorrect('M');qrcodeHandler.setQrcodeEncodeMode('B');qrcodeHandler.setQrcodeVersion(7);System.out.println(content);byte[] contentBytes = content.getBytes("gb2312");BufferedImage bufImg = new BufferedImage(140, 140,BufferedImage.TYPE_INT_RGB);Graphics2D gs = bufImg.createGraphics();gs.setBackground(Color.WHITE);gs.clearRect(0, 0, 140, 140);// 设定图像颜色&gt; BLACKgs.setColor(Color.BLACK);// 设置偏移量 不设置可能导致解析出错int pixoff = 2;// 输出内容&gt; 二维码if (contentBytes.length &gt; 0 &amp;&amp; contentBytes.length &lt; 120) &#123;boolean[][] codeOut = qrcodeHandler.calQrcode(contentBytes);for (int i = 0; i &lt; codeOut.length; i++) &#123;for (int j = 0; j &lt; codeOut.length; j++) &#123;if (codeOut[j][i]) &#123;gs.fillRect(j * 3 + pixoff, i * 3 + pixoff, 3, 3);&#125;&#125;&#125;&#125; else &#123;System.err.println("QRCode content bytes length = "+ contentBytes.length + " not in [ 0,120 ]. ");&#125;gs.dispose();bufImg.flush();File imgFile = new File(imgPath);// 生成二维码QRCode图片ImageIO.write(bufImg, "png", imgFile);&#125; catch (Exception e) &#123;e.printStackTrace();&#125;&#125;/*** @param args the command line arguments*/public static void main(String[] args) &#123;String imgPath = "D:/test/twocode/Michael_QRCode.png";String content = "Hello 大大、小小,welcome to QRCode!"+ "nMyblog [ http://sjsky.iteye.com ]"+ "nEMail [ sjsky007@gmail.com ]" + "nTwitter [ @suncto ]";QRCodeEncoderHandler handler = new QRCodeEncoderHandler();handler.encoderQRCode(content, imgPath);System.out.println("encoder QRcode success");&#125;&#125; 解码： QRCodeDecoderHandler.java package michael.qrcode;import java.awt.image.BufferedImage;import java.io.File;import java.io.IOException;import javax.imageio.ImageIO;import jp.sourceforge.qrcode.QRCodeDecoder;import jp.sourceforge.qrcode.data.QRCodeImage;import jp.sourceforge.qrcode.exception.DecodingFailedException;/*** @blog http://sjsky.iteye.com* @author Michael*/public class QRCodeDecoderHandler &#123;/*** 解码二维码* @param imgPath* @return String*/public String decoderQRCode(String imgPath) &#123;// QRCode 二维码图片的文件File imageFile = new File(imgPath);BufferedImage bufImg = null;String decodedData = null;try &#123;bufImg = ImageIO.read(imageFile);QRCodeDecoder decoder = new QRCodeDecoder();decodedData = new String(decoder.decode(new J2SEImage(bufImg)));// try &#123;// System.out.println(new String(decodedData.getBytes("gb2312"),// "gb2312"));// &#125; catch (Exception e) &#123;// // TODO: handle exception// &#125;&#125; catch (IOException e) &#123;System.out.println("Error: " + e.getMessage());e.printStackTrace();&#125; catch (DecodingFailedException dfe) &#123;System.out.println("Error: " + dfe.getMessage());dfe.printStackTrace();&#125;return decodedData;&#125;/*** @param args the command line arguments*/public static void main(String[] args) &#123;QRCodeDecoderHandler handler = new QRCodeDecoderHandler();String imgPath = "d:/test/twocode/Michael_QRCode.png";String decoderContent = handler.decoderQRCode(imgPath);System.out.println("解析结果如下：");System.out.println(decoderContent);System.out.println("========decoder success!!!");&#125;class J2SEImage implements QRCodeImage &#123;BufferedImage bufImg;public J2SEImage(BufferedImage bufImg) &#123;this.bufImg = bufImg;&#125;public int getWidth() &#123;return bufImg.getWidth();&#125;public int getHeight() &#123;return bufImg.getHeight();&#125;public int getPixel(int x, int y) &#123;return bufImg.getRGB(x, y);&#125;&#125;&#125; 运行结果如下（解码出的内容和之前输入的内容一致 ）： 解析结果如下： Hello 大大、小小,welcome to QRCode! Myblog [ http://sjsky.iteye.com ] EMail [ sjsky007@gmail.com ] Twitter [ @suncto ] ========decoder success!!!]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>QRCode</tag>
        <tag>二维码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jquery 渐变效果]]></title>
    <url>%2F2012%2F06%2F02%2Fweb-jquery-animate%2F</url>
    <content type="text"><![CDATA[&lt;script type="text/javascript" src="jquery.js"&gt;&lt;/script&gt; &lt;script&gt; function show()&#123; $("#pop").animate(&#123; left:200, top:150, height:400, width:600, opacity:1 &#125;,500,function()&#123;&#125;); &#125; function hide()&#123; $("#pop").animate(&#123; left:0, top:0, height:0, width:0, opacity:0 &#125;,500,function()&#123;&#125;); &#125; &lt;/script&gt; &lt;input type="button" onclick="show()" value="show"/&gt; &lt;input type="button" onclick="hide()" value="hide"/&gt; &lt;div id="pop" style="display:block;width:600px ;height:400px;position:absolute;left:200px;top:150px;border:0px solid red;background:blue;z-index:-1;color:#FFFFFF"&gt; &lt;h3&gt;a demo of jquery animate&lt;/h3&gt; function show()&#123;&lt;/br&gt; $("#pop").animate(&#123;&lt;/br&gt; left:200,&lt;/br&gt; top:200,&lt;/br&gt; height:400,&lt;/br&gt; width:600,&lt;/br&gt; opacity:1&lt;/br&gt; &#125;,500,function()&#123;&#125;);&lt;/br&gt; &#125;&lt;/br&gt; function hide()&#123;&lt;/br&gt; $("#pop").animate(&#123;&lt;/br&gt; left:0,&lt;/br&gt; top:0,&lt;/br&gt; height:0,&lt;/br&gt; width:0,&lt;/br&gt; opacity:0&lt;/br&gt; &#125;,500,function()&#123;&#125;);&lt;/br&gt; &#125;&lt;/br&gt; &lt;/div&gt;]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>web</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java jdbc数据库连接池总结]]></title>
    <url>%2F2012%2F05%2F30%2Fjava-jdbc-dbcp-summary%2F</url>
    <content type="text"><![CDATA[引言 近年来，随着Internet/Intranet建网技术的飞速发展和在世界范围内的迅速普及，计算机应用程序已从传统的桌面应用转到Web应用。基于B/S（Browser/Server）架构的3层开发模式逐渐取代C/S（Client/Server）架构的开发模式，成为开发企业级应用和电子商务普遍采用的技术。在Web应用开发的早期，主要使用的技术是CGI﹑ASP﹑PHP等。之后，Sun公司推出了基于Java语言的Servlet+Jsp+JavaBean技术。相比传统的开发技术，它具有跨平台﹑安全﹑有效﹑可移植等特性，这使其更便于使用和开发。 Java应用程序访问数据库的基本原理 在Java语言中，JDBC（Java DataBase Connection）是应用程序与数据库沟通的桥梁,即Java语言通过JDBC技术访问数据库。JDBC是一种“开放”的方案，它为数据库应用开发人员﹑数据库前台工具开发人员提供了一种标准的应用程序设计接口，使开发人员可以用纯Java语言编写完整的数据库应用程序。JDBC提供两种API，分别是面向开发人员的API和面向底层的JDBC驱动程序API，底层主要通过直接的JDBC驱动和JDBC-ODBC桥驱动实现与数据库的连接。 一般来说，Java应用程序访问数据库的过程（如图1所示）是： 装载数据库驱动程序； 通过JDBC建立数据库连接； 访问数据库，执行SQL语句； 断开数据库连接。 图1Java数据库访问机制 JDBC作为一种数据库访问技术，具有简单易用的优点。但使用这种模式进行Web应用程序开发，存在很多问题：首先，每一次Web请求都要建立一次数据库连接。建立连接是一个费时的活动，每次都得花费0.05s～1s的时间，而且系统还要分配内存资源。这个时间对于一次或几次数据库操作，或许感觉不出系统有多大的开销。可是对于现在的Web应用，尤其是大型电子商务网站，同时有几百人甚至几千人在线是很正常的事。在这种情况下，频繁的进行数据库连接操作势必占用很多的系统资源，网站的响应速度必定下降，严重的甚至会造成服务器的崩溃。不是危言耸听，这就是制约某些电子商务网站发展的技术瓶颈问题。其次，对于每一次数据库连接，使用完后都得断开。否则，如果程序出现异常而未能关闭，将会导致数据库系统中的内存泄漏，最终将不得不重启数据库。还有，这种开发不能控制被创建的连接对象数，系统资源会被毫无顾及的分配出去，如连接过多，也可能导致内存泄漏，服务器崩溃。 数据库连接池（connection pool）的工作原理 基本概念及原理 由上面的分析可以看出，问题的根源就在于对数据库连接资源的低效管理。我们知道， 对于共享资源，有一个很著名的设计模式：资源池（Resource Pool）。该模式正是为了解决资源的频繁分配﹑释放所造成的问题。为解决上述问题，可以采用数据库连接池技术。数据库连接池的基本思想就是为数据库连接建立一个“缓冲池”。预先在缓冲池中放入一定数量的连接，当需要建立数据库连接时，只需从“缓冲池”中取出一个，使用完毕之后再放回去。我们可以通过设定连接池最大连接数来防止系统无尽的与数据库连接。更为重要的是我们可以通过连接池的管理机制监视数据库的连接的数量﹑使用情况，为系统开发﹑测试及性能调整提供依据。连接池的基本工作原理见下图2。 图2连接池的基本工作原理 服务器自带的连接池 JDBC的API中没有提供连接池的方法。一些大型的WEB应用服务器如BEA的WebLogic和IBM的WebSphere等提供了连接池的机制，但是必须有其第三方的专用类方法支持连接池的用法。 连接池关键问题分析 并发问题 为了使连接管理服务具有最大的通用性，必须考虑多线程环境，即并发问题。这个问题相对比较好解决，因为Java语言自身提供了对并发管理的支持，使用synchronized关键字即可确保线程是同步的。使用方法为直接在类方法前面加上synchronized关键字，如： public synchronized Connection getConnection() 多数据库服务器和多用户 对于大型的企业级应用，常常需要同时连接不同的数据库（如连接Oracle和Sybase）。如何连接不同的数据库呢？我们采用的策略是：设计一个符合单例模式的连接池管理类，在连接池管理类的唯一实例被创建时读取一个资源文件，其中资源文件中存放着多个数据库的url地址（&lt;poolName.url&gt;）﹑用户名（&lt;poolName.user&gt;）﹑密码（&lt;poolName.password&gt;）等信息。如tx.url=192.168.1.123:5000/tx_it，tx.user=cyl，tx.password=123456。根据资源文件提供的信息，创建多个连接池类的实例，每一个实例都是一个特定数据库的连接池。连接池管理类实例为每个连接池实例取一个名字，通过不同的名字来管理不同的连接池。 对于同一个数据库有多个用户使用不同的名称和密码访问的情况，也可以通过资源文件处理，即在资源文件中设置多个具有相同url地址，但具有不同用户名和密码的数据库连接信息。 事务处理 我们知道，事务具有原子性，此时要求对数据库的操作符合“ALL-ALL-NOTHING”原则,即对于一组SQL语句要么全做，要么全不做。 在Java语言中，Connection类本身提供了对事务的支持，可以通过设置Connection的AutoCommit属性为false,然后显式的调用commit或rollback方法来实现。但要高效的进行Connection复用，就必须提供相应的事务支持机制。可采用每一个事务独占一个连接来实现，这种方法可以大大降低事务管理的复杂性。 连接池的分配与释放 连接池的分配与释放，对系统的性能有很大的影响。合理的分配与释放，可以提高连接的复用度，从而降低建立新连接的开销，同时还可以加快用户的访问速度。 对于连接的管理可使用空闲池。即把已经创建但尚未分配出去的连接按创建时间存放到一个空闲池中。每当用户请求一个连接时，系统首先检查空闲池内有没有空闲连接。如果有就把建立时间最长（通过容器的顺序存放实现）的那个连接分配给他（实际是先做连接是否有效的判断，如果可用就分配给用户，如不可用就把这个连接从空闲池删掉，重新检测空闲池是否还有连接）；如果没有则检查当前所开连接池是否达到连接池所允许的最大连接数（maxConn）,如果没有达到，就新建一个连接，如果已经达到，就等待一定的时间（timeout）。如果在等待的时间内有连接被释放出来就可以把这个连接分配给等待的用户，如果等待时间超过预定时间timeout,则返回空值（null）。系统对已经分配出去正在使用的连接只做计数，当使用完后再返还给空闲池。对于空闲连接的状态，可开辟专门的线程定时检测，这样会花费一定的系统开销，但可以保证较快的响应速度。也可采取不开辟专门线程，只是在分配前检测的方法。 连接池的配置与维护 连接池中到底应该放置多少连接，才能使系统的性能最佳？系统可采取设置最小连接数（minConn）和最大连接数（maxConn）来控制连接池中的连接。最小连接数是系统启动时连接池所创建的连接数。如果创建过多，则系统启动就慢，但创建后系统的响应速度会很快；如果创建过少，则系统启动的很快，响应起来却慢。这样，可以在开发时，设置较小的最小连接数，开发起来会快，而在系统实际使用时设置较大的，因为这样对访问客户来说速度会快些。最大连接数是连接池中允许连接的最大数目，具体设置多少，要看系统的访问量，可通过反复测试，找到最佳点。 如何确保连接池中的最小连接数呢？有动态和静态两种策略。动态即每隔一定时间就对连接池进行检测，如果发现连接数量小于最小连接数，则补充相应数量的新连接,以保证连接池的正常运转。静态是发现空闲连接不够时再去检查。 连接池的实现 连接池模型 本文讨论的连接池包括一个连接池类（DBConnectionPool）和一个连接池管理类（DBConnetionPoolManager）和一个配置文件操作类(ParseDSConfig)。连接池类是对某一数据库所有连接的“缓冲池”，主要实现以下功能： 从连接池获取或创建可用连接； 使用完毕之后，把连接返还给连接池； 在系统关闭前，断开所有连接并释放连接占用的系统资源； 还能够处理无效连接（原来登记为可用的连接，由于某种原因不再可用，如超时，通讯问题），并能够限制连接池中的连接总数不低于某个预定值和不超过某个预定值。 当多数据库时,且数据库是动态增加的话,将会加到配置文件中。 连接池管理类是连接池类的外覆类（wrapper）,符合单例模式，即系统中只能有一个连接池管理类的实例。其主要用于对多个连接池对象的管理，具有以下功能： 装载并注册特定数据库的JDBC驱动程序； 根据属性文件给定的信息，创建连接池对象； 为方便管理多个连接池对象，为每一个连接池对象取一个名字，实现连接池名字与其实例之间的映射； 跟踪客户使用连接情况，以便需要是关闭连接释放资源。连接池管理类的引入主要是为了方便对多个连接池的使用和管理，如系统需要连接不同的数据库，或连接相同的数据库但由于安全性问题，需要不同的用户使用不同的名称和密码。 连接池实现 可以适用多数据库类型的应用以及一种数据库类型多个数据库且数据库的数量可以动态增加的应用程序 文件列表 DBConnectionPool.java 数据库连接池类 DBConnectionManager .java 数据库管理类 DSConfigBean .java 单个数据库连接信息Bean ParseDSConfig.java 操作多(这个’多’包括不同的数据库和同一种数据库有多个数据库) 数据 ds.config.xml 数据库配置文件xml 源代码 DBConnectionPool.java /** * 数据库连接池类 */package com.chunkyo.db;import java.sql.Connection;import java.sql.DriverManager;import java.sql.SQLException;import java.util.ArrayList;import java.util.Iterator;import java.util.Timer;/** * @author chenyanlin * */public class DBConnectionPool implements TimerListener &#123; private Connection con=null; private int inUsed=0; //使用的连接数 private ArrayList freeConnections = new ArrayList();//容器，空闲连接 private int minConn; //最小连接数 private int maxConn; //最大连接 private String name; //连接池名字 private String password; //密码 private String url; //数据库连接地址 private String driver; //驱动 private String user; //用户名 public Timer timer; //定时 /** * */ public DBConnectionPool() &#123; // TODO Auto-generated constructor stub &#125; /** * 创建连接池 * @param driver * @param name * @param URL * @param user * @param password * @param maxConn */ public DBConnectionPool(String name, String driver,String URL, String user, String password, int maxConn) &#123; this.name=name; this.driver=driver; this.url=URL; this.user=user; this.password=password; this.maxConn=maxConn; &#125; /** * 用完，释放连接 * @param con */ public synchronized void freeConnection(Connection con) &#123; this.freeConnections.add(con);//添加到空闲连接的末尾 this.inUsed--; &#125; /** * timeout 根据timeout得到连接 * @param timeout * @return */ public synchronized Connection getConnection(long timeout) &#123; Connection con=null; if(this.freeConnections.size()&gt;0) &#123; con=(Connection)this.freeConnections.get(0); if(con==null)con=getConnection(timeout); //继续获得连接 &#125; else &#123; con=newConnection(); //新建连接 &#125; if(this.maxConn==0||this.maxConn&lt;this.inUsed) &#123; con=null;//达到最大连接数，暂时不能获得连接了。 &#125; if(con!=null) &#123; this.inUsed++; &#125; return con; &#125; /** * * 从连接池里得到连接 * @return */ public synchronized Connection getConnection() &#123; Connection con=null; if(this.freeConnections.size()&gt;0) &#123; con=(Connection)this.freeConnections.get(0); this.freeConnections.remove(0);//如果连接分配出去了，就从空闲连接里删除 if(con==null)con=getConnection(); //继续获得连接 &#125; else &#123; con=newConnection(); //新建连接 &#125; if(this.maxConn==0||this.maxConn&lt;this.inUsed) &#123; con=null;//等待 超过最大连接时 &#125; if(con!=null) &#123; this.inUsed++; System.out.println("得到 "+this.name+" 的连接，现有"+inUsed+"个连接在使用!"); &#125; return con; &#125; /** *释放全部连接 * */ public synchronized void release() &#123; Iterator allConns=this.freeConnections.iterator(); while(allConns.hasNext()) &#123; Connection con=(Connection)allConns.next(); try &#123; con.close(); &#125; catch(SQLException e) &#123; e.printStackTrace(); &#125; &#125; this.freeConnections.clear(); &#125; /** * 创建新连接 * @return */ private Connection newConnection() &#123; try &#123; Class.forName(driver); con=DriverManager.getConnection(url, user, password); &#125; catch (ClassNotFoundException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); System.out.println("sorry can't find db driver!"); &#125; catch (SQLException e1) &#123; // TODO Auto-generated catch block e1.printStackTrace(); System.out.println("sorry can't create Connection!"); &#125; return con; &#125; /** * 定时处理函数 */ public synchronized void TimerEvent() &#123; //暂时还没有实现以后会加上的 &#125; /** * @param args */ public static void main(String[] args) &#123; // TODO Auto-generated method stub &#125; /** * @return the driver */ public String getDriver() &#123; return driver; &#125; /** * @param driver the driver to set */ public void setDriver(String driver) &#123; this.driver = driver; &#125; /** * @return the maxConn */ public int getMaxConn() &#123; return maxConn; &#125; /** * @param maxConn the maxConn to set */ public void setMaxConn(int maxConn) &#123; this.maxConn = maxConn; &#125; /** * @return the minConn */ public int getMinConn() &#123; return minConn; &#125; /** * @param minConn the minConn to set */ public void setMinConn(int minConn) &#123; this.minConn = minConn; &#125; /** * @return the name */ public String getName() &#123; return name; &#125; /** * @param name the name to set */ public void setName(String name) &#123; this.name = name; &#125; /** * @return the password */ public String getPassword() &#123; return password; &#125; /** * @param password the password to set */ public void setPassword(String password) &#123; this.password = password; &#125; /** * @return the url */ public String getUrl() &#123; return url; &#125; /** * @param url the url to set */ public void setUrl(String url) &#123; this.url = url; &#125; /** * @return the user */ public String getUser() &#123; return user; &#125; /** * @param user the user to set */ public void setUser(String user) &#123; this.user = user; &#125;&#125; DBConnectionManager .java /** * 数据库连接池管理类 */package com.chunkyo.db;import java.sql.Connection;import java.util.ArrayList;import java.util.Enumeration;import java.util.HashMap;import java.util.Hashtable;import java.util.Iterator;import java.util.Properties;import java.util.Vector;import com.chunkyo.db.ParseDSConfig;import com.chunkyo.db.DSConfigBean;import com.chunkyo.db.DBConnectionPool;/** * @author chenyanlin * */public class DBConnectionManager &#123; static private DBConnectionManager instance;//唯一数据库连接池管理实例类 static private int clients; //客户连接数 private Vector drivers = new Vector();//驱动信息 private Hashtable pools=new Hashtable();//连接池 /** * 实例化管理类 */ public DBConnectionManager() &#123; // TODO Auto-generated constructor stub this.init(); &#125; /** * 得到唯一实例管理类 * @return */ static synchronized public DBConnectionManager getInstance() &#123; if(instance==null) &#123; instance=new DBConnectionManager(); &#125; return instance; &#125; /** * 释放连接 * @param name * @param con */ public void freeConnection(String name, Connection con) &#123; DBConnectionPool pool=(DBConnectionPool)pools.get(name);//根据关键名字得到连接池 if(pool!=null) pool.freeConnection(con);//释放连接 &#125; /** * 得到一个连接根据连接池的名字name * @param name * @return */ public Connection getConnection(String name) &#123; DBConnectionPool pool=null; Connection con=null; pool=(DBConnectionPool)pools.get(name);//从名字中获取连接池 con=pool.getConnection();//从选定的连接池中获得连接 if(con!=null) System.out.println("得到连接。。。"); return con; &#125; /** * 得到一个连接，根据连接池的名字和等待时间 * @param name * @param time * @return */ public Connection getConnection(String name, long timeout) &#123; DBConnectionPool pool=null; Connection con=null; pool=(DBConnectionPool)pools.get(name);//从名字中获取连接池 con=pool.getConnection(timeout);//从选定的连接池中获得连接 System.out.println("得到连接。。。"); return con; &#125; /** * 释放所有连接 */ public synchronized void release() &#123; Enumeration allpools=pools.elements(); while(allpools.hasMoreElements()) &#123; DBConnectionPool pool=(DBConnectionPool)allpools.nextElement(); if(pool!=null)pool.release(); &#125; pools.clear(); &#125; /** * 创建连接池 * @param props */ private void createPools(DSConfigBean dsb) &#123; DBConnectionPool dbpool=new DBConnectionPool(); dbpool.setName(dsb.getName()); dbpool.setDriver(dsb.getDriver()); dbpool.setUrl(dsb.getUrl()); dbpool.setUser(dsb.getUsername()); dbpool.setPassword(dsb.getPassword()); dbpool.setMaxConn(dsb.getMaxconn()); System.out.println("ioio:"+dsb.getMaxconn()); pools.put(dsb.getName(), dbpool); &#125; /** * 初始化连接池的参数 */ private void init() &#123; //加载驱动程序 this.loadDrivers(); //创建连接池 Iterator alldriver=drivers.iterator(); while(alldriver.hasNext()) &#123; this.createPools((DSConfigBean)alldriver.next()); System.out.println("创建连接池。。。"); &#125; System.out.println("创建连接池完毕。。。"); &#125; /** * 加载驱动程序 * @param props */ private void loadDrivers() &#123; ParseDSConfig pd=new ParseDSConfig(); //读取数据库配置文件 drivers=pd.readConfigInfo("ds.config.xml"); System.out.println("加载驱动程序。。。"); &#125; /** * @param args */ public static void main(String[] args) &#123; // TODO Auto-generated method stub &#125;&#125; DSConfigBean.java /** * 配置文件Bean类 */package com.chunkyo.db;/** * @author chenyanlin * */public class DSConfigBean &#123; private String type =""; //数据库类型 private String name =""; //连接池名字 private String driver =""; //数据库驱动 private String url =""; //数据库url private String username =""; //用户名 private String password =""; //密码 private int maxconn =0; //最大连接数 /** * */ public DSConfigBean() &#123; // TODO Auto-generated constructor stub &#125; /** * @param args */ public static void main(String[] args) &#123; // TODO Auto-generated method stub &#125; /** * @return the driver */ public String getDriver() &#123; return driver; &#125; /** * @param driver the driver to set */ public void setDriver(String driver) &#123; this.driver = driver; &#125; /** * @return the maxconn */ public int getMaxconn() &#123; return maxconn; &#125; /** * @param maxconn the maxconn to set */ public void setMaxconn(int maxconn) &#123; this.maxconn = maxconn; &#125; /** * @return the name */ public String getName() &#123; return name; &#125; /** * @param name the name to set */ public void setName(String name) &#123; this.name = name; &#125; /** * @return the password */ public String getPassword() &#123; return password; &#125; /** * @param password the password to set */ public void setPassword(String password) &#123; this.password = password; &#125; /** * @return the type */ public String getType() &#123; return type; &#125; /** * @param type the type to set */ public void setType(String type) &#123; this.type = type; &#125; /** * @return the url */ public String getUrl() &#123; return url; &#125; /** * @param url the url to set */ public void setUrl(String url) &#123; this.url = url; &#125; /** * @return the username */ public String getUsername() &#123; return username; &#125; /** * @param username the username to set */ public void setUsername(String username) &#123; this.username = username; &#125;&#125; ParseDSConfig.java /** * 操作配置文件类 读 写 修改 删除等操作 */package com.chunkyo.db;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.util.List;import java.util.Vector;import java.util.Iterator;import org.jdom.Document;import org.jdom.Element;import org.jdom.JDOMException;import org.jdom.input.SAXBuilder;import org.jdom.output.Format;import org.jdom.output.XMLOutputter;/** * @author chenyanlin * */public class ParseDSConfig &#123; /** * 构造函数 */ public ParseDSConfig() &#123; // TODO Auto-generated constructor stub &#125; /** * 读取xml配置文件 * @param path * @return */ public Vector readConfigInfo(String path) &#123; String rpath=this.getClass().getResource("").getPath().substring(1)+path; Vector dsConfig=null; FileInputStream fi = null; try &#123; fi=new FileInputStream(rpath);//读取路径文件 dsConfig=new Vector(); SAXBuilder sb=new SAXBuilder(); Document doc=sb.build(fi); Element root=doc.getRootElement(); List pools=root.getChildren(); Element pool=null; Iterator allPool=pools.iterator(); while(allPool.hasNext()) &#123; pool=(Element)allPool.next(); DSConfigBean dscBean=new DSConfigBean(); dscBean.setType(pool.getChild("type").getText()); dscBean.setName(pool.getChild("name").getText()); System.out.println(dscBean.getName()); dscBean.setDriver(pool.getChild("driver").getText()); dscBean.setUrl(pool.getChild("url").getText()); dscBean.setUsername(pool.getChild("username").getText()); dscBean.setPassword(pool.getChild("password").getText()); dscBean.setMaxconn(Integer.parseInt(pool.getChild("maxconn").getText())); dsConfig.add(dscBean); &#125; &#125; catch (FileNotFoundException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (JDOMException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; finally &#123; try &#123; fi.close(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; return dsConfig; &#125;/** *修改配置文件 没时间写 过段时间再贴上去 其实一样的 */ public void modifyConfigInfo(String path,DSConfigBean dsb) throws Exception &#123; String rpath=this.getClass().getResource("").getPath().substring(1)+path; FileInputStream fi=null; //读出 FileOutputStream fo=null; //写入 &#125;/** *增加配置文件 * */ public void addConfigInfo(String path,DSConfigBean dsb) &#123; String rpath=this.getClass().getResource("").getPath().substring(1)+path; FileInputStream fi=null; FileOutputStream fo=null; try &#123; fi=new FileInputStream(rpath);//读取xml流 SAXBuilder sb=new SAXBuilder(); Document doc=sb.build(fi); //得到xml Element root=doc.getRootElement(); List pools=root.getChildren();//得到xml子树 Element newpool=new Element("pool"); //创建新连接池 Element pooltype=new Element("type"); //设置连接池类型 pooltype.setText(dsb.getType()); newpool.addContent(pooltype); Element poolname=new Element("name");//设置连接池名字 poolname.setText(dsb.getName()); newpool.addContent(poolname); Element pooldriver=new Element("driver"); //设置连接池驱动 pooldriver.addContent(dsb.getDriver()); newpool.addContent(pooldriver); Element poolurl=new Element("url");//设置连接池url poolurl.setText(dsb.getUrl()); newpool.addContent(poolurl); Element poolusername=new Element("username");//设置连接池用户名 poolusername.setText(dsb.getUsername()); newpool.addContent(poolusername); Element poolpassword=new Element("password");//设置连接池密码 poolpassword.setText(dsb.getPassword()); newpool.addContent(poolpassword); Element poolmaxconn=new Element("maxconn");//设置连接池最大连接 poolmaxconn.setText(String.valueOf(dsb.getMaxconn())); newpool.addContent(poolmaxconn); pools.add(newpool);//将child添加到root Format format = Format.getPrettyFormat(); format.setIndent(""); format.setEncoding("utf-8"); XMLOutputter outp = new XMLOutputter(format); fo = new FileOutputStream(rpath); outp.output(doc, fo); &#125; catch (FileNotFoundException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (JDOMException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; finally &#123; &#125; &#125; /** *删除配置文件 */ public void delConfigInfo(String path,String name) &#123; String rpath=this.getClass().getResource("").getPath().substring(1)+path; FileInputStream fi = null; FileOutputStream fo=null; try &#123; fi=new FileInputStream(rpath);//读取路径文件 SAXBuilder sb=new SAXBuilder(); Document doc=sb.build(fi); Element root=doc.getRootElement(); List pools=root.getChildren(); Element pool=null; Iterator allPool=pools.iterator(); while(allPool.hasNext()) &#123; pool=(Element)allPool.next(); if(pool.getChild("name").getText().equals(name)) &#123; pools.remove(pool); break; &#125; &#125; Format format = Format.getPrettyFormat(); format.setIndent(""); format.setEncoding("utf-8"); XMLOutputter outp = new XMLOutputter(format); fo = new FileOutputStream(rpath); outp.output(doc, fo); &#125; catch (FileNotFoundException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (JDOMException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; finally &#123; try &#123; fi.close(); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; &#125; /** * @param args * @throws Exception */ public static void main(String[] args) throws Exception &#123; // TODO Auto-generated method stub ParseDSConfig pd=new ParseDSConfig(); String path="ds.config.xml"; pd.readConfigInfo(path); //pd.delConfigInfo(path, "tj012006"); DSConfigBean dsb=new DSConfigBean(); dsb.setType("oracle"); dsb.setName("yyy004"); dsb.setDriver("org.oracle.jdbc"); dsb.setUrl("jdbc:oracle://localhost"); dsb.setUsername("sa"); dsb.setPassword(""); dsb.setMaxconn(1000); pd.addConfigInfo(path, dsb); pd.delConfigInfo(path, "yyy001"); &#125;&#125; ds.config.xml &lt;ds-config&gt;&lt;pool&gt;&lt;type&gt;mysql&lt;/type&gt;&lt;name&gt;user&lt;/name&gt;&lt;driver&gt;com.mysql.jdbc.driver&lt;/driver&gt;&lt;url&gt;jdbc:mysql://localhost:3306/user&lt;/url&gt;&lt;username&gt;sa&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;maxconn&gt;100&lt;/maxconn&gt;&lt;/pool&gt;&lt;pool&gt;&lt;type&gt;mysql&lt;/type&gt;&lt;name&gt;user2&lt;/name&gt;&lt;driver&gt;com.mysql.jdbc.driver&lt;/driver&gt;&lt;url&gt;jdbc:mysql://localhost:3306/user2&lt;/url&gt;&lt;username&gt;sa&lt;/username&gt;&lt;password&gt;1234&lt;/password&gt;&lt;maxconn&gt;10&lt;/maxconn&gt;&lt;/pool&gt;&lt;pool&gt;&lt;type&gt;sql2000&lt;/type&gt;&lt;name&gt;books&lt;/name&gt;&lt;driver&gt;com.microsoft.sqlserver.driver&lt;/driver&gt;&lt;url&gt;jdbc:sqlserver://localhost:1433/books:databasename=books&lt;/url&gt;&lt;username&gt;sa&lt;/username&gt;&lt;password&gt;&lt;/password&gt;&lt;maxconn&gt;100&lt;/maxconn&gt;&lt;/pool&gt;&lt;/ds-config&gt; 连接池的使用 Connection的获得和释放 DBConnectionManager connectionMan=DBConnectionManager .getInstance();//得到唯一实例 //得到连接 String name="mysql";//从上下文得到你要访问的数据库的名字 Connection con=connectionMan.getConnection(name); //使用 。。。。。。。 // 使用完毕 connectionMan.freeConnection(name,con);//释放，但并未断开连接 数据库连接的动态增加和连接池的动态增加 调用xml操作增加类 重新实例华连接池管理池类]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jdbc</tag>
        <tag>dbcp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java-native2ascii]]></title>
    <url>%2F2012%2F05%2F29%2Fjava-native2ascii%2F</url>
    <content type="text"><![CDATA[/** * native2ascii.exe Java code implementation. * * @author * @version 1.0 */public class Native2Ascii &#123; /** * prefix of ascii string of native character */ private static String PREFIX = "\u"; /** * Native to ascii string. It's same as execut native2ascii.exe. * * @param str * native string * @return ascii string */ public static String native2Ascii(String str) &#123; char[] chars = str.toCharArray(); StringBuilder sb = new StringBuilder(); for (int i = 0; i &lt; chars.length; i++) &#123; sb.append(char2Ascii(chars[i])); &#125; return sb.toString(); &#125; /** * Native character to ascii string. * * @param c * native character * @return ascii string */ private static String char2Ascii(char c) &#123; if (c &gt; 255) &#123; StringBuilder sb = new StringBuilder(); sb.append(PREFIX); int code = (c &gt;&gt; 8); String tmp = Integer.toHexString(code); if (tmp.length() == 1) &#123; sb.append("0"); &#125; sb.append(tmp); code = (c &amp; 0xFF); tmp = Integer.toHexString(code); if (tmp.length() == 1) &#123; sb.append("0"); &#125; sb.append(tmp); return sb.toString(); &#125; else &#123; return Character.toString(c); &#125; &#125; /** * Ascii to native string. It's same as execut native2ascii.exe -reverse. * * @param str * ascii string * @return native string */ public static String ascii2Native(String str) &#123; StringBuilder sb = new StringBuilder(); int begin = 0; int index = str.indexOf(PREFIX); while (index != -1) &#123; sb.append(str.substring(begin, index)); sb.append(ascii2Char(str.substring(index, index + 6))); begin = index + 6; index = str.indexOf(PREFIX, begin); &#125; sb.append(str.substring(begin)); return sb.toString(); &#125; /** * Ascii to native character. * * @param str * ascii string * @return native character */ private static char ascii2Char(String str) &#123; if (str.length() != 6) &#123; throw new IllegalArgumentException( "Ascii string of a native character must be 6 character."); &#125; if (!PREFIX.equals(str.substring(0, 2))) &#123; throw new IllegalArgumentException( "Ascii string of a native character must start with "\u"."); &#125; String tmp = str.substring(2, 4); int code = Integer.parseInt(tmp, 16) &lt;&lt; 8; tmp = str.substring(4, 6); code += Integer.parseInt(tmp, 16); return (char) code; &#125;&#125;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>native2ascii</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[log4j.properties]]></title>
    <url>%2F2012%2F03%2F25%2Fjava-log4j%2F</url>
    <content type="text"><![CDATA[log4j.rootCategory=DEBUG, stdout, R#Console config log4j.appender.stdout=org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout=org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=&lt;%d&gt; &lt;%-5p&gt; &lt;%c&gt; – %n%m(%F:%M:%L)%n#File config log4j.appender.R=org.apache.log4j.RollingFileAppender log4j.appender.R.File=c:/jmsLog.log #log4j.appender.R.File=//oracle/icdc/instance/lib/jmsLog.log log4j.appender.R.MaxFileSize=100KB log4j.appender.R.MaxBackupIndex=0 log4j.appender.R.layout=org.apache.log4j.PatternLayout log4j.appender.R.layout.ConversionPattern=&lt;%d&gt; &lt;%-5p&gt; &lt;%c&gt; – %n%m(%F:%M:%L)%n]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>log4j</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress如何更换域名]]></title>
    <url>%2F2012%2F02%2F01%2Fphp-wp-domain%2F</url>
    <content type="text"><![CDATA[wordpress后台更换域名但不换主机时，怎么才能使以前数据库中的地址变成新域名呢？下面将会介绍wordpress数据库新老域名批量替换的方法。 修改数据库配置文件，如果你在同一主机同一空间上更改域名，这步可以省掉，如果数据库不同，还得要打开wp-config.php将数据库配置正确才可以正常访问新域名。 更改博客的安装地址和博客地址，首先用phpmyadmin打开你的数据库，然后找到wp-options这个数据表，找到第一条记录也就是siteurl这条，还有第39条home，这两条将地址改成你更换后的最域名即可。只有完成这一步后，才可以顺利进入后台，否则即使你输入密码，也会自动跳转到原来的老域名。PHP My管理中选择数据库，—-&gt;点击 SQL 在输入栏中输入如下代码： UPDATE wp_options SET option_value = replace( option_value, ‘http://老域名’, ’http://新域名’) WHERE option_name = ‘home’ OR option_name =’siteurl’ ; 修改文章内部所有的链接为新域名，相信大家在以前发表的文章中一定加了不少内链吧，域名更换了，老的内链也就没有意义了。此时得要将文章内链的旧域名修改为新域名。如果从后台文章编辑里一个一个找那是不现实的，方法有一个，通用phpmyadmin进入你所在的数据库，执行以下语句就可以把文章内的所有内链旧域名批量改为新域名： UPDATE wp_posts SET post_content = replace(post_content, ‘http://老域名’, ‘http://新域名’); UPDATE wp_posts SET guid = replace( guid, ‘http://老域名’ , ’http://新域名’ ) ; 好了进入后台用以前的账号密码登陆就好了。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WordPress RunCode – WordPress文章运行代码插件]]></title>
    <url>%2F2012%2F01%2F30%2Fphp-wp-runcode%2F</url>
    <content type="text"><![CDATA[一直都想在博客文章中实现这个功能，也曾经尝试过把代码加入到PHP页面中去，但总不是太方便，今天，看到了这个功能，被告之是用的一个WordPress文章运行代码插件实现，这个插件就是Sunshow写的WordPress RunCode插件。 WordPress RunCode插件对于做网站前端开发的朋友来说，非常有用。可以在文章中及时地展示自己的一些前端的设计效果，包括CSS、Javascript等等。 使用方法： ……之间加入你要运行的代码即可。]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>wordpress</tag>
        <tag>runcode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Error_establishing_socket的解决方法]]></title>
    <url>%2F2012%2F01%2F10%2Fdb-sqlserver-Error-establishing-socket%2F</url>
    <content type="text"><![CDATA[Error establishing socket的解决方法 如果你在测试连接SQL Server 2000 JDBC连接时出现错误Error establishing socket.请参考如下： 用 CMD 命令NETSTAT查1433(这是默认的端口,可能被占用,你可以重新设一个新的端口)的端口可是居然没有没有打开,先看看你的服务器有没有打开,如果都大开了那就说明你没有装SQL的sp3或sp4的补丁. 还有一个方法看你是不是要打补丁,那就是看看你的版本号: 可以用如下的方式查看MSSQL的版本： 打开企业管理器-〉工具-〉SQL查询分析器-〉帮助-〉关于 查看MSSQL的详细版本号 如果 是 8.00.194 就是还没打补丁 8.00.760 就是SP3 8.00.2039 就是SP4 如果你的版本号是对的,但NETSTAT查1433没有,那可能你的1433端口被占了,换一个端口应该就可以了. 换端口的方法是: 打开企业管理器，依次在控制台根目录 -&gt;Microsoft SQL Servers-&gt;SQL Server 组，列出一部分数据库服务器。 右击我们要连接的数据库服务器，选择属性，在常规选项卡点击网络配置弹出新窗口。 在启用的协议区域我们选择 TCP/IP ，点击属性按钮，弹出新窗口。在这个窗口有网络协议默认值设置，一般默认端口是：1433。 另有一篇网上的方法，供参考： 如运行程序时出现 “Error establishing socket” 错误,则应进行如下调试: 检查SQL SERVER 是否允许远程访问.具体步骤: 打开&quot;企业管理器&quot;,打开控制台根目录&gt;SQL Server 组&gt;数据库 在相应&quot;数据库&quot;上单击右键,选择&quot;属性&quot; 选择&quot;连接&quot;选项卡,检查&quot;远程服务器连接&quot;下,RPC服务是否选择. 使用telnet IP地址 1433,系统是否提示连接出错,如系统提示出错 检查是否防火墙屏蔽了SQL SERVER 或 java IDE 的网络访问端口 如果是,关闭防火墙,重新启动SQL SERVER和java IDE,进行测试, 如果系统仍提示上述错误,尝试下列步骤 检查SQL SERVER 端口号及是否启用了TCP/IP协议,具体步骤: 打开&quot;企业管理器&quot;,打开控制台根目录&gt;SQL Server 组&gt;数据库 在相应&quot;数据库&quot;上单击右键,选择&quot;属性&quot; 选择&quot;常规&quot;选项卡,点击&quot;网络配置&quot;,如启用的协议中无&quot;TCP/IP协议&quot;将其加入 选择&quot;TCP/IP协议&quot;,点击&quot;属性&quot;,检查其端口号是否为1433 如端口号为1433将其修改为其它端口号,修改jdbc连接语句,将端口号同样改为新启用的端口号,如jdbc:microsoft:sqlserver://server_name:1400(假设新端口号为 1400) 以下的方法你每种的去试试: 检查一下sql server的connection有没有full. 如果是认证的问题. 可到sql enterprice manager-&gt;指定server-&gt;内容-&gt;安全性. 把验证改为 SQL server 及 windows. 点选属性检查一下port是否正确. 执行%MSSQL_HOME%/80/Tools/Binn/SVRNETCN.exe 把TCP/IP启用. 关掉防火墙. 把SQL server update到sp3: http://www.microsoft.com/sql/downloads/2000/sp3.asp 经我验证，一般升级到sp3就好用了！]]></content>
      <categories>
        <category>db</category>
      </categories>
      <tags>
        <tag>sql-server</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js获取String的实际长度]]></title>
    <url>%2F2012%2F01%2F10%2Fweb-js-get-string-real-length%2F</url>
    <content type="text"><![CDATA[有时候我们需要知道字符串的实际占用长度，比如汉字“一”实际占用两个阿拉伯“1”的长度 var getStrSize = function(str) &#123; var realLength = 0, len = str.length, charCode = -1; for (var i = 0; i &lt; len; i++) &#123; charCode = str.charCodeAt(i); if (charCode &gt;= 0 &amp;&amp; charCode &lt;= 128) realLength += 1; else realLength += 2; &#125; return realLength;&#125;; 则“123四五六”实际长度为9.]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[将文件藏到图片]]></title>
    <url>%2F2012%2F01%2F10%2Fskill-hide-file-in-picture%2F</url>
    <content type="text"><![CDATA[有些论坛对低权限用户是不开放附件上传功能的，但可能开放图片上传功能，我们可以把我们要上传的非图片文件“隐藏”到图片中，特洛伊木马的方式达到这种目的，当然这不是解决这种问题的唯一方法，你如果愿意也可以贴个外链链到网盘前提是你有你的支持分享下载链接。 copy /b abc.jpg+abc.rar abc.jpg COPY [/D] [/V] [/N] [/Y | /-Y] [/Z] [/L] [/A | /B ] source [/A | /B] [+ source [/A | /B] [+ …]] [destination [/A | /B]] source 指定要复制的文件。 /A 表示一个 ASCII 文本文件。 /B 表示一个二进位文件。 /D 允许解密要创建的目标文件 destination 为新文件指定目录和/或文件名。 /V 验证新文件写入是否正确。 /N 复制带有非 8dot3 名称的文件时， 尽可能使用短文件名。 /Y 不使用确认是否要覆盖现有目标文件 的提示。 /-Y 使用确认是否要覆盖现有目标文件 的提示。 /Z 用可重新启动模式复制已联网的文件。 /L 如果源是符号链接，请将链接复制 到目标而不是源链接指向的实际文件。 命令行开关 /Y 可以在 COPYCMD 环境变量中预先设定。 这可能会被命令行上的 /-Y 替代。除非 COPY 命令是在一个批处理脚本中执行的，默认值应为 在覆盖时进行提示。]]></content>
      <categories>
        <category>技巧</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
</search>